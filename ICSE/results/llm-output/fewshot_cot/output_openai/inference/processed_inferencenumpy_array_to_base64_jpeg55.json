{
    "result": "To create a function `numpy_array_to_base64_jpeg` that converts a NumPy array representing an image into a Base64-encoded JPEG string, you can follow these steps:\n\n1. **Import Necessary Libraries**: You'll need `cv2` for image encoding and `base64` for encoding the image data to Base64.\n\n2. **Check Image Shape**: Ensure the input image is in a format compatible with OpenCV, such as (H, W, 3) for color images or (H, W) for grayscale images.\n\n3. **Encode Image to JPEG**: Use OpenCV's `cv2.imencode` to encode the image as a JPEG.\n\n4. **Convert to Base64**: Use Python's `base64` module to encode the JPEG bytes to a Base64 string.\n\n5. **Return the Base64 String**: Return the resulting Base64-encoded string.\n\nHere's the implementation:\n\n```python\nimport cv2\nimport base64\nimport numpy as np\n\ndef numpy_array_to_base64_jpeg(image: np.ndarray) -> str:\n    \"\"\"\n    Convert a NumPy array representing an image into a Base64-encoded JPEG string.\n\n    Args:\n        image (np.ndarray): A NumPy array representing the image. The array should have a shape\n                            compatible with OpenCV's image encoding, such as (H, W, 3) for a color\n                            image or (H, W) for a grayscale image.\n\n    Returns:\n        str: A Base64-encoded string of the JPEG image.\n    \"\"\"\n    # 1. Check if the image is a valid NumPy array\n    if not isinstance(image, np.ndarray):\n        raise ValueError(\"Input must be a NumPy array.\")\n\n    # 2. Encode the image as a JPEG\n    success, encoded_image = cv2.imencode('.jpg', image)\n    if not success:\n        raise ValueError(\"Image encoding failed.\")\n\n    # 3. Convert the encoded image to a Base64 string\n    base64_string = base64.b64encode(encoded_image).decode('utf-8')\n\n    # 4. Return the Base64-encoded JPEG string\n    return base64_string\n```\n\n### Explanation:\n\n- **Step 1**: Import the necessary libraries. `cv2` is used for image encoding, and `base64` is used for encoding the image data to Base64.\n\n- **Step 2**: Check if the input is a valid NumPy array. This ensures that the function receives the correct input type.\n\n- **Step 3**: Use `cv2.imencode` to encode the image as a JPEG. This function returns a success flag and the encoded image. If encoding fails, raise an error.\n\n- **Step 4**: Convert the encoded image to a Base64 string using `base64.b64encode`. The result is decoded to a UTF-8 string for easy handling.\n\n- **Step 5**: Return the Base64-encoded JPEG string, which can be used for various purposes, such as embedding in HTML or transmitting over a network.",
    "prompt": "Create a Python function numpy_array_to_base64_jpeg that converts a NumPy array representing an image into a Base64-encoded JPEG string. The function takes the following parameter:\n\nimage: A NumPy array representing the image. The array is expected to have a shape compatible with OpenCV's image encoding, such as (H, W, 3) for a color image or (H, W) for a grayscale image.",
    "function_name": "numpy_array_to_base64_jpeg",
    "ground_truth": "inference_sdk/http/utils/encoding.py#L12",
    "test": "tests/inference_sdk/unit_tests/http/utils/test_encoding.py::test_numpy_array_to_base64_jpeg",
    "class": "",
    "stage": "Pre-Post processing",
    "task": "",
    "data": "image"
}