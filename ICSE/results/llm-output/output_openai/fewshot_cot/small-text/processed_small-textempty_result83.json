{
    "result": "Error",
    "prompt": "Generate a Python function called empty_result that returns an empty classification result. The function takes in the following parameters:\n- multi_label: a boolean indicating a multi-label setting if True, otherwise a single-label setting if False\n- num_classes: an integer representing the number of classes\n- return_prediction: a boolean, defaulting to True, indicating whether to return an empty result of prediction\n- return_proba: a boolean, defaulting to True, indicating whether to return an empty result of probabilities\n\nThe function ensures that at least one of 'prediction' and 'proba' must be True. It returns the following outputs:\n- predictions: an empty ndarray of predictions if return_prediction is True, with data type np.int64\n- proba: an empty ndarray of probabilities if return_proba is True, with data type float\n\nIf neither return_prediction nor return_proba is True, the function raises a ValueError(\"Invalid usage: At least one of \\'prediction\\' or \\'proba\\' must be True\") . Depending on the values of multi_label, return_prediction, and return_proba, the function returns empty arrays using either csr_matrix or np.empty.",
    "function_name": "empty_result",
    "ground_truth": "small_text/utils/classification.py",
    "test": "tests/unit/small_text/utils/test_classification.py::ClassificationUtilsTest",
    "class": "",
    "stage": "Evaluating&Metrics",
    "task": "Classification",
    "data": "Text"
}