{
    "result": "To compute the area of a set of bounding boxes specified by their coordinates, you can use the following Python function. This function takes a tensor of shape (N, 4) as input, where each row represents a bounding box in the format (x1, y1, x2, y2). The function calculates the area for each bounding box and returns a tensor of shape (N) containing these areas.\n\nHere's the implementation using PyTorch:\n\n```python\nimport torch\n\ndef box_area(boxes):\n    \"\"\"\n    Computes the area of each bounding box in the input tensor.\n\n    Parameters:\n    boxes (torch.Tensor): A tensor of shape (N, 4) where each row is (x1, y1, x2, y2).\n\n    Returns:\n    torch.Tensor: A tensor of shape (N) containing the area of each bounding box.\n    \"\"\"\n    # Ensure the input is a tensor\n    if not isinstance(boxes, torch.Tensor):\n        raise TypeError(\"Input must be a torch.Tensor\")\n\n    # Check the shape of the input tensor\n    if boxes.ndimension() != 2 or boxes.size(1) != 4:\n        raise ValueError(\"Input tensor must have shape (N, 4)\")\n\n    # Calculate the width and height of each bounding box\n    widths = boxes[:, 2] - boxes[:, 0]\n    heights = boxes[:, 3] - boxes[:, 1]\n\n    # Calculate the area of each bounding box\n    areas = widths * heights\n\n    return areas\n\n# Example usage:\n# boxes = torch.tensor([[1, 2, 3, 4], [0, 0, 5, 5]])\n# print(box_area(boxes))  # Output: tensor([2, 25])\n```\n\n### Explanation:\n- **Input Validation**: The function first checks if the input is a PyTorch tensor and if it has the correct shape (N, 4).\n- **Width and Height Calculation**: For each bounding box, the width is calculated as `x2 - x1` and the height as `y2 - y1`.\n- **Area Calculation**: The area of each bounding box is computed as the product of its width and height.\n- **Return**: The function returns a tensor containing the area of each bounding box.\n\nThis function assumes that the input tensor is well-formed, with `x1 < x2` and `y1 < y2` for each bounding box, as specified in the problem statement.",
    "prompt": "Generate a Python function called box_area that computes the area of a set of bounding boxes specified by their (x1, y1, x2, y2) coordinates. The input is a tensor of shape (N, 4) called boxes, where N is the number of boxes. The boxes are expected to be in (x1, y1, x2, y2) format with 0 <= x1 < x2 and 0 <= y1 < y2. The function returns a tensor of shape (N) containing the area for each box.",
    "function_name": "box_area",
    "ground_truth": "torchvision/ops/boxes.py",
    "test": "test/test_ops.py::TestRoIAlign",
    "class": "",
    "stage": "Inference",
    "task": "Detection",
    "data": "Image"
}