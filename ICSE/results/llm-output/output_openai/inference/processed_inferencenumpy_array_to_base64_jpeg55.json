{
    "result": "To convert a NumPy array representing an image into a Base64-encoded JPEG string, you can use the OpenCV library to encode the image as a JPEG and the `base64` library to encode the resulting byte data into a Base64 string. Here's a function that accomplishes this:\n\n```python\nimport cv2\nimport base64\nimport numpy as np\n\ndef numpy_array_to_base64_jpeg(image: np.ndarray) -> str:\n    # Check if the input is a valid NumPy array\n    if not isinstance(image, np.ndarray):\n        raise ValueError(\"Input must be a NumPy array.\")\n    \n    # Encode the image as a JPEG\n    success, encoded_image = cv2.imencode('.jpg', image)\n    if not success:\n        raise ValueError(\"Image encoding failed.\")\n    \n    # Convert the encoded image to a byte array\n    byte_data = encoded_image.tobytes()\n    \n    # Encode the byte data to a Base64 string\n    base64_string = base64.b64encode(byte_data).decode('utf-8')\n    \n    return base64_string\n\n# Example usage:\n# image = cv2.imread('path_to_image.jpg')  # Load an image using OpenCV\n# base64_jpeg = numpy_array_to_base64_jpeg(image)\n# print(base64_jpeg)\n```\n\n### Explanation:\n\n1. **Input Validation**: The function first checks if the input is a valid NumPy array. If not, it raises a `ValueError`.\n\n2. **Image Encoding**: The function uses OpenCV's `imencode` function to encode the image as a JPEG. The `imencode` function returns a tuple where the first element is a success flag and the second element is the encoded image.\n\n3. **Byte Conversion**: The encoded image is converted to a byte array using the `tobytes` method.\n\n4. **Base64 Encoding**: The byte array is then encoded into a Base64 string using Python's `base64` library. The `b64encode` function returns a byte string, which is then decoded to a regular string using `.decode('utf-8')`.\n\n5. **Return**: The function returns the Base64-encoded JPEG string.\n\nThis function assumes that the input image is in a format compatible with OpenCV, such as a color image with shape `(H, W, 3)` or a grayscale image with shape `(H, W)`.",
    "prompt": "Create a Python function numpy_array_to_base64_jpeg that converts a NumPy array representing an image into a Base64-encoded JPEG string. The function takes the following parameter:\n\nimage: A NumPy array representing the image. The array is expected to have a shape compatible with OpenCV's image encoding, such as (H, W, 3) for a color image or (H, W) for a grayscale image.",
    "function_name": "numpy_array_to_base64_jpeg",
    "ground_truth": "inference_sdk/http/utils/encoding.py#L12",
    "test": "tests/inference_sdk/unit_tests/http/utils/test_encoding.py::test_numpy_array_to_base64_jpeg",
    "class": "",
    "stage": "Pre-Post processing",
    "task": "",
    "data": "image"
}