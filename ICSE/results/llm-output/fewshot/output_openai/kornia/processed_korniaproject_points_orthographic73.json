{
    "result": "To create a Python function called `project_points_orthographic` that projects points from the camera frame into the canonical \\( z=1 \\) plane through orthographic projection, you can follow the structure of the examples provided. Here's how you can implement this function:\n\n```python\nimport torch\n\ndef project_points_orthographic(points_in_camera: torch.Tensor) -> torch.Tensor:\n    \"\"\"\n    Project one or more points from the camera frame into the canonical z=1 plane\n    through orthographic projection.\n\n    Args:\n        points_in_camera (Tensor): Tensor of shape (..., 3) representing the points to project.\n                                   The last dimension should be of size 3, corresponding to (x, y, z).\n\n    Returns:\n        Tensor: Tensor of shape (..., 2) representing the projected points in the z=1 plane.\n\n    Example:\n        >>> points = torch.tensor([1., 2., 3.])\n        >>> project_points_orthographic(points)\n        tensor([1., 2.])\n    \"\"\"\n    # Ensure the input tensor has the correct shape\n    if points_in_camera.shape[-1] != 3:\n        raise ValueError(\"The last dimension of points_in_camera must be 3, representing (x, y, z).\")\n\n    # Extract the x and y coordinates, ignoring the z coordinate\n    projected_points = points_in_camera[..., :2]\n\n    return projected_points\n```\n\n### Explanation:\n- **Input Validation**: The function checks if the last dimension of the input tensor `points_in_camera` is 3, which corresponds to the (x, y, z) coordinates of the points.\n- **Projection**: Orthographic projection in this context means simply ignoring the z-coordinate, so the function extracts the x and y coordinates from the input tensor.\n- **Output**: The function returns a tensor containing only the x and y coordinates, effectively projecting the points onto the z=1 plane.\n\nThis function can handle both single points and batches of points, as long as the last dimension of the input tensor is 3.",
    "prompt": "Create a Python function called project_points_orthographic that Project one or more points from the camera frame into the canonical z=1 plane through orthographic\n    projection.\n\n    .. math::\n        \\begin{bmatrix} u \\\\ v \\end{bmatrix} =\n        \\begin{bmatrix} x \\\\ y \\\\ z \\end{bmatrix}\n\n\n    Args:\n        points_in_camera: Tensor representing the points to project.\n\n    Returns:\n        Tensor representing the projected points.\n\n    Example:\n        >>> points = torch.tensor([1., 2., 3.])\n        >>> project_points_orthographic(points)\n        tensor([1., 2.])",
    "function_name": "project_points_orthographic",
    "ground_truth": "kornia/geometry/camera/projection_orthographic.py",
    "test": "tests/geometry/camera/test_projections.py::TestProjectionOrthographic",
    "class": "",
    "stage": "Model Construction",
    "task": "",
    "data": "Image"
}