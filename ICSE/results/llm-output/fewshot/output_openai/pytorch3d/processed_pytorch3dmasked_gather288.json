{
    "result": "Here's a Python function `masked_gather` that implements the described functionality:\n\n```python\nimport torch\n\ndef masked_gather(points: torch.Tensor, idx: torch.Tensor) -> torch.Tensor:\n    \"\"\"\n    Gather points from a tensor based on indices, handling padding indices.\n\n    Args:\n        points (torch.Tensor): A tensor of shape (batch_size, num_points, point_dim).\n        idx (torch.Tensor): A tensor of indices of shape (batch_size, ...), where -1 indicates padding.\n\n    Returns:\n        torch.Tensor: A tensor of gathered points with the same batch size as `idx` and the last dimension\n                      equal to `point_dim`.\n    \"\"\"\n    if points.size(0) != idx.size(0):\n        raise ValueError(\"The batch dimensions of `points` and `idx` must match.\")\n\n    # Replace -1 indices with 0\n    idx_replaced = idx.clone()\n    idx_replaced[idx_replaced == -1] = 0\n\n    # Gather points based on the modified indices\n    gathered_points = torch.gather(points, 1, idx_replaced.unsqueeze(-1).expand(-1, *idx.shape[1:], points.size(-1)))\n\n    # Set gathered values corresponding to original -1 indices to 0.0\n    mask = (idx == -1).unsqueeze(-1).expand_as(gathered_points)\n    gathered_points[mask] = 0.0\n\n    return gathered_points\n```\n\n### Explanation:\n\n1. **Input Validation**: The function first checks if the batch dimensions of `points` and `idx` match. If not, it raises a `ValueError`.\n\n2. **Index Replacement**: It replaces all `-1` indices in `idx` with `0` to avoid out-of-bounds errors during gathering.\n\n3. **Gathering**: The function uses `torch.gather` to collect points from `points` based on the modified indices. The `unsqueeze` and `expand` methods are used to ensure that the dimensions match for the gather operation.\n\n4. **Masking**: After gathering, it creates a mask to identify where the original `-1` indices were and sets the corresponding gathered values to `0.0`.\n\nThis function should handle various shapes of `idx` and return the gathered points tensor with the same batch size as `idx` and the last dimension equal to `point_dim`.",
    "prompt": "Write a Python function `masked_gather` that collects points from a tensor `points` based on indices provided in `idx`, where some indices might be `-1` to indicate padding. The function should replace `-1` indices with `0`, gather the corresponding points, and then set the gathered values corresponding to the original `-1` indices to `0.0`. Ensure that `points` and `idx` have matching batch dimensions, and raise a `ValueError` if they do not. The function should handle different shapes of `idx` and return the gathered points tensor.",
    "function_name": "masked_gather",
    "ground_truth": "pytorch3d/ops/utils.py",
    "test": "tests/test_sample_farthest_points.py",
    "class": "",
    "stage": "Model Construction",
    "task": "",
    "data": "Image"
}