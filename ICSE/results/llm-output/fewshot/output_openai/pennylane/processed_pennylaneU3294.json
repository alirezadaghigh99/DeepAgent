{
    "result": "To define a Python function called `U3` that represents an arbitrary single qubit unitary operation, you can use the `numpy` library to handle the mathematical operations and complex numbers. Here's how you can implement the function:\n\n```python\nimport numpy as np\n\ndef U3(theta: float, phi: float, delta: float) -> np.ndarray:\n    \"\"\"\n    Represents an arbitrary single qubit unitary operation.\n\n    Args:\n        theta (float): The polar angle.\n        phi (float): The azimuthal angle.\n        delta (float): The quantum phase.\n\n    Returns:\n        np.ndarray: A 2x2 unitary matrix.\n    \"\"\"\n    # Calculate the elements of the unitary matrix\n    cos_theta_2 = np.cos(theta / 2)\n    sin_theta_2 = np.sin(theta / 2)\n    exp_i_delta = np.exp(1j * delta)\n    exp_i_phi = np.exp(1j * phi)\n    exp_i_phi_delta = np.exp(1j * (phi + delta))\n\n    # Construct the 2x2 unitary matrix\n    unitary_matrix = np.array([\n        [cos_theta_2, -exp_i_delta * sin_theta_2],\n        [exp_i_phi * sin_theta_2, exp_i_phi_delta * cos_theta_2]\n    ], dtype=complex)\n\n    return unitary_matrix\n```\n\n### Explanation:\n- **Inputs**: The function takes three float inputs: `theta`, `phi`, and `delta`, which represent the polar angle, azimuthal angle, and quantum phase, respectively.\n- **Matrix Construction**: The function calculates the elements of the unitary matrix using trigonometric functions (`cos` and `sin`) and complex exponentials (`exp`).\n- **Output**: The function returns a 2x2 numpy array of complex numbers representing the unitary matrix.\n\nThis function can be used to simulate quantum operations on a single qubit in quantum computing applications.",
    "prompt": "Define a Python function called U3 that represents an arbitrary single qubit unitary operation. The function takes three input parameters: theta (a float representing the polar angle), phi (a float representing the azimuthal angle), and delta (a float representing the quantum phase). The function returns a 2x2 matrix representing the unitary operation defined by the formula:\n\nU3(theta, phi, delta) = [[cos(theta/2), -exp(i*delta)*sin(theta/2)],\n                         [exp(i*phi)*sin(theta/2), exp(i*(phi+delta))*cos(theta/2)]]\n\nThe output of the function is a 2x2 numpy array representing the unitary matrix.",
    "function_name": "U3",
    "ground_truth": "tests/gate_data.py",
    "test": "tests/ops/qubit/test_parametric_ops.py::TestOperations",
    "class": "",
    "stage": "Pre-Post processing",
    "task": "",
    "data": ""
}