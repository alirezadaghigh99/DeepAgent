{
    "result": "To define the `U3` function in Python, we will follow these steps:\n\n1. **Import Necessary Libraries**: We need to import the `numpy` library to handle complex numbers and matrix operations. Specifically, we'll use `numpy` for trigonometric functions, the exponential function, and to create arrays.\n\n2. **Define the Function**: We'll define a function `U3` that takes three parameters: `theta`, `phi`, and `delta`.\n\n3. **Calculate the Matrix Elements**: Using the given formula, we'll compute each element of the 2x2 matrix.\n\n4. **Return the Matrix**: We'll return the matrix as a 2x2 numpy array.\n\nHere's the complete code:\n\n```python\nimport numpy as np\n\ndef U3(theta, phi, delta):\n    # Calculate each element of the matrix\n    a11 = np.cos(theta / 2)\n    a12 = -np.exp(1j * delta) * np.sin(theta / 2)\n    a21 = np.exp(1j * phi) * np.sin(theta / 2)\n    a22 = np.exp(1j * (phi + delta)) * np.cos(theta / 2)\n    \n    # Create the 2x2 unitary matrix\n    matrix = np.array([[a11, a12],\n                       [a21, a22]])\n    \n    return matrix\n\n# Example usage:\n# theta, phi, delta = 0.5, 0.5, 0.5\n# print(U3(theta, phi, delta))\n```\n\n### Explanation:\n\n- **`np.cos` and `np.sin`**: These functions compute the cosine and sine of an angle, respectively.\n- **`np.exp`**: This function computes the exponential of a given input. Here, it's used to calculate the complex exponential terms.\n- **`1j`**: This represents the imaginary unit in Python, equivalent to the mathematical \\(i\\).\n- **`np.array`**: This function creates a numpy array, which is used to represent the 2x2 matrix.\n\nThis function will return a 2x2 numpy array representing the unitary matrix for the given `theta`, `phi`, and `delta` values.",
    "prompt": "Define a Python function called U3 that represents an arbitrary single qubit unitary operation. The function takes three input parameters: theta (a float representing the polar angle), phi (a float representing the azimuthal angle), and delta (a float representing the quantum phase). The function returns a 2x2 matrix representing the unitary operation defined by the formula:\n\nU3(theta, phi, delta) = [[cos(theta/2), -exp(i*delta)*sin(theta/2)],\n                         [exp(i*phi)*sin(theta/2), exp(i*(phi+delta))*cos(theta/2)]]\n\nThe output of the function is a 2x2 numpy array representing the unitary matrix.",
    "function_name": "U3",
    "ground_truth": "tests/gate_data.py",
    "test": "tests/ops/qubit/test_parametric_ops.py::TestOperations",
    "class": "",
    "stage": "Pre-Post processing",
    "task": "",
    "data": ""
}