output file:
processed_pennylane322.json
function:
allclose
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-autograd] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-numpy]', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-autograd] FAILED', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-numpy] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-autograd]', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-numpy] FAILED', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-autograd] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-autograd]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-autograd]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-autograd]', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-autograd] FAILED', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-autograd] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-numpy]', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-autograd] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-numpy]', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-numpy] FAILED', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-autograd] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-numpy]', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-autograd] FAILED', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-numpy] FAILED', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-autograd] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-autograd]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-numpy]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-autograd]', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-numpy] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-numpy]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-numpy]', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-numpy] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-numpy]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-autograd]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-autograd]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-numpy]', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-numpy] FAILED', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-numpy] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-autograd]', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-numpy] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-numpy]', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-numpy] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-autograd]', '../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-autograd] FAILED'}

All Test Cases On Generated code:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/pennylane/pennylane/venv/bin/python
cachedir: .pytest_cache
benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /local/data0/moved_data/publishablew/pennylane/pennylane/tests
configfile: pytest.ini
plugins: flaky-3.8.1, xdist-3.6.1, split-0.10.0, rng-1.0.0, mock-3.14.0, forked-1.6.0, cov-6.0.0, benchmark-5.1.0
collecting ... collected 60 items

../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-numpy] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-autograd] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-numpy] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-autograd] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-numpy] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-autograd] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-numpy] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-autograd] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-numpy] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-autograd] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-numpy] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-autograd] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-numpy] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-autograd] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-numpy] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-autograd] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex64-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex64-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex128-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex128-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex128-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-numpy] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-autograd] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-numpy] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-autograd] FAILED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-tensorflow] SKIPPED

=================================== FAILURES ===================================
_________ TestPartialTrace.test_single_density_matrix[complex64-numpy] _________

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea9f3d410>
ml_framework = 'numpy', c_dtype = 'complex64'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_single_density_matrix(self, ml_framework, c_dtype):
        """Test partial trace on a single density matrix."""
        # Define a 2-qubit density matrix
        rho = qml.math.asarray(
            np.array([[[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]), like=ml_framework
        )
    
        # Expected result after tracing out the second qubit
        expected = qml.math.asarray(np.array([[[1, 0], [0, 0]]], dtype=c_dtype), like=ml_framework)
    
        # Perform the partial trace
        result = qml.math.quantum.partial_trace(rho, [0], c_dtype=c_dtype)
>       assert qml.math.allclose(result, expected)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:922: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = array([[[1.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j]]], dtype=complex64)
b = array([[[1.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j]]], dtype=complex64)
rtol = 1e-05, atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
_______ TestPartialTrace.test_single_density_matrix[complex64-autograd] ________

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea9f82b10>
ml_framework = 'autograd', c_dtype = 'complex64'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_single_density_matrix(self, ml_framework, c_dtype):
        """Test partial trace on a single density matrix."""
        # Define a 2-qubit density matrix
        rho = qml.math.asarray(
            np.array([[[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]), like=ml_framework
        )
    
        # Expected result after tracing out the second qubit
        expected = qml.math.asarray(np.array([[[1, 0], [0, 0]]], dtype=c_dtype), like=ml_framework)
    
        # Perform the partial trace
        result = qml.math.quantum.partial_trace(rho, [0], c_dtype=c_dtype)
>       assert qml.math.allclose(result, expected)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:922: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = tensor([[[1.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j]]], dtype=complex64, requires_grad=True)
b = tensor([[[1.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j]]], dtype=complex64, requires_grad=True)
rtol = 1e-05, atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
________ TestPartialTrace.test_single_density_matrix[complex128-numpy] _________

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea9f835d0>
ml_framework = 'numpy', c_dtype = 'complex128'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_single_density_matrix(self, ml_framework, c_dtype):
        """Test partial trace on a single density matrix."""
        # Define a 2-qubit density matrix
        rho = qml.math.asarray(
            np.array([[[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]), like=ml_framework
        )
    
        # Expected result after tracing out the second qubit
        expected = qml.math.asarray(np.array([[[1, 0], [0, 0]]], dtype=c_dtype), like=ml_framework)
    
        # Perform the partial trace
        result = qml.math.quantum.partial_trace(rho, [0], c_dtype=c_dtype)
>       assert qml.math.allclose(result, expected)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:922: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = array([[[1.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j]]])
b = array([[[1.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j]]]), rtol = 1e-05
atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
_______ TestPartialTrace.test_single_density_matrix[complex128-autograd] _______

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea9f838d0>
ml_framework = 'autograd', c_dtype = 'complex128'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_single_density_matrix(self, ml_framework, c_dtype):
        """Test partial trace on a single density matrix."""
        # Define a 2-qubit density matrix
        rho = qml.math.asarray(
            np.array([[[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]), like=ml_framework
        )
    
        # Expected result after tracing out the second qubit
        expected = qml.math.asarray(np.array([[[1, 0], [0, 0]]], dtype=c_dtype), like=ml_framework)
    
        # Perform the partial trace
        result = qml.math.quantum.partial_trace(rho, [0], c_dtype=c_dtype)
>       assert qml.math.allclose(result, expected)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:922: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = tensor([[[1.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j]]], requires_grad=True)
b = tensor([[[1.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j]]], requires_grad=True)
rtol = 1e-05, atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
_______ TestPartialTrace.test_batched_density_matrices[complex64-numpy] ________

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea9f91f10>
ml_framework = 'numpy', c_dtype = 'complex64'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_batched_density_matrices(self, ml_framework, c_dtype):
        """Test partial trace on a batch of density matrices."""
        # Define a batch of 2-qubit density matrices
        rho = qml.math.asarray(
            np.array(
                [
                    [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],
                    [[0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],
                ]
            ),
            like=ml_framework,
        )
    
        # rho = qml.math.asarrays(rho)
        # Expected result after tracing out the first qubit for each matrix
        expected = qml.math.asarray(
            np.array([[[1, 0], [0, 0]], [[1, 0], [0, 0]]], dtype=c_dtype), like=ml_framework
        )
    
        # Perform the partial trace
        result = qml.math.quantum.partial_trace(rho, [1], c_dtype=c_dtype)
>       assert qml.math.allclose(result, expected)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:946: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = array([[[1.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j]],

       [[1.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j]]], dtype=complex64)
b = array([[[1.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j]],

       [[1.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j]]], dtype=complex64)
rtol = 1e-05, atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
______ TestPartialTrace.test_batched_density_matrices[complex64-autograd] ______

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea9f92190>
ml_framework = 'autograd', c_dtype = 'complex64'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_batched_density_matrices(self, ml_framework, c_dtype):
        """Test partial trace on a batch of density matrices."""
        # Define a batch of 2-qubit density matrices
        rho = qml.math.asarray(
            np.array(
                [
                    [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],
                    [[0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],
                ]
            ),
            like=ml_framework,
        )
    
        # rho = qml.math.asarrays(rho)
        # Expected result after tracing out the first qubit for each matrix
        expected = qml.math.asarray(
            np.array([[[1, 0], [0, 0]], [[1, 0], [0, 0]]], dtype=c_dtype), like=ml_framework
        )
    
        # Perform the partial trace
        result = qml.math.quantum.partial_trace(rho, [1], c_dtype=c_dtype)
>       assert qml.math.allclose(result, expected)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:946: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = tensor([[[1.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j]],

        [[1.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j]]], dtype=complex64, requires_grad=True)
b = tensor([[[1.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j]],

        [[1.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j]]], dtype=complex64, requires_grad=True)
rtol = 1e-05, atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
_______ TestPartialTrace.test_batched_density_matrices[complex128-numpy] _______

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea9f92c50>
ml_framework = 'numpy', c_dtype = 'complex128'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_batched_density_matrices(self, ml_framework, c_dtype):
        """Test partial trace on a batch of density matrices."""
        # Define a batch of 2-qubit density matrices
        rho = qml.math.asarray(
            np.array(
                [
                    [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],
                    [[0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],
                ]
            ),
            like=ml_framework,
        )
    
        # rho = qml.math.asarrays(rho)
        # Expected result after tracing out the first qubit for each matrix
        expected = qml.math.asarray(
            np.array([[[1, 0], [0, 0]], [[1, 0], [0, 0]]], dtype=c_dtype), like=ml_framework
        )
    
        # Perform the partial trace
        result = qml.math.quantum.partial_trace(rho, [1], c_dtype=c_dtype)
>       assert qml.math.allclose(result, expected)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:946: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = array([[[1.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j]],

       [[1.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j]]])
b = array([[[1.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j]],

       [[1.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j]]])
rtol = 1e-05, atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
_____ TestPartialTrace.test_batched_density_matrices[complex128-autograd] ______

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea9f80590>
ml_framework = 'autograd', c_dtype = 'complex128'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_batched_density_matrices(self, ml_framework, c_dtype):
        """Test partial trace on a batch of density matrices."""
        # Define a batch of 2-qubit density matrices
        rho = qml.math.asarray(
            np.array(
                [
                    [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],
                    [[0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],
                ]
            ),
            like=ml_framework,
        )
    
        # rho = qml.math.asarrays(rho)
        # Expected result after tracing out the first qubit for each matrix
        expected = qml.math.asarray(
            np.array([[[1, 0], [0, 0]], [[1, 0], [0, 0]]], dtype=c_dtype), like=ml_framework
        )
    
        # Perform the partial trace
        result = qml.math.quantum.partial_trace(rho, [1], c_dtype=c_dtype)
>       assert qml.math.allclose(result, expected)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:946: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = tensor([[[1.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j]],

        [[1.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j]]], requires_grad=True)
b = tensor([[[1.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j]],

        [[1.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j]]], requires_grad=True)
rtol = 1e-05, atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
______ TestPartialTrace.test_partial_trace_over_no_wires[complex64-numpy] ______

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea7d05450>
ml_framework = 'numpy', c_dtype = 'complex64'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_partial_trace_over_no_wires(self, ml_framework, c_dtype):
        """Test that tracing over no wires returns the original matrix."""
        # Define a 2-qubit density matrix
        rho = qml.math.asarray(
            np.array([[[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], dtype=c_dtype),
            like=ml_framework,
        )
    
        # Perform the partial trace over no wires
        result = qml.math.quantum.partial_trace(rho, [], c_dtype=c_dtype)
>       assert qml.math.allclose(result, rho)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:959: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = array([[[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j]]], dtype=complex64)
b = array([[[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j]]], dtype=complex64)
rtol = 1e-05, atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
____ TestPartialTrace.test_partial_trace_over_no_wires[complex64-autograd] _____

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea7d05710>
ml_framework = 'autograd', c_dtype = 'complex64'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_partial_trace_over_no_wires(self, ml_framework, c_dtype):
        """Test that tracing over no wires returns the original matrix."""
        # Define a 2-qubit density matrix
        rho = qml.math.asarray(
            np.array([[[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], dtype=c_dtype),
            like=ml_framework,
        )
    
        # Perform the partial trace over no wires
        result = qml.math.quantum.partial_trace(rho, [], c_dtype=c_dtype)
>       assert qml.math.allclose(result, rho)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:959: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = tensor([[[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j]]], dtype=complex64, requires_grad=True)
b = tensor([[[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j]]], dtype=complex64, requires_grad=True)
rtol = 1e-05, atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
_____ TestPartialTrace.test_partial_trace_over_no_wires[complex128-numpy] ______

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea7d06210>
ml_framework = 'numpy', c_dtype = 'complex128'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_partial_trace_over_no_wires(self, ml_framework, c_dtype):
        """Test that tracing over no wires returns the original matrix."""
        # Define a 2-qubit density matrix
        rho = qml.math.asarray(
            np.array([[[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], dtype=c_dtype),
            like=ml_framework,
        )
    
        # Perform the partial trace over no wires
        result = qml.math.quantum.partial_trace(rho, [], c_dtype=c_dtype)
>       assert qml.math.allclose(result, rho)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:959: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = array([[[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j]]])
b = array([[[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j]]])
rtol = 1e-05, atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
____ TestPartialTrace.test_partial_trace_over_no_wires[complex128-autograd] ____

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea7d06510>
ml_framework = 'autograd', c_dtype = 'complex128'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_partial_trace_over_no_wires(self, ml_framework, c_dtype):
        """Test that tracing over no wires returns the original matrix."""
        # Define a 2-qubit density matrix
        rho = qml.math.asarray(
            np.array([[[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], dtype=c_dtype),
            like=ml_framework,
        )
    
        # Perform the partial trace over no wires
        result = qml.math.quantum.partial_trace(rho, [], c_dtype=c_dtype)
>       assert qml.math.allclose(result, rho)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:959: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = tensor([[[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j]]], requires_grad=True)
b = tensor([[[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],
         [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j]]], requires_grad=True)
rtol = 1e-05, atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
_____ TestPartialTrace.test_partial_trace_over_all_wires[complex64-numpy] ______

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea7d10c90>
ml_framework = 'numpy', c_dtype = 'complex64'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_partial_trace_over_all_wires(self, ml_framework, c_dtype):
        """Test that tracing over all wires returns the trace of the matrix."""
        # Define a 2-qubit density matrix
        rho = qml.math.asarray(
            np.array([[[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]), like=ml_framework
        )
        # Expected result after tracing out all qubits
        expected = qml.math.asarray(np.array([1], dtype=c_dtype), like=ml_framework)
    
        # Perform the partial trace over all wires
        result = qml.math.quantum.partial_trace(rho, [0, 1], c_dtype=c_dtype)
>       assert qml.math.allclose(result, expected)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:973: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = array([[[1.+0.j]]], dtype=complex64), b = array([1.+0.j], dtype=complex64)
rtol = 1e-05, atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
____ TestPartialTrace.test_partial_trace_over_all_wires[complex64-autograd] ____

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea7d10f10>
ml_framework = 'autograd', c_dtype = 'complex64'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_partial_trace_over_all_wires(self, ml_framework, c_dtype):
        """Test that tracing over all wires returns the trace of the matrix."""
        # Define a 2-qubit density matrix
        rho = qml.math.asarray(
            np.array([[[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]), like=ml_framework
        )
        # Expected result after tracing out all qubits
        expected = qml.math.asarray(np.array([1], dtype=c_dtype), like=ml_framework)
    
        # Perform the partial trace over all wires
        result = qml.math.quantum.partial_trace(rho, [0, 1], c_dtype=c_dtype)
>       assert qml.math.allclose(result, expected)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:973: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = tensor([[[1.+0.j]]], dtype=complex64, requires_grad=True)
b = tensor([1.+0.j], dtype=complex64, requires_grad=True), rtol = 1e-05
atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
_____ TestPartialTrace.test_partial_trace_over_all_wires[complex128-numpy] _____

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea7d119d0>
ml_framework = 'numpy', c_dtype = 'complex128'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_partial_trace_over_all_wires(self, ml_framework, c_dtype):
        """Test that tracing over all wires returns the trace of the matrix."""
        # Define a 2-qubit density matrix
        rho = qml.math.asarray(
            np.array([[[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]), like=ml_framework
        )
        # Expected result after tracing out all qubits
        expected = qml.math.asarray(np.array([1], dtype=c_dtype), like=ml_framework)
    
        # Perform the partial trace over all wires
        result = qml.math.quantum.partial_trace(rho, [0, 1], c_dtype=c_dtype)
>       assert qml.math.allclose(result, expected)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:973: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = array([[[1.+0.j]]]), b = array([1.+0.j]), rtol = 1e-05, atol = 1e-08
kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
___ TestPartialTrace.test_partial_trace_over_all_wires[complex128-autograd] ____

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea7d11cd0>
ml_framework = 'autograd', c_dtype = 'complex128'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_partial_trace_over_all_wires(self, ml_framework, c_dtype):
        """Test that tracing over all wires returns the trace of the matrix."""
        # Define a 2-qubit density matrix
        rho = qml.math.asarray(
            np.array([[[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]), like=ml_framework
        )
        # Expected result after tracing out all qubits
        expected = qml.math.asarray(np.array([1], dtype=c_dtype), like=ml_framework)
    
        # Perform the partial trace over all wires
        result = qml.math.quantum.partial_trace(rho, [0, 1], c_dtype=c_dtype)
>       assert qml.math.allclose(result, expected)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:973: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = tensor([[[1.+0.j]]], requires_grad=True)
b = tensor([1.+0.j], requires_grad=True), rtol = 1e-05, atol = 1e-08
kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
______ TestPartialTrace.test_partial_trace_single_matrix[complex64-numpy] ______

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea7d176d0>
ml_framework = 'numpy', c_dtype = 'complex64'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_partial_trace_single_matrix(self, ml_framework, c_dtype):
        """Test that partial_trace works on a single matrix."""
        # Define a 2-qubit density matrix
        rho = qml.math.asarray(
            np.array([[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]), like=ml_framework
        )
    
        result = qml.math.quantum.partial_trace(rho, [0], c_dtype=c_dtype)
        expected = qml.math.asarray(np.array([[1, 0], [0, 0]], dtype=c_dtype), like=ml_framework)
    
>       assert qml.math.allclose(result, expected)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:1006: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = array([[1.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j]], dtype=complex64)
b = array([[1.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j]], dtype=complex64)
rtol = 1e-05, atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
____ TestPartialTrace.test_partial_trace_single_matrix[complex64-autograd] _____

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea7d17950>
ml_framework = 'autograd', c_dtype = 'complex64'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_partial_trace_single_matrix(self, ml_framework, c_dtype):
        """Test that partial_trace works on a single matrix."""
        # Define a 2-qubit density matrix
        rho = qml.math.asarray(
            np.array([[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]), like=ml_framework
        )
    
        result = qml.math.quantum.partial_trace(rho, [0], c_dtype=c_dtype)
        expected = qml.math.asarray(np.array([[1, 0], [0, 0]], dtype=c_dtype), like=ml_framework)
    
>       assert qml.math.allclose(result, expected)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:1006: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = tensor([[1.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j]], dtype=complex64, requires_grad=True)
b = tensor([[1.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j]], dtype=complex64, requires_grad=True)
rtol = 1e-05, atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
_____ TestPartialTrace.test_partial_trace_single_matrix[complex128-numpy] ______

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea7d1c450>
ml_framework = 'numpy', c_dtype = 'complex128'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_partial_trace_single_matrix(self, ml_framework, c_dtype):
        """Test that partial_trace works on a single matrix."""
        # Define a 2-qubit density matrix
        rho = qml.math.asarray(
            np.array([[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]), like=ml_framework
        )
    
        result = qml.math.quantum.partial_trace(rho, [0], c_dtype=c_dtype)
        expected = qml.math.asarray(np.array([[1, 0], [0, 0]], dtype=c_dtype), like=ml_framework)
    
>       assert qml.math.allclose(result, expected)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:1006: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = array([[1.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j]])
b = array([[1.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j]]), rtol = 1e-05
atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
____ TestPartialTrace.test_partial_trace_single_matrix[complex128-autograd] ____

self = <test_matrix_manipulation.TestPartialTrace object at 0x7a2ea7d1c750>
ml_framework = 'autograd', c_dtype = 'complex128'

    @pytest.mark.parametrize("c_dtype", dtypes)
    def test_partial_trace_single_matrix(self, ml_framework, c_dtype):
        """Test that partial_trace works on a single matrix."""
        # Define a 2-qubit density matrix
        rho = qml.math.asarray(
            np.array([[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]), like=ml_framework
        )
    
        result = qml.math.quantum.partial_trace(rho, [0], c_dtype=c_dtype)
        expected = qml.math.asarray(np.array([[1, 0], [0, 0]], dtype=c_dtype), like=ml_framework)
    
>       assert qml.math.allclose(result, expected)

/local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py:1006: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = tensor([[1.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j]], requires_grad=True)
b = tensor([[1.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j]], requires_grad=True)
rtol = 1e-05, atol = 1e-08, kwargs = {}

    def allclose(a, b, rtol=1e-05, atol=1e-08, **kwargs):
>       from .temp import allclose
E       ImportError: cannot import name 'allclose' from 'pennylane.math.temp' (/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/temp.py)

/local/data0/moved_data/publishablew/pennylane/pennylane/pennylane/math/utils.py:40: ImportError
=========================== short test summary info ============================
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-numpy]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-autograd]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-numpy]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-autograd]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-numpy]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-autograd]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-numpy]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-autograd]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-numpy]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-autograd]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-numpy]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-autograd]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-numpy]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-autograd]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-numpy]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-autograd]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-numpy]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-autograd]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-numpy]
FAILED ../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-autograd]
=================== 20 failed, 4 passed, 36 skipped in 0.48s ===================


Final Test Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/pennylane/pennylane/venv/bin/python
cachedir: .pytest_cache
benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /local/data0/moved_data/publishablew/pennylane/pennylane/tests
configfile: pytest.ini
plugins: flaky-3.8.1, xdist-3.6.1, split-0.10.0, rng-1.0.0, mock-3.14.0, forked-1.6.0, cov-6.0.0, benchmark-5.1.0
collecting ... collected 60 items

../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex64-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex64-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex128-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex128-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex128-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-tensorflow] SKIPPED

======================== 24 passed, 36 skipped in 0.05s ========================


Initial Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/pennylane/pennylane/venv/bin/python
cachedir: .pytest_cache
benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /local/data0/moved_data/publishablew/pennylane/pennylane/tests
configfile: pytest.ini
plugins: flaky-3.8.1, xdist-3.6.1, split-0.10.0, rng-1.0.0, mock-3.14.0, forked-1.6.0, cov-6.0.0, benchmark-5.1.0
collecting ... collected 60 items

../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_single_density_matrix[complex128-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_batched_density_matrices[complex128-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_no_wires[complex128-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_over_all_wires[complex128-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex64-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex64-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex128-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex128-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_invalid_wire_selection[complex128-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex64-tensorflow] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-numpy] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-autograd] PASSED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-jax] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-torch] SKIPPED
../../../../../../local/data0/moved_data/publishablew/pennylane/pennylane/tests/math/test_matrix_manipulation.py::TestPartialTrace::test_partial_trace_single_matrix[complex128-tensorflow] SKIPPED

======================== 24 passed, 36 skipped in 0.09s ========================
