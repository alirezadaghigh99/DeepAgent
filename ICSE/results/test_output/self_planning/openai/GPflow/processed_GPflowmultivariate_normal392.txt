output file:
processed_GPflowmultivariate_normal392.json
function:
multivariate_normal
Error Cases:
2025-02-14 01:43:07.655445: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1739515387.666969 1849021 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1739515387.670491 1849021 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2025-02-14 01:43:07.683455: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
I0000 00:00:1739515390.305143 1849021 gpu_device.cc:2022] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 9447 MB memory:  -> device: 0, name: NVIDIA GeForce RTX 3060, pci bus id: 0000:06:00.0, compute capability: 8.6
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
I0000 00:00:1739515390.429407 1849021 cuda_solvers.cc:178] Creating GpuSolver handles for stream 0x994c680

Pass or Failed: 0

Related Failed Test Cases:
{'FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x1]', '../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x1] FAILED', '../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x0] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x1]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x0]', '../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x1] FAILED', '../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x0] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x0]', '../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x1] FAILED', '../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x0] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x1]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x0]', '../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x0] FAILED', '../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x1] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x0]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x1]'}

All Test Cases On Generated code:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/GPflow/GPflow/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/GPflow/GPflow
collecting ... collected 8 items

../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x0] FAILED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x1] FAILED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x0] FAILED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x1] FAILED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x0] FAILED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x1] FAILED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x0] FAILED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x1] FAILED

=================================== FAILURES ===================================
__________________ test_multivariate_normal[cov_sqrt0-mu0-x0] __________________

x = array([[-1.01765403, -0.00537403,  1.06163488, -0.91725885,  0.35164835,
        -0.65137092,  1.82427826, -1.00918228...2243,  2.34271528,  0.19744153, -0.88192816,
        -1.24365763, -0.52885334,  0.24640723, -0.45804861,  0.38752235]])
mu = array([[ 1.05849411,  1.6370413 ,  1.0085373 ,  0.98640045, -1.31158298,
        -2.48772531,  0.29169534,  1.9852913 ...2864, -1.52019799, -0.82444307,  1.06771007,
        -0.27982821, -0.11614063, -0.64434952,  2.36960855,  2.01114153]])
cov_sqrt = array([[ 0.03057014, -0.97955357,  0.60391288, -0.18022384],
       [-3.83682883, -0.44780897, -0.62517325, -0.3617504...    [ 1.21348752, -0.57253158,  0.2484494 , -0.75031826],
       [ 1.23810809, -3.25827136, -0.15416474, -0.21225891]])

    @pytest.mark.parametrize("x", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("mu", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("cov_sqrt", [randn(4, 4), np.eye(4)])
    def test_multivariate_normal(x: AnyNDArray, mu: AnyNDArray, cov_sqrt: AnyNDArray) -> None:
        cov = np.dot(cov_sqrt, cov_sqrt.T)
        L = np.linalg.cholesky(cov)
    
>       gp_result = logdensities.multivariate_normal(x, mu, L)

/local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/logdensities.py:50: in multivariate_normal
    return multivariate_normal(x, mu, L)
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:14: in wrapper
    return func(*func_args, **func_kwargs)
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:32: in multivariate_normal
    log_density = -0.5 * (tf.reduce_sum(tf.square(z), axis=0) + log_det_cov + D * tf.math.log(2.0 * np.pi))
/local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow/python/util/traceback_utils.py:153: in error_handler
    raise e.with_traceback(filtered_tb) from None
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

e = _NotOkStatusException(), name = None

    def raise_from_not_ok_status(e, name) -> NoReturn:
      e.message += (" name: " + str(name if name is not None else ""))
>     raise core._status_to_exception(e) from None  # pylint: disable=protected-access
E     tensorflow.python.framework.errors_impl.InvalidArgumentError: cannot compute AddV2 as input #1(zero-based) was expected to be a double tensor but is a float tensor [Op:AddV2] name:

/local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow/python/framework/ops.py:6002: InvalidArgumentError
__________________ test_multivariate_normal[cov_sqrt0-mu0-x1] __________________

x = array([[0.49639867],
       [1.28172236],
       [1.31043352],
       [0.11474461]])
mu = array([[ 1.05849411,  1.6370413 ,  1.0085373 ,  0.98640045, -1.31158298,
        -2.48772531,  0.29169534,  1.9852913 ...2864, -1.52019799, -0.82444307,  1.06771007,
        -0.27982821, -0.11614063, -0.64434952,  2.36960855,  2.01114153]])
cov_sqrt = array([[ 0.03057014, -0.97955357,  0.60391288, -0.18022384],
       [-3.83682883, -0.44780897, -0.62517325, -0.3617504...    [ 1.21348752, -0.57253158,  0.2484494 , -0.75031826],
       [ 1.23810809, -3.25827136, -0.15416474, -0.21225891]])

    @pytest.mark.parametrize("x", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("mu", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("cov_sqrt", [randn(4, 4), np.eye(4)])
    def test_multivariate_normal(x: AnyNDArray, mu: AnyNDArray, cov_sqrt: AnyNDArray) -> None:
        cov = np.dot(cov_sqrt, cov_sqrt.T)
        L = np.linalg.cholesky(cov)
    
>       gp_result = logdensities.multivariate_normal(x, mu, L)

/local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/logdensities.py:50: in multivariate_normal
    return multivariate_normal(x, mu, L)
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:14: in wrapper
    return func(*func_args, **func_kwargs)
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:32: in multivariate_normal
    log_density = -0.5 * (tf.reduce_sum(tf.square(z), axis=0) + log_det_cov + D * tf.math.log(2.0 * np.pi))
/local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow/python/util/traceback_utils.py:153: in error_handler
    raise e.with_traceback(filtered_tb) from None
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

e = _NotOkStatusException(), name = None

    def raise_from_not_ok_status(e, name) -> NoReturn:
      e.message += (" name: " + str(name if name is not None else ""))
>     raise core._status_to_exception(e) from None  # pylint: disable=protected-access
E     tensorflow.python.framework.errors_impl.InvalidArgumentError: cannot compute AddV2 as input #1(zero-based) was expected to be a double tensor but is a float tensor [Op:AddV2] name:

/local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow/python/framework/ops.py:6002: InvalidArgumentError
__________________ test_multivariate_normal[cov_sqrt0-mu1-x0] __________________

x = array([[-1.01765403, -0.00537403,  1.06163488, -0.91725885,  0.35164835,
        -0.65137092,  1.82427826, -1.00918228...2243,  2.34271528,  0.19744153, -0.88192816,
        -1.24365763, -0.52885334,  0.24640723, -0.45804861,  0.38752235]])
mu = array([[-0.58122162],
       [ 0.53604735],
       [-1.03155134],
       [ 1.05020298]])
cov_sqrt = array([[ 0.03057014, -0.97955357,  0.60391288, -0.18022384],
       [-3.83682883, -0.44780897, -0.62517325, -0.3617504...    [ 1.21348752, -0.57253158,  0.2484494 , -0.75031826],
       [ 1.23810809, -3.25827136, -0.15416474, -0.21225891]])

    @pytest.mark.parametrize("x", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("mu", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("cov_sqrt", [randn(4, 4), np.eye(4)])
    def test_multivariate_normal(x: AnyNDArray, mu: AnyNDArray, cov_sqrt: AnyNDArray) -> None:
        cov = np.dot(cov_sqrt, cov_sqrt.T)
        L = np.linalg.cholesky(cov)
    
>       gp_result = logdensities.multivariate_normal(x, mu, L)

/local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/logdensities.py:50: in multivariate_normal
    return multivariate_normal(x, mu, L)
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:14: in wrapper
    return func(*func_args, **func_kwargs)
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:32: in multivariate_normal
    log_density = -0.5 * (tf.reduce_sum(tf.square(z), axis=0) + log_det_cov + D * tf.math.log(2.0 * np.pi))
/local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow/python/util/traceback_utils.py:153: in error_handler
    raise e.with_traceback(filtered_tb) from None
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

e = _NotOkStatusException(), name = None

    def raise_from_not_ok_status(e, name) -> NoReturn:
      e.message += (" name: " + str(name if name is not None else ""))
>     raise core._status_to_exception(e) from None  # pylint: disable=protected-access
E     tensorflow.python.framework.errors_impl.InvalidArgumentError: cannot compute AddV2 as input #1(zero-based) was expected to be a double tensor but is a float tensor [Op:AddV2] name:

/local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow/python/framework/ops.py:6002: InvalidArgumentError
__________________ test_multivariate_normal[cov_sqrt0-mu1-x1] __________________

x = array([[0.49639867],
       [1.28172236],
       [1.31043352],
       [0.11474461]])
mu = array([[-0.58122162],
       [ 0.53604735],
       [-1.03155134],
       [ 1.05020298]])
cov_sqrt = array([[ 0.03057014, -0.97955357,  0.60391288, -0.18022384],
       [-3.83682883, -0.44780897, -0.62517325, -0.3617504...    [ 1.21348752, -0.57253158,  0.2484494 , -0.75031826],
       [ 1.23810809, -3.25827136, -0.15416474, -0.21225891]])

    @pytest.mark.parametrize("x", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("mu", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("cov_sqrt", [randn(4, 4), np.eye(4)])
    def test_multivariate_normal(x: AnyNDArray, mu: AnyNDArray, cov_sqrt: AnyNDArray) -> None:
        cov = np.dot(cov_sqrt, cov_sqrt.T)
        L = np.linalg.cholesky(cov)
    
>       gp_result = logdensities.multivariate_normal(x, mu, L)

/local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/logdensities.py:50: in multivariate_normal
    return multivariate_normal(x, mu, L)
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:14: in wrapper
    return func(*func_args, **func_kwargs)
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:32: in multivariate_normal
    log_density = -0.5 * (tf.reduce_sum(tf.square(z), axis=0) + log_det_cov + D * tf.math.log(2.0 * np.pi))
/local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow/python/util/traceback_utils.py:153: in error_handler
    raise e.with_traceback(filtered_tb) from None
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

e = _NotOkStatusException(), name = None

    def raise_from_not_ok_status(e, name) -> NoReturn:
      e.message += (" name: " + str(name if name is not None else ""))
>     raise core._status_to_exception(e) from None  # pylint: disable=protected-access
E     tensorflow.python.framework.errors_impl.InvalidArgumentError: cannot compute AddV2 as input #1(zero-based) was expected to be a double tensor but is a float tensor [Op:AddV2] name:

/local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow/python/framework/ops.py:6002: InvalidArgumentError
__________________ test_multivariate_normal[cov_sqrt1-mu0-x0] __________________

x = array([[-1.01765403, -0.00537403,  1.06163488, -0.91725885,  0.35164835,
        -0.65137092,  1.82427826, -1.00918228...2243,  2.34271528,  0.19744153, -0.88192816,
        -1.24365763, -0.52885334,  0.24640723, -0.45804861,  0.38752235]])
mu = array([[ 1.05849411,  1.6370413 ,  1.0085373 ,  0.98640045, -1.31158298,
        -2.48772531,  0.29169534,  1.9852913 ...2864, -1.52019799, -0.82444307,  1.06771007,
        -0.27982821, -0.11614063, -0.64434952,  2.36960855,  2.01114153]])
cov_sqrt = array([[1., 0., 0., 0.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.]])

    @pytest.mark.parametrize("x", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("mu", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("cov_sqrt", [randn(4, 4), np.eye(4)])
    def test_multivariate_normal(x: AnyNDArray, mu: AnyNDArray, cov_sqrt: AnyNDArray) -> None:
        cov = np.dot(cov_sqrt, cov_sqrt.T)
        L = np.linalg.cholesky(cov)
    
>       gp_result = logdensities.multivariate_normal(x, mu, L)

/local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/logdensities.py:50: in multivariate_normal
    return multivariate_normal(x, mu, L)
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:14: in wrapper
    return func(*func_args, **func_kwargs)
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:32: in multivariate_normal
    log_density = -0.5 * (tf.reduce_sum(tf.square(z), axis=0) + log_det_cov + D * tf.math.log(2.0 * np.pi))
/local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow/python/util/traceback_utils.py:153: in error_handler
    raise e.with_traceback(filtered_tb) from None
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

e = _NotOkStatusException(), name = None

    def raise_from_not_ok_status(e, name) -> NoReturn:
      e.message += (" name: " + str(name if name is not None else ""))
>     raise core._status_to_exception(e) from None  # pylint: disable=protected-access
E     tensorflow.python.framework.errors_impl.InvalidArgumentError: cannot compute AddV2 as input #1(zero-based) was expected to be a double tensor but is a float tensor [Op:AddV2] name:

/local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow/python/framework/ops.py:6002: InvalidArgumentError
__________________ test_multivariate_normal[cov_sqrt1-mu0-x1] __________________

x = array([[0.49639867],
       [1.28172236],
       [1.31043352],
       [0.11474461]])
mu = array([[ 1.05849411,  1.6370413 ,  1.0085373 ,  0.98640045, -1.31158298,
        -2.48772531,  0.29169534,  1.9852913 ...2864, -1.52019799, -0.82444307,  1.06771007,
        -0.27982821, -0.11614063, -0.64434952,  2.36960855,  2.01114153]])
cov_sqrt = array([[1., 0., 0., 0.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.]])

    @pytest.mark.parametrize("x", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("mu", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("cov_sqrt", [randn(4, 4), np.eye(4)])
    def test_multivariate_normal(x: AnyNDArray, mu: AnyNDArray, cov_sqrt: AnyNDArray) -> None:
        cov = np.dot(cov_sqrt, cov_sqrt.T)
        L = np.linalg.cholesky(cov)
    
>       gp_result = logdensities.multivariate_normal(x, mu, L)

/local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/logdensities.py:50: in multivariate_normal
    return multivariate_normal(x, mu, L)
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:14: in wrapper
    return func(*func_args, **func_kwargs)
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:32: in multivariate_normal
    log_density = -0.5 * (tf.reduce_sum(tf.square(z), axis=0) + log_det_cov + D * tf.math.log(2.0 * np.pi))
/local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow/python/util/traceback_utils.py:153: in error_handler
    raise e.with_traceback(filtered_tb) from None
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

e = _NotOkStatusException(), name = None

    def raise_from_not_ok_status(e, name) -> NoReturn:
      e.message += (" name: " + str(name if name is not None else ""))
>     raise core._status_to_exception(e) from None  # pylint: disable=protected-access
E     tensorflow.python.framework.errors_impl.InvalidArgumentError: cannot compute AddV2 as input #1(zero-based) was expected to be a double tensor but is a float tensor [Op:AddV2] name:

/local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow/python/framework/ops.py:6002: InvalidArgumentError
__________________ test_multivariate_normal[cov_sqrt1-mu1-x0] __________________

x = array([[-1.01765403, -0.00537403,  1.06163488, -0.91725885,  0.35164835,
        -0.65137092,  1.82427826, -1.00918228...2243,  2.34271528,  0.19744153, -0.88192816,
        -1.24365763, -0.52885334,  0.24640723, -0.45804861,  0.38752235]])
mu = array([[-0.58122162],
       [ 0.53604735],
       [-1.03155134],
       [ 1.05020298]])
cov_sqrt = array([[1., 0., 0., 0.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.]])

    @pytest.mark.parametrize("x", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("mu", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("cov_sqrt", [randn(4, 4), np.eye(4)])
    def test_multivariate_normal(x: AnyNDArray, mu: AnyNDArray, cov_sqrt: AnyNDArray) -> None:
        cov = np.dot(cov_sqrt, cov_sqrt.T)
        L = np.linalg.cholesky(cov)
    
>       gp_result = logdensities.multivariate_normal(x, mu, L)

/local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/logdensities.py:50: in multivariate_normal
    return multivariate_normal(x, mu, L)
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:14: in wrapper
    return func(*func_args, **func_kwargs)
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:32: in multivariate_normal
    log_density = -0.5 * (tf.reduce_sum(tf.square(z), axis=0) + log_det_cov + D * tf.math.log(2.0 * np.pi))
/local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow/python/util/traceback_utils.py:153: in error_handler
    raise e.with_traceback(filtered_tb) from None
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

e = _NotOkStatusException(), name = None

    def raise_from_not_ok_status(e, name) -> NoReturn:
      e.message += (" name: " + str(name if name is not None else ""))
>     raise core._status_to_exception(e) from None  # pylint: disable=protected-access
E     tensorflow.python.framework.errors_impl.InvalidArgumentError: cannot compute AddV2 as input #1(zero-based) was expected to be a double tensor but is a float tensor [Op:AddV2] name:

/local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow/python/framework/ops.py:6002: InvalidArgumentError
__________________ test_multivariate_normal[cov_sqrt1-mu1-x1] __________________

x = array([[0.49639867],
       [1.28172236],
       [1.31043352],
       [0.11474461]])
mu = array([[-0.58122162],
       [ 0.53604735],
       [-1.03155134],
       [ 1.05020298]])
cov_sqrt = array([[1., 0., 0., 0.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.]])

    @pytest.mark.parametrize("x", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("mu", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("cov_sqrt", [randn(4, 4), np.eye(4)])
    def test_multivariate_normal(x: AnyNDArray, mu: AnyNDArray, cov_sqrt: AnyNDArray) -> None:
        cov = np.dot(cov_sqrt, cov_sqrt.T)
        L = np.linalg.cholesky(cov)
    
>       gp_result = logdensities.multivariate_normal(x, mu, L)

/local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/logdensities.py:50: in multivariate_normal
    return multivariate_normal(x, mu, L)
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:14: in wrapper
    return func(*func_args, **func_kwargs)
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:32: in multivariate_normal
    log_density = -0.5 * (tf.reduce_sum(tf.square(z), axis=0) + log_det_cov + D * tf.math.log(2.0 * np.pi))
/local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow/python/util/traceback_utils.py:153: in error_handler
    raise e.with_traceback(filtered_tb) from None
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

e = _NotOkStatusException(), name = None

    def raise_from_not_ok_status(e, name) -> NoReturn:
      e.message += (" name: " + str(name if name is not None else ""))
>     raise core._status_to_exception(e) from None  # pylint: disable=protected-access
E     tensorflow.python.framework.errors_impl.InvalidArgumentError: cannot compute AddV2 as input #1(zero-based) was expected to be a double tensor but is a float tensor [Op:AddV2] name:

/local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow/python/framework/ops.py:6002: InvalidArgumentError
=============================== warnings summary ===============================
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:57
  /local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:57: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if (distutils.version.LooseVersion(tf.__version__) <

../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:58
  /local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:58: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    distutils.version.LooseVersion(required_tensorflow_version)):

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x0]
FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x1]
FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x0]
FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x1]
FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x0]
FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x1]
FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x0]
FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x1]
======================== 8 failed, 2 warnings in 1.46s =========================


Final Test Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/GPflow/GPflow/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/GPflow/GPflow
collecting ... collected 8 items

../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x0] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x1] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x0] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x1] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x0] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x1] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x0] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x1] PASSED

=============================== warnings summary ===============================
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:57
  /local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:57: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if (distutils.version.LooseVersion(tf.__version__) <

../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:58
  /local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:58: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    distutils.version.LooseVersion(required_tensorflow_version)):

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 8 passed, 2 warnings in 0.64s =========================


Initial Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/GPflow/GPflow/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/GPflow/GPflow
collecting ... collected 8 items

../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x0] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x1] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x0] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x1] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x0] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x1] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x0] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x1] PASSED

=============================== warnings summary ===============================
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:57
  /local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:57: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if (distutils.version.LooseVersion(tf.__version__) <

../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:58
  /local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:58: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    distutils.version.LooseVersion(required_tensorflow_version)):

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 8 passed, 2 warnings in 1.36s =========================
