output file:
processed_korniaundistort_points_kannala_brandt187.json
function:
undistort_points_kannala_brandt
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_gradcheck[cpu] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-2]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_gradcheck[cpu]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_distort_points_roundtrip[cpu-float32]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-3] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-None] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-2] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_distort_points_roundtrip[cpu-float32] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-3]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-None]'}

All Test Cases On Generated code:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'onnxrt', 'inductor', 'cudagraphs', 'tvm', 'openxla', 'jit', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 10 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_smoke[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-None] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-1] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-2] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-3] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_distort_points_roundtrip[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_dx_distort_points_kannala_brandt[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_exception[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_gradcheck[cpu] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_jit[cpu-float32] FAILED

=================================== FAILURES ===================================
________ TestDistortionKannalaBrandt.test_cardinality[cpu-float32-None] ________

self = <test_distortion.TestDistortionKannalaBrandt object at 0x723fbeb46380>
device = device(type='cpu'), dtype = torch.float32, batch_size = None

    @pytest.mark.parametrize("batch_size", [None, 1, 2, 3])
    def test_cardinality(self, device, dtype, batch_size):
        self._test_cardinality_distort_batch(device, dtype, batch_size)
>       self._test_cardinality_undistort_batch(device, dtype, batch_size)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py:135: in _test_cardinality_undistort_batch
    assert undistort_points_kannala_brandt(points, params).shape == batch_tuple + (2,)
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/camera/distortion_kannala_brandt.py:56: in undistort_points_kannala_brandt
    return undistort_points_kannala_brandt(distorted_points_in_camera, params)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

distorted_points_in_camera = tensor([0.1961, 0.7109])
params = tensor([0.7096, 0.5442, 0.3407, 0.2664, 0.1422, 0.5395, 0.9917, 0.4894])
max_iterations = 10, convergence_threshold = 1e-06

    def undistort_points_kannala_brandt(distorted_points_in_camera, params, max_iterations=10, convergence_threshold=1e-06):
        fx, fy, cx, cy, k1, k2, k3, k4 = (params[..., 0], params[..., 1], params[..., 2], params[..., 3], params[..., 4], params[..., 5], params[..., 6], params[..., 7])
        undistorted_points = distorted_points_in_camera.clone()
        for _ in range(max_iterations):
            x = undistorted_points[..., 0]
            y = undistorted_points[..., 1]
            r = torch.sqrt(x ** 2 + y ** 2)
            theta = torch.atan(r)
            theta_d = theta * (1 + k1 * theta ** 2 + k2 * theta ** 4 + k3 * theta ** 6 + k4 * theta ** 8)
            scale = torch.where(r > 0, theta_d / r, torch.tensor(1.0, device=r.device))
            x_distorted = scale * x
            y_distorted = scale * y
            residual_x = distorted_points_in_camera[..., 0] - x_distorted
            residual_y = distorted_points_in_camera[..., 1] - y_distorted
            residual = torch.stack((residual_x, residual_y), dim=-1)
            dtheta_dr = 1 / (1 + r ** 2)
            dtheta_d_dtheta = 1 + 3 * k1 * theta ** 2 + 5 * k2 * theta ** 4 + 7 * k3 * theta ** 6 + 9 * k4 * theta ** 8
            dtheta_d_dr = dtheta_d_dtheta * dtheta_dr
            scale_prime = (dtheta_d_dr * r - theta_d) / r ** 2
            scale_prime = torch.where(r > 0, scale_prime, torch.tensor(0.0, device=r.device))
            jacobian = torch.zeros_like(residual)
>           jacobian[..., 0, 0] = scale + x ** 2 * scale_prime
E           IndexError: too many indices for tensor of dimension 1

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/camera/temp.py:28: IndexError
_________ TestDistortionKannalaBrandt.test_cardinality[cpu-float32-1] __________

self = <test_distortion.TestDistortionKannalaBrandt object at 0x723fbeb462c0>
device = device(type='cpu'), dtype = torch.float32, batch_size = 1

    @pytest.mark.parametrize("batch_size", [None, 1, 2, 3])
    def test_cardinality(self, device, dtype, batch_size):
        self._test_cardinality_distort_batch(device, dtype, batch_size)
>       self._test_cardinality_undistort_batch(device, dtype, batch_size)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py:135: in _test_cardinality_undistort_batch
    assert undistort_points_kannala_brandt(points, params).shape == batch_tuple + (2,)
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/camera/distortion_kannala_brandt.py:56: in undistort_points_kannala_brandt
    return undistort_points_kannala_brandt(distorted_points_in_camera, params)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

distorted_points_in_camera = tensor([[0.6193, 0.5585]])
params = tensor([[0.6958, 0.1055, 0.6973, 0.8329, 0.3271, 0.5742, 0.3539, 0.3155]])
max_iterations = 10, convergence_threshold = 1e-06

    def undistort_points_kannala_brandt(distorted_points_in_camera, params, max_iterations=10, convergence_threshold=1e-06):
        fx, fy, cx, cy, k1, k2, k3, k4 = (params[..., 0], params[..., 1], params[..., 2], params[..., 3], params[..., 4], params[..., 5], params[..., 6], params[..., 7])
        undistorted_points = distorted_points_in_camera.clone()
        for _ in range(max_iterations):
            x = undistorted_points[..., 0]
            y = undistorted_points[..., 1]
            r = torch.sqrt(x ** 2 + y ** 2)
            theta = torch.atan(r)
            theta_d = theta * (1 + k1 * theta ** 2 + k2 * theta ** 4 + k3 * theta ** 6 + k4 * theta ** 8)
            scale = torch.where(r > 0, theta_d / r, torch.tensor(1.0, device=r.device))
            x_distorted = scale * x
            y_distorted = scale * y
            residual_x = distorted_points_in_camera[..., 0] - x_distorted
            residual_y = distorted_points_in_camera[..., 1] - y_distorted
            residual = torch.stack((residual_x, residual_y), dim=-1)
            dtheta_dr = 1 / (1 + r ** 2)
            dtheta_d_dtheta = 1 + 3 * k1 * theta ** 2 + 5 * k2 * theta ** 4 + 7 * k3 * theta ** 6 + 9 * k4 * theta ** 8
            dtheta_d_dr = dtheta_d_dtheta * dtheta_dr
            scale_prime = (dtheta_d_dr * r - theta_d) / r ** 2
            scale_prime = torch.where(r > 0, scale_prime, torch.tensor(0.0, device=r.device))
            jacobian = torch.zeros_like(residual)
            jacobian[..., 0, 0] = scale + x ** 2 * scale_prime
            jacobian[..., 0, 1] = x * y * scale_prime
>           jacobian[..., 1, 0] = x * y * scale_prime
E           IndexError: index 1 is out of bounds for dimension 1 with size 1

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/camera/temp.py:30: IndexError
_________ TestDistortionKannalaBrandt.test_cardinality[cpu-float32-2] __________

self = <test_distortion.TestDistortionKannalaBrandt object at 0x723fbeb46620>
device = device(type='cpu'), dtype = torch.float32, batch_size = 2

    @pytest.mark.parametrize("batch_size", [None, 1, 2, 3])
    def test_cardinality(self, device, dtype, batch_size):
        self._test_cardinality_distort_batch(device, dtype, batch_size)
>       self._test_cardinality_undistort_batch(device, dtype, batch_size)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py:135: in _test_cardinality_undistort_batch
    assert undistort_points_kannala_brandt(points, params).shape == batch_tuple + (2,)
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/camera/distortion_kannala_brandt.py:56: in undistort_points_kannala_brandt
    return undistort_points_kannala_brandt(distorted_points_in_camera, params)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

distorted_points_in_camera = tensor([[0.1077, 0.8123],
        [0.7223, 0.6067]])
params = tensor([[0.6178, 0.1162, 0.2644, 0.8871, 0.6439, 0.9883, 0.6593, 0.5152],
        [0.2732, 0.6350, 0.0507, 0.1252, 0.0499, 0.4712, 0.2203, 0.8707]])
max_iterations = 10, convergence_threshold = 1e-06

    def undistort_points_kannala_brandt(distorted_points_in_camera, params, max_iterations=10, convergence_threshold=1e-06):
        fx, fy, cx, cy, k1, k2, k3, k4 = (params[..., 0], params[..., 1], params[..., 2], params[..., 3], params[..., 4], params[..., 5], params[..., 6], params[..., 7])
        undistorted_points = distorted_points_in_camera.clone()
        for _ in range(max_iterations):
            x = undistorted_points[..., 0]
            y = undistorted_points[..., 1]
            r = torch.sqrt(x ** 2 + y ** 2)
            theta = torch.atan(r)
            theta_d = theta * (1 + k1 * theta ** 2 + k2 * theta ** 4 + k3 * theta ** 6 + k4 * theta ** 8)
            scale = torch.where(r > 0, theta_d / r, torch.tensor(1.0, device=r.device))
            x_distorted = scale * x
            y_distorted = scale * y
            residual_x = distorted_points_in_camera[..., 0] - x_distorted
            residual_y = distorted_points_in_camera[..., 1] - y_distorted
            residual = torch.stack((residual_x, residual_y), dim=-1)
            dtheta_dr = 1 / (1 + r ** 2)
            dtheta_d_dtheta = 1 + 3 * k1 * theta ** 2 + 5 * k2 * theta ** 4 + 7 * k3 * theta ** 6 + 9 * k4 * theta ** 8
            dtheta_d_dr = dtheta_d_dtheta * dtheta_dr
            scale_prime = (dtheta_d_dr * r - theta_d) / r ** 2
            scale_prime = torch.where(r > 0, scale_prime, torch.tensor(0.0, device=r.device))
            jacobian = torch.zeros_like(residual)
>           jacobian[..., 0, 0] = scale + x ** 2 * scale_prime
E           RuntimeError: expand(torch.FloatTensor{[2]}, size=[]): the number of sizes provided (0) must be greater or equal to the number of dimensions in the tensor (1)

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/camera/temp.py:28: RuntimeError
_________ TestDistortionKannalaBrandt.test_cardinality[cpu-float32-3] __________

self = <test_distortion.TestDistortionKannalaBrandt object at 0x723fbeb466e0>
device = device(type='cpu'), dtype = torch.float32, batch_size = 3

    @pytest.mark.parametrize("batch_size", [None, 1, 2, 3])
    def test_cardinality(self, device, dtype, batch_size):
        self._test_cardinality_distort_batch(device, dtype, batch_size)
>       self._test_cardinality_undistort_batch(device, dtype, batch_size)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py:135: in _test_cardinality_undistort_batch
    assert undistort_points_kannala_brandt(points, params).shape == batch_tuple + (2,)
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/camera/distortion_kannala_brandt.py:56: in undistort_points_kannala_brandt
    return undistort_points_kannala_brandt(distorted_points_in_camera, params)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

distorted_points_in_camera = tensor([[0.9022, 0.2180],
        [0.4817, 0.6271],
        [0.9707, 0.9674]])
params = tensor([[0.8123, 0.1133, 0.1777, 0.5585, 0.5145, 0.7487, 0.9087, 0.1362],
        [0.5969, 0.2683, 0.0979, 0.4582, 0.6851, 0.3394, 0.9808, 0.4147],
        [0.0015, 0.7617, 0.3121, 0.9240, 0.2604, 0.7809, 0.5336, 0.5701]])
max_iterations = 10, convergence_threshold = 1e-06

    def undistort_points_kannala_brandt(distorted_points_in_camera, params, max_iterations=10, convergence_threshold=1e-06):
        fx, fy, cx, cy, k1, k2, k3, k4 = (params[..., 0], params[..., 1], params[..., 2], params[..., 3], params[..., 4], params[..., 5], params[..., 6], params[..., 7])
        undistorted_points = distorted_points_in_camera.clone()
        for _ in range(max_iterations):
            x = undistorted_points[..., 0]
            y = undistorted_points[..., 1]
            r = torch.sqrt(x ** 2 + y ** 2)
            theta = torch.atan(r)
            theta_d = theta * (1 + k1 * theta ** 2 + k2 * theta ** 4 + k3 * theta ** 6 + k4 * theta ** 8)
            scale = torch.where(r > 0, theta_d / r, torch.tensor(1.0, device=r.device))
            x_distorted = scale * x
            y_distorted = scale * y
            residual_x = distorted_points_in_camera[..., 0] - x_distorted
            residual_y = distorted_points_in_camera[..., 1] - y_distorted
            residual = torch.stack((residual_x, residual_y), dim=-1)
            dtheta_dr = 1 / (1 + r ** 2)
            dtheta_d_dtheta = 1 + 3 * k1 * theta ** 2 + 5 * k2 * theta ** 4 + 7 * k3 * theta ** 6 + 9 * k4 * theta ** 8
            dtheta_d_dr = dtheta_d_dtheta * dtheta_dr
            scale_prime = (dtheta_d_dr * r - theta_d) / r ** 2
            scale_prime = torch.where(r > 0, scale_prime, torch.tensor(0.0, device=r.device))
            jacobian = torch.zeros_like(residual)
>           jacobian[..., 0, 0] = scale + x ** 2 * scale_prime
E           RuntimeError: expand(torch.FloatTensor{[3]}, size=[]): the number of sizes provided (0) must be greater or equal to the number of dimensions in the tensor (1)

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/camera/temp.py:28: RuntimeError
____ TestDistortionKannalaBrandt.test_distort_points_roundtrip[cpu-float32] ____

self = <test_distortion.TestDistortionKannalaBrandt object at 0x723fbeb469b0>
device = device(type='cpu'), dtype = torch.float32

    def test_distort_points_roundtrip(self, device, dtype) -> None:
        points = torch.tensor(
            [
                [0.0, 0.0],
                [1.0, 400.0],
                [320.0, 240.0],
                [319.5, 239.5],
                [100.0, 40.0],
                [639.0, 479.0],
            ],
            device=device,
            dtype=dtype,
        )
        params = torch.tensor(
            [[1000.0, 1000.0, 320.0, 280.0, 0.1, 0.01, 0.001, 0.0001]],
            device=device,
            dtype=dtype,
        )
        expected = torch.tensor(
            [
                [320.0, 280.0],
                [325.1949172763466, 2357.966910538644],
                [1982.378709731326, 1526.7840322984944],
                [1982.6832644475849, 1526.3619462760455],
                [2235.6822069661744, 1046.2728827864696],
                [1984.8663275417607, 1527.9983895031353],
            ],
            device=device,
            dtype=dtype,
        )
        points_distorted = distort_points_kannala_brandt(points, params)
        self.assert_close(points_distorted, expected)
>       self.assert_close(points, undistort_points_kannala_brandt(points_distorted, params))

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py:175: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/camera/distortion_kannala_brandt.py:56: in undistort_points_kannala_brandt
    return undistort_points_kannala_brandt(distorted_points_in_camera, params)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

distorted_points_in_camera = tensor([[ 320.0000,  280.0000],
        [ 325.1949, 2357.9668],
        [1982.3785, 1526.7839],
        [1982.6832, 1526.3619],
        [2235.6821, 1046.2729],
        [1984.8662, 1527.9983]])
params = tensor([[1.0000e+03, 1.0000e+03, 3.2000e+02, 2.8000e+02, 1.0000e-01, 1.0000e-02,
         1.0000e-03, 1.0000e-04]])
max_iterations = 10, convergence_threshold = 1e-06

    def undistort_points_kannala_brandt(distorted_points_in_camera, params, max_iterations=10, convergence_threshold=1e-06):
        fx, fy, cx, cy, k1, k2, k3, k4 = (params[..., 0], params[..., 1], params[..., 2], params[..., 3], params[..., 4], params[..., 5], params[..., 6], params[..., 7])
        undistorted_points = distorted_points_in_camera.clone()
        for _ in range(max_iterations):
            x = undistorted_points[..., 0]
            y = undistorted_points[..., 1]
            r = torch.sqrt(x ** 2 + y ** 2)
            theta = torch.atan(r)
            theta_d = theta * (1 + k1 * theta ** 2 + k2 * theta ** 4 + k3 * theta ** 6 + k4 * theta ** 8)
            scale = torch.where(r > 0, theta_d / r, torch.tensor(1.0, device=r.device))
            x_distorted = scale * x
            y_distorted = scale * y
            residual_x = distorted_points_in_camera[..., 0] - x_distorted
            residual_y = distorted_points_in_camera[..., 1] - y_distorted
            residual = torch.stack((residual_x, residual_y), dim=-1)
            dtheta_dr = 1 / (1 + r ** 2)
            dtheta_d_dtheta = 1 + 3 * k1 * theta ** 2 + 5 * k2 * theta ** 4 + 7 * k3 * theta ** 6 + 9 * k4 * theta ** 8
            dtheta_d_dr = dtheta_d_dtheta * dtheta_dr
            scale_prime = (dtheta_d_dr * r - theta_d) / r ** 2
            scale_prime = torch.where(r > 0, scale_prime, torch.tensor(0.0, device=r.device))
            jacobian = torch.zeros_like(residual)
>           jacobian[..., 0, 0] = scale + x ** 2 * scale_prime
E           RuntimeError: expand(torch.FloatTensor{[6]}, size=[]): the number of sizes provided (0) must be greater or equal to the number of dimensions in the tensor (1)

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/camera/temp.py:28: RuntimeError
_______________ TestDistortionKannalaBrandt.test_gradcheck[cpu] ________________

self = <test_distortion.TestDistortionKannalaBrandt object at 0x723fbeb47130>
device = device(type='cpu')

    def test_gradcheck(self, device) -> None:
        self._test_gradcheck_distort(device)
>       self._test_gradcheck_undistort(device)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py:216: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py:212: in _test_gradcheck_undistort
    self.gradcheck(undistort_points_kannala_brandt, (points, params))
/local/data0/moved_data/publishablew/kornia/kornia/testing/base.py:143: in gradcheck
    return gradcheck(func, inputs, raise_exception=raise_exception, fast_mode=fast_mode, **kwargs)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2052: in gradcheck
    return _gradcheck_helper(**args)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2074: in _gradcheck_helper
    func_out = func(*tupled_inputs)
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/camera/distortion_kannala_brandt.py:56: in undistort_points_kannala_brandt
    return undistort_points_kannala_brandt(distorted_points_in_camera, params)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

distorted_points_in_camera = tensor([ 919.5000, 1439.5000], dtype=torch.float64, requires_grad=True)
params = tensor([6.0000e+02, 6.0000e+02, 3.1950e+02, 2.3950e+02, 1.0000e-01, 2.0000e-01,
        3.0000e-01, 4.0000e-01], dtype=torch.float64, requires_grad=True)
max_iterations = 10, convergence_threshold = 1e-06

    def undistort_points_kannala_brandt(distorted_points_in_camera, params, max_iterations=10, convergence_threshold=1e-06):
        fx, fy, cx, cy, k1, k2, k3, k4 = (params[..., 0], params[..., 1], params[..., 2], params[..., 3], params[..., 4], params[..., 5], params[..., 6], params[..., 7])
        undistorted_points = distorted_points_in_camera.clone()
        for _ in range(max_iterations):
            x = undistorted_points[..., 0]
            y = undistorted_points[..., 1]
            r = torch.sqrt(x ** 2 + y ** 2)
            theta = torch.atan(r)
            theta_d = theta * (1 + k1 * theta ** 2 + k2 * theta ** 4 + k3 * theta ** 6 + k4 * theta ** 8)
            scale = torch.where(r > 0, theta_d / r, torch.tensor(1.0, device=r.device))
            x_distorted = scale * x
            y_distorted = scale * y
            residual_x = distorted_points_in_camera[..., 0] - x_distorted
            residual_y = distorted_points_in_camera[..., 1] - y_distorted
            residual = torch.stack((residual_x, residual_y), dim=-1)
            dtheta_dr = 1 / (1 + r ** 2)
            dtheta_d_dtheta = 1 + 3 * k1 * theta ** 2 + 5 * k2 * theta ** 4 + 7 * k3 * theta ** 6 + 9 * k4 * theta ** 8
            dtheta_d_dr = dtheta_d_dtheta * dtheta_dr
            scale_prime = (dtheta_d_dr * r - theta_d) / r ** 2
            scale_prime = torch.where(r > 0, scale_prime, torch.tensor(0.0, device=r.device))
            jacobian = torch.zeros_like(residual)
>           jacobian[..., 0, 0] = scale + x ** 2 * scale_prime
E           IndexError: too many indices for tensor of dimension 1

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/camera/temp.py:28: IndexError
______________ TestDistortionKannalaBrandt.test_jit[cpu-float32] _______________

self = <test_distortion.TestDistortionKannalaBrandt object at 0x723fbeb47430>
device = device(type='cpu'), dtype = torch.float32

    def test_jit(self, device, dtype) -> None:
        self._test_jit_distort(device, dtype)
>       self._test_jit_undistort(device, dtype)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py:236: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py:229: in _test_jit_undistort
    op_script = torch.jit.script(undistort_points_kannala_brandt)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/_script.py:1429: in script
    ret = _script_impl(
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/_script.py:1202: in _script_impl
    ast = get_jit_def(obj, obj.__name__)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/frontend.py:383: in get_jit_def
    return build_def(
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/frontend.py:444: in build_def
    return Def(Ident(r, def_name), decl, build_stmts(ctx, body))
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/frontend.py:197: in build_stmts
    stmts = [build_stmt(ctx, s) for s in stmts]
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/frontend.py:197: in <listcomp>
    stmts = [build_stmt(ctx, s) for s in stmts]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <torch.jit.frontend.StmtBuilder object at 0x7240a478dbd0>
ctx = <torch._sources.SourceContext object at 0x723fbe5082c0>
node = <ast.ImportFrom object at 0x723fbe5f0730>

    def __call__(self, ctx, node):
        method = getattr(self, "build_" + node.__class__.__name__, None)
        if method is None:
>           raise UnsupportedNodeError(ctx, node)
E           torch.jit.frontend.UnsupportedNodeError: import statements aren't supported:
E             File "/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/camera/distortion_kannala_brandt.py", line 55
E           def undistort_points_kannala_brandt(distorted_points_in_camera: Tensor, params: Tensor) -> Tensor:
E               from .temp import undistort_points_kannala_brandt
E               ~~~~ <--- HERE
E               return undistort_points_kannala_brandt(distorted_points_in_camera, params)

/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/frontend.py:416: UnsupportedNodeError
=========================== short test summary info ============================
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-None]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-1]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-2]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-3]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_distort_points_roundtrip[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_gradcheck[cpu]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_jit[cpu-float32]
========================= 7 failed, 3 passed in 0.47s ==========================


Final Test Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'inductor', 'cudagraphs', 'jit', 'openxla', 'tvm', 'onnxrt', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 10 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_smoke[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-None] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-1] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-2] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-3] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_distort_points_roundtrip[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_dx_distort_points_kannala_brandt[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_exception[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_gradcheck[cpu] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_jit[cpu-float32] PASSED

============================== 10 passed in 0.26s ==============================


Initial Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'onnxrt', 'inductor', 'cudagraphs', 'jit', 'openxla', 'tvm', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 10 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_smoke[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-None] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-1] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-2] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_cardinality[cpu-float32-3] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_distort_points_roundtrip[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_dx_distort_points_kannala_brandt[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_exception[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_gradcheck[cpu] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/camera/test_distortion.py::TestDistortionKannalaBrandt::test_jit[cpu-float32] PASSED

============================== 10 passed in 0.29s ==============================
