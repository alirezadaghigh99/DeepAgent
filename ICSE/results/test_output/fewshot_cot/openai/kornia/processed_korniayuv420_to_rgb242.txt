output file:
processed_korniayuv420_to_rgb242.json
function:
yuv420_to_rgb
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_cardinality[cpu-float32-shape3]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_forth_and_back[cpu-float32] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_unit_red[cpu-float32]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_smoke[cpu-float32]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_unit_white[cpu-float32] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_unit_white[cpu-float32]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_forth_and_back[cpu-float32]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_smoke[cpu-float32] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_unit_red[cpu-float32] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_cardinality[cpu-float32-shape3] FAILED'}

All Test Cases On Generated code:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'inductor', 'jit', 'onnxrt', 'cudagraphs', 'tvm', 'openxla', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 12 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_smoke[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_cardinality[cpu-float32-shape0] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_cardinality[cpu-float32-shape1] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_cardinality[cpu-float32-shape2] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_cardinality[cpu-float32-shape3] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_exception[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_unit_white[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_unit_red[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_forth_and_back[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_gradcheck[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_jit[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_module[cpu-float32] PASSED

=================================== FAILURES ===================================
___________________ TestYuv420ToRgb.test_smoke[cpu-float32] ____________________

self = <test_yuv.TestYuv420ToRgb object at 0x7d2693129f90>
device = device(type='cpu'), dtype = torch.float32

    def test_smoke(self, device, dtype):
        H, W = 4, 6
        imgy = torch.rand(1, H, W, device=device, dtype=dtype)
        imguv = torch.rand(2, int(H / 2), int(W / 2), device=device, dtype=dtype)
>       assert isinstance(kornia.color.yuv420_to_rgb(imgy, imguv), torch.Tensor)

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py:359: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/yuv.py:143: in yuv420_to_rgb
    return yuv420_to_rgb(imagey, imageuv)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

imagey = tensor([[[0.8221, 0.6327, 0.5341, 0.9706, 0.0359, 0.7117],
         [0.0897, 0.9483, 0.7816, 0.6107, 0.3412, 0.0023],
         [0.9629, 0.4390, 0.5545, 0.3030, 0.4335, 0.5896],
         [0.7307, 0.2035, 0.8546, 0.3946, 0.4447, 0.9615]]])
imageuv = tensor([[[0.0852, 0.9418, 0.0687],
         [0.8606, 0.2955, 0.1309]],

        [[0.0080, 0.0687, 0.4603],
         [0.2354, 0.6980, 0.8086]]])

    def yuv420_to_rgb(imagey, imageuv):
        """
        Convert a YUV420 image to RGB.
    
        Args:
            imagey (torch.Tensor): Tensor of shape (*, 1, H, W) for the Y plane.
            imageuv (torch.Tensor): Tensor of shape (*, 2, H/2, W/2) for the UV planes.
    
        Returns:
            torch.Tensor: Tensor of shape (*, 3, H, W) in RGB format.
        """
        if not isinstance(imagey, torch.Tensor) or not isinstance(imageuv, torch.Tensor):
            raise TypeError('Inputs must be torch Tensors.')
        if imagey.shape[1] != 1 or imageuv.shape[1] != 2:
>           raise ValueError('imagey must have shape (*, 1, H, W) and imageuv must have shape (*, 2, H/2, W/2).')
E           ValueError: imagey must have shape (*, 1, H, W) and imageuv must have shape (*, 2, H/2, W/2).

/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/temp.py:39: ValueError
_____________ TestYuv420ToRgb.test_cardinality[cpu-float32-shape3] _____________

self = <test_yuv.TestYuv420ToRgb object at 0x7d269312a7a0>
device = device(type='cpu'), dtype = torch.float32, shape = (3, 2, 2)

    @pytest.mark.parametrize("shape", [(1, 3, 4, 4), (2, 3, 2, 4), (3, 3, 4, 2), (3, 2, 2)])
    def test_cardinality(self, device, dtype, shape):
        shapey = list(shape)
        shapey[-3] = 1
        shapeuv = list(shape)
        shapeuv[-3] = 2
        shapeuv[-2] = int(shapeuv[-2] / 2)
        shapeuv[-1] = int(shapeuv[-1] / 2)
    
        imgy = torch.ones(shapey, device=device, dtype=dtype)
        imguv = torch.ones(shapeuv, device=device, dtype=dtype)
>       assert kornia.color.yuv420_to_rgb(imgy, imguv).shape == shape

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py:372: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/yuv.py:143: in yuv420_to_rgb
    return yuv420_to_rgb(imagey, imageuv)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

imagey = tensor([[[1., 1.],
         [1., 1.]]])
imageuv = tensor([[[1.]],

        [[1.]]])

    def yuv420_to_rgb(imagey, imageuv):
        """
        Convert a YUV420 image to RGB.
    
        Args:
            imagey (torch.Tensor): Tensor of shape (*, 1, H, W) for the Y plane.
            imageuv (torch.Tensor): Tensor of shape (*, 2, H/2, W/2) for the UV planes.
    
        Returns:
            torch.Tensor: Tensor of shape (*, 3, H, W) in RGB format.
        """
        if not isinstance(imagey, torch.Tensor) or not isinstance(imageuv, torch.Tensor):
            raise TypeError('Inputs must be torch Tensors.')
        if imagey.shape[1] != 1 or imageuv.shape[1] != 2:
>           raise ValueError('imagey must have shape (*, 1, H, W) and imageuv must have shape (*, 2, H/2, W/2).')
E           ValueError: imagey must have shape (*, 1, H, W) and imageuv must have shape (*, 2, H/2, W/2).

/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/temp.py:39: ValueError
_________________ TestYuv420ToRgb.test_unit_white[cpu-float32] _________________

self = <test_yuv.TestYuv420ToRgb object at 0x7d269312ac80>
device = device(type='cpu'), dtype = torch.float32

    def test_unit_white(self, device, dtype):  # skipcq: PYL-R0201
        refrgb = torch.tensor(
            [[[255, 255], [255, 255]], [[255, 255], [255, 255]], [[255, 255], [255, 255]]],
            device=device,
            dtype=torch.uint8,
        )
        y = torch.tensor([[[255, 255], [255, 255]]], device=device, dtype=torch.uint8).type(dtype) / 255.0
        uv = torch.tensor([[[0]], [[0]]], device=device, dtype=torch.int8).type(torch.float) / 255.0
    
>       resrgb = (kornia.color.yuv420_to_rgb(y, uv) * 255.0).round().type(torch.uint8)

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py:411: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/yuv.py:143: in yuv420_to_rgb
    return yuv420_to_rgb(imagey, imageuv)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

imagey = tensor([[[1., 1.],
         [1., 1.]]])
imageuv = tensor([[[0.]],

        [[0.]]])

    def yuv420_to_rgb(imagey, imageuv):
        """
        Convert a YUV420 image to RGB.
    
        Args:
            imagey (torch.Tensor): Tensor of shape (*, 1, H, W) for the Y plane.
            imageuv (torch.Tensor): Tensor of shape (*, 2, H/2, W/2) for the UV planes.
    
        Returns:
            torch.Tensor: Tensor of shape (*, 3, H, W) in RGB format.
        """
        if not isinstance(imagey, torch.Tensor) or not isinstance(imageuv, torch.Tensor):
            raise TypeError('Inputs must be torch Tensors.')
        if imagey.shape[1] != 1 or imageuv.shape[1] != 2:
>           raise ValueError('imagey must have shape (*, 1, H, W) and imageuv must have shape (*, 2, H/2, W/2).')
E           ValueError: imagey must have shape (*, 1, H, W) and imageuv must have shape (*, 2, H/2, W/2).

/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/temp.py:39: ValueError
__________________ TestYuv420ToRgb.test_unit_red[cpu-float32] __________________

self = <test_yuv.TestYuv420ToRgb object at 0x7d269312afb0>
device = device(type='cpu'), dtype = torch.float32

    def test_unit_red(self, device, dtype):  # skipcq: PYL-R0201
        refrgb = torch.tensor(
            [[[221, 221], [221, 221]], [[17, 17], [17, 17]], [[1, 1], [1, 1]]], device=device, dtype=torch.uint8
        )
        y = torch.tensor([[[76, 76], [76, 76]]], device=device, dtype=torch.uint8).type(dtype) / 255.0
        uv = torch.tensor([[[-37]], [[127]]], device=device, dtype=torch.int8).type(torch.float) / 255.0
    
>       resrgb = (kornia.color.yuv420_to_rgb(y, uv) * 255.0).round().type(torch.uint8)

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py:421: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/yuv.py:143: in yuv420_to_rgb
    return yuv420_to_rgb(imagey, imageuv)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

imagey = tensor([[[0.2980, 0.2980],
         [0.2980, 0.2980]]])
imageuv = tensor([[[-0.1451]],

        [[ 0.4980]]])

    def yuv420_to_rgb(imagey, imageuv):
        """
        Convert a YUV420 image to RGB.
    
        Args:
            imagey (torch.Tensor): Tensor of shape (*, 1, H, W) for the Y plane.
            imageuv (torch.Tensor): Tensor of shape (*, 2, H/2, W/2) for the UV planes.
    
        Returns:
            torch.Tensor: Tensor of shape (*, 3, H, W) in RGB format.
        """
        if not isinstance(imagey, torch.Tensor) or not isinstance(imageuv, torch.Tensor):
            raise TypeError('Inputs must be torch Tensors.')
        if imagey.shape[1] != 1 or imageuv.shape[1] != 2:
>           raise ValueError('imagey must have shape (*, 1, H, W) and imageuv must have shape (*, 2, H/2, W/2).')
E           ValueError: imagey must have shape (*, 1, H, W) and imageuv must have shape (*, 2, H/2, W/2).

/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/temp.py:39: ValueError
_______________ TestYuv420ToRgb.test_forth_and_back[cpu-float32] _______________

self = <test_yuv.TestYuv420ToRgb object at 0x7d269312b2e0>
device = device(type='cpu'), dtype = torch.float32

    def test_forth_and_back(self, device, dtype):  # skipcq: PYL-R0201
        datay = torch.rand(1, 4, 6, device=device, dtype=dtype)
        datauv = torch.rand(2, 2, 3, device=device, dtype=dtype)
        rgb = kornia.color.yuv420_to_rgb
        yuv = kornia.color.rgb_to_yuv420
    
>       (data_outy, data_outuv) = yuv(rgb(datay, datauv))

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py:431: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/yuv.py:143: in yuv420_to_rgb
    return yuv420_to_rgb(imagey, imageuv)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

imagey = tensor([[[0.9723, 0.5855, 0.3067, 0.1619, 0.5270, 0.4933],
         [0.3545, 0.3158, 0.4139, 0.1955, 0.9330, 0.7040],
         [0.4693, 0.8999, 0.1231, 0.9256, 0.5207, 0.0294],
         [0.8034, 0.9383, 0.8197, 0.1258, 0.3196, 0.0287]]])
imageuv = tensor([[[0.9003, 0.1496, 0.9359],
         [0.0651, 0.5212, 0.8561]],

        [[0.5133, 0.4402, 0.2156],
         [0.7986, 0.1610, 0.7617]]])

    def yuv420_to_rgb(imagey, imageuv):
        """
        Convert a YUV420 image to RGB.
    
        Args:
            imagey (torch.Tensor): Tensor of shape (*, 1, H, W) for the Y plane.
            imageuv (torch.Tensor): Tensor of shape (*, 2, H/2, W/2) for the UV planes.
    
        Returns:
            torch.Tensor: Tensor of shape (*, 3, H, W) in RGB format.
        """
        if not isinstance(imagey, torch.Tensor) or not isinstance(imageuv, torch.Tensor):
            raise TypeError('Inputs must be torch Tensors.')
        if imagey.shape[1] != 1 or imageuv.shape[1] != 2:
>           raise ValueError('imagey must have shape (*, 1, H, W) and imageuv must have shape (*, 2, H/2, W/2).')
E           ValueError: imagey must have shape (*, 1, H, W) and imageuv must have shape (*, 2, H/2, W/2).

/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/temp.py:39: ValueError
____________________ TestYuv420ToRgb.test_jit[cpu-float32] _____________________

self = <test_yuv.TestYuv420ToRgb object at 0x7d269312b940>
device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.jit()
    def test_jit(self, device, dtype):
        B, H, W = 2, 4, 4
        imgy = torch.ones(B, 1, H, W, device=device, dtype=dtype)
        imguv = torch.ones(B, 2, int(H / 2), int(W / 2), device=device, dtype=dtype)
        op = kornia.color.yuv420_to_rgb
>       op_jit = torch.jit.script(op)

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py:448: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/_script.py:1429: in script
    ret = _script_impl(
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/_script.py:1202: in _script_impl
    ast = get_jit_def(obj, obj.__name__)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/frontend.py:383: in get_jit_def
    return build_def(
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/frontend.py:444: in build_def
    return Def(Ident(r, def_name), decl, build_stmts(ctx, body))
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/frontend.py:197: in build_stmts
    stmts = [build_stmt(ctx, s) for s in stmts]
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/frontend.py:197: in <listcomp>
    stmts = [build_stmt(ctx, s) for s in stmts]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <torch.jit.frontend.StmtBuilder object at 0x7d2768d85bd0>
ctx = <torch._sources.SourceContext object at 0x7d2692b74540>
node = <ast.ImportFrom object at 0x7d26931770d0>

    def __call__(self, ctx, node):
        method = getattr(self, "build_" + node.__class__.__name__, None)
        if method is None:
>           raise UnsupportedNodeError(ctx, node)
E           torch.jit.frontend.UnsupportedNodeError: import statements aren't supported:
E             File "/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/yuv.py", line 142
E           def yuv420_to_rgb(imagey: Tensor, imageuv: Tensor) -> Tensor:
E               from .temp import yuv420_to_rgb
E               ~~~~ <--- HERE
E               return yuv420_to_rgb(imagey, imageuv)

/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/frontend.py:416: UnsupportedNodeError
=========================== short test summary info ============================
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_smoke[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_cardinality[cpu-float32-shape3]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_unit_white[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_unit_red[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_forth_and_back[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_jit[cpu-float32]
========================= 6 failed, 6 passed in 0.42s ==========================


Final Test Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'jit', None, 'onnxrt', 'openxla', 'tvm', 'inductor', 'cudagraphs'}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 12 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_smoke[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_cardinality[cpu-float32-shape0] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_cardinality[cpu-float32-shape1] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_cardinality[cpu-float32-shape2] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_cardinality[cpu-float32-shape3] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_exception[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_unit_white[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_unit_red[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_forth_and_back[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_gradcheck[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_jit[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_module[cpu-float32] PASSED

============================== 12 passed in 0.21s ==============================


Initial Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'onnxrt', 'openxla', 'jit', 'inductor', 'cudagraphs', 'tvm', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 12 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_smoke[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_cardinality[cpu-float32-shape0] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_cardinality[cpu-float32-shape1] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_cardinality[cpu-float32-shape2] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_cardinality[cpu-float32-shape3] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_exception[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_unit_white[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_unit_red[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_forth_and_back[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_gradcheck[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_jit[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_yuv.py::TestYuv420ToRgb::test_module[cpu-float32] PASSED

============================== 12 passed in 0.34s ==============================
