output file:
processed_GPflowmultivariate_normal392.json
function:
multivariate_normal
Error Cases:
2025-02-13 20:28:18.177918: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1739496498.189461 1266006 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1739496498.193147 1266006 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2025-02-13 20:28:18.206140: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.

Pass or Failed: 0

Related Failed Test Cases:
{'../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x0] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x1]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x1]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x0]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x1]', '../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x1] FAILED', '../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x1] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x0]', '../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x1] FAILED', '../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x1] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x0]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x0]', '../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x0] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x1]', '../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x0] FAILED', '../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x0] FAILED'}

All Test Cases On Generated code:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/GPflow/GPflow/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/GPflow/GPflow
collecting ... collected 8 items

../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x0] FAILED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x1] FAILED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x0] FAILED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x1] FAILED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x0] FAILED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x1] FAILED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x0] FAILED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x1] FAILED

=================================== FAILURES ===================================
__________________ test_multivariate_normal[cov_sqrt0-mu0-x0] __________________

x = array([[ 0.05322942, -1.71687931,  0.65320972,  1.95557834, -1.20834524,
         0.31697944, -1.32562105, -3.74784672...0064, -0.8595292 , -0.43836474, -1.31602431,
        -0.8606142 , -1.14270261, -0.85560149,  0.07325703,  0.05425154]])
mu = array([[ 1.2316974 ,  1.76705421, -0.01229312, -0.37031571, -0.09783137,
         0.58213077, -0.59347386,  0.18303637...8433,  1.44379292,  0.70045815, -0.38912048,
        -1.18813537, -0.4416171 , -0.70058632, -1.60554922,  1.30678181]])
cov_sqrt = array([[-1.33970356,  0.8942495 ,  0.71992431,  1.61962011],
       [ 0.77791733,  1.71669358,  1.81100904, -0.5263435...    [ 0.85464934,  0.12067489,  0.09734721,  1.38926416],
       [-1.36970564,  0.97433828, -1.38450233, -1.18101526]])

    @pytest.mark.parametrize("x", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("mu", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("cov_sqrt", [randn(4, 4), np.eye(4)])
    def test_multivariate_normal(x: AnyNDArray, mu: AnyNDArray, cov_sqrt: AnyNDArray) -> None:
        cov = np.dot(cov_sqrt, cov_sqrt.T)
        L = np.linalg.cholesky(cov)
    
>       gp_result = logdensities.multivariate_normal(x, mu, L)

/local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/logdensities.py:49: in multivariate_normal
    from .temp import multivariate_normal
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    import numpy as np
    import tensorflow as tf
    from check_shapes import check_shapes
    from .base import TensorType
    from .utilities import to_default_float
    import tensorflow as tf
    from tensorflow_probability import distributions as tfd
    from typing import Union
>   from some_module import check_shapes
E   ModuleNotFoundError: No module named 'some_module'

/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:9: ModuleNotFoundError
__________________ test_multivariate_normal[cov_sqrt0-mu0-x1] __________________

x = array([[ 1.0251109 ],
       [-1.87163943],
       [-0.87286201],
       [ 0.97285137]])
mu = array([[ 1.2316974 ,  1.76705421, -0.01229312, -0.37031571, -0.09783137,
         0.58213077, -0.59347386,  0.18303637...8433,  1.44379292,  0.70045815, -0.38912048,
        -1.18813537, -0.4416171 , -0.70058632, -1.60554922,  1.30678181]])
cov_sqrt = array([[-1.33970356,  0.8942495 ,  0.71992431,  1.61962011],
       [ 0.77791733,  1.71669358,  1.81100904, -0.5263435...    [ 0.85464934,  0.12067489,  0.09734721,  1.38926416],
       [-1.36970564,  0.97433828, -1.38450233, -1.18101526]])

    @pytest.mark.parametrize("x", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("mu", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("cov_sqrt", [randn(4, 4), np.eye(4)])
    def test_multivariate_normal(x: AnyNDArray, mu: AnyNDArray, cov_sqrt: AnyNDArray) -> None:
        cov = np.dot(cov_sqrt, cov_sqrt.T)
        L = np.linalg.cholesky(cov)
    
>       gp_result = logdensities.multivariate_normal(x, mu, L)

/local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/logdensities.py:49: in multivariate_normal
    from .temp import multivariate_normal
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    import numpy as np
    import tensorflow as tf
    from check_shapes import check_shapes
    from .base import TensorType
    from .utilities import to_default_float
    import tensorflow as tf
    from tensorflow_probability import distributions as tfd
    from typing import Union
>   from some_module import check_shapes
E   ModuleNotFoundError: No module named 'some_module'

/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:9: ModuleNotFoundError
__________________ test_multivariate_normal[cov_sqrt0-mu1-x0] __________________

x = array([[ 0.05322942, -1.71687931,  0.65320972,  1.95557834, -1.20834524,
         0.31697944, -1.32562105, -3.74784672...0064, -0.8595292 , -0.43836474, -1.31602431,
        -0.8606142 , -1.14270261, -0.85560149,  0.07325703,  0.05425154]])
mu = array([[ 0.59451148],
       [-0.45915147],
       [-0.72274812],
       [-0.53753705]])
cov_sqrt = array([[-1.33970356,  0.8942495 ,  0.71992431,  1.61962011],
       [ 0.77791733,  1.71669358,  1.81100904, -0.5263435...    [ 0.85464934,  0.12067489,  0.09734721,  1.38926416],
       [-1.36970564,  0.97433828, -1.38450233, -1.18101526]])

    @pytest.mark.parametrize("x", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("mu", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("cov_sqrt", [randn(4, 4), np.eye(4)])
    def test_multivariate_normal(x: AnyNDArray, mu: AnyNDArray, cov_sqrt: AnyNDArray) -> None:
        cov = np.dot(cov_sqrt, cov_sqrt.T)
        L = np.linalg.cholesky(cov)
    
>       gp_result = logdensities.multivariate_normal(x, mu, L)

/local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/logdensities.py:49: in multivariate_normal
    from .temp import multivariate_normal
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    import numpy as np
    import tensorflow as tf
    from check_shapes import check_shapes
    from .base import TensorType
    from .utilities import to_default_float
    import tensorflow as tf
    from tensorflow_probability import distributions as tfd
    from typing import Union
>   from some_module import check_shapes
E   ModuleNotFoundError: No module named 'some_module'

/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:9: ModuleNotFoundError
__________________ test_multivariate_normal[cov_sqrt0-mu1-x1] __________________

x = array([[ 1.0251109 ],
       [-1.87163943],
       [-0.87286201],
       [ 0.97285137]])
mu = array([[ 0.59451148],
       [-0.45915147],
       [-0.72274812],
       [-0.53753705]])
cov_sqrt = array([[-1.33970356,  0.8942495 ,  0.71992431,  1.61962011],
       [ 0.77791733,  1.71669358,  1.81100904, -0.5263435...    [ 0.85464934,  0.12067489,  0.09734721,  1.38926416],
       [-1.36970564,  0.97433828, -1.38450233, -1.18101526]])

    @pytest.mark.parametrize("x", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("mu", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("cov_sqrt", [randn(4, 4), np.eye(4)])
    def test_multivariate_normal(x: AnyNDArray, mu: AnyNDArray, cov_sqrt: AnyNDArray) -> None:
        cov = np.dot(cov_sqrt, cov_sqrt.T)
        L = np.linalg.cholesky(cov)
    
>       gp_result = logdensities.multivariate_normal(x, mu, L)

/local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/logdensities.py:49: in multivariate_normal
    from .temp import multivariate_normal
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    import numpy as np
    import tensorflow as tf
    from check_shapes import check_shapes
    from .base import TensorType
    from .utilities import to_default_float
    import tensorflow as tf
    from tensorflow_probability import distributions as tfd
    from typing import Union
>   from some_module import check_shapes
E   ModuleNotFoundError: No module named 'some_module'

/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:9: ModuleNotFoundError
__________________ test_multivariate_normal[cov_sqrt1-mu0-x0] __________________

x = array([[ 0.05322942, -1.71687931,  0.65320972,  1.95557834, -1.20834524,
         0.31697944, -1.32562105, -3.74784672...0064, -0.8595292 , -0.43836474, -1.31602431,
        -0.8606142 , -1.14270261, -0.85560149,  0.07325703,  0.05425154]])
mu = array([[ 1.2316974 ,  1.76705421, -0.01229312, -0.37031571, -0.09783137,
         0.58213077, -0.59347386,  0.18303637...8433,  1.44379292,  0.70045815, -0.38912048,
        -1.18813537, -0.4416171 , -0.70058632, -1.60554922,  1.30678181]])
cov_sqrt = array([[1., 0., 0., 0.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.]])

    @pytest.mark.parametrize("x", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("mu", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("cov_sqrt", [randn(4, 4), np.eye(4)])
    def test_multivariate_normal(x: AnyNDArray, mu: AnyNDArray, cov_sqrt: AnyNDArray) -> None:
        cov = np.dot(cov_sqrt, cov_sqrt.T)
        L = np.linalg.cholesky(cov)
    
>       gp_result = logdensities.multivariate_normal(x, mu, L)

/local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/logdensities.py:49: in multivariate_normal
    from .temp import multivariate_normal
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    import numpy as np
    import tensorflow as tf
    from check_shapes import check_shapes
    from .base import TensorType
    from .utilities import to_default_float
    import tensorflow as tf
    from tensorflow_probability import distributions as tfd
    from typing import Union
>   from some_module import check_shapes
E   ModuleNotFoundError: No module named 'some_module'

/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:9: ModuleNotFoundError
__________________ test_multivariate_normal[cov_sqrt1-mu0-x1] __________________

x = array([[ 1.0251109 ],
       [-1.87163943],
       [-0.87286201],
       [ 0.97285137]])
mu = array([[ 1.2316974 ,  1.76705421, -0.01229312, -0.37031571, -0.09783137,
         0.58213077, -0.59347386,  0.18303637...8433,  1.44379292,  0.70045815, -0.38912048,
        -1.18813537, -0.4416171 , -0.70058632, -1.60554922,  1.30678181]])
cov_sqrt = array([[1., 0., 0., 0.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.]])

    @pytest.mark.parametrize("x", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("mu", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("cov_sqrt", [randn(4, 4), np.eye(4)])
    def test_multivariate_normal(x: AnyNDArray, mu: AnyNDArray, cov_sqrt: AnyNDArray) -> None:
        cov = np.dot(cov_sqrt, cov_sqrt.T)
        L = np.linalg.cholesky(cov)
    
>       gp_result = logdensities.multivariate_normal(x, mu, L)

/local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/logdensities.py:49: in multivariate_normal
    from .temp import multivariate_normal
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    import numpy as np
    import tensorflow as tf
    from check_shapes import check_shapes
    from .base import TensorType
    from .utilities import to_default_float
    import tensorflow as tf
    from tensorflow_probability import distributions as tfd
    from typing import Union
>   from some_module import check_shapes
E   ModuleNotFoundError: No module named 'some_module'

/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:9: ModuleNotFoundError
__________________ test_multivariate_normal[cov_sqrt1-mu1-x0] __________________

x = array([[ 0.05322942, -1.71687931,  0.65320972,  1.95557834, -1.20834524,
         0.31697944, -1.32562105, -3.74784672...0064, -0.8595292 , -0.43836474, -1.31602431,
        -0.8606142 , -1.14270261, -0.85560149,  0.07325703,  0.05425154]])
mu = array([[ 0.59451148],
       [-0.45915147],
       [-0.72274812],
       [-0.53753705]])
cov_sqrt = array([[1., 0., 0., 0.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.]])

    @pytest.mark.parametrize("x", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("mu", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("cov_sqrt", [randn(4, 4), np.eye(4)])
    def test_multivariate_normal(x: AnyNDArray, mu: AnyNDArray, cov_sqrt: AnyNDArray) -> None:
        cov = np.dot(cov_sqrt, cov_sqrt.T)
        L = np.linalg.cholesky(cov)
    
>       gp_result = logdensities.multivariate_normal(x, mu, L)

/local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/logdensities.py:49: in multivariate_normal
    from .temp import multivariate_normal
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    import numpy as np
    import tensorflow as tf
    from check_shapes import check_shapes
    from .base import TensorType
    from .utilities import to_default_float
    import tensorflow as tf
    from tensorflow_probability import distributions as tfd
    from typing import Union
>   from some_module import check_shapes
E   ModuleNotFoundError: No module named 'some_module'

/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:9: ModuleNotFoundError
__________________ test_multivariate_normal[cov_sqrt1-mu1-x1] __________________

x = array([[ 1.0251109 ],
       [-1.87163943],
       [-0.87286201],
       [ 0.97285137]])
mu = array([[ 0.59451148],
       [-0.45915147],
       [-0.72274812],
       [-0.53753705]])
cov_sqrt = array([[1., 0., 0., 0.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.]])

    @pytest.mark.parametrize("x", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("mu", [randn(4, 10), randn(4, 1)])
    @pytest.mark.parametrize("cov_sqrt", [randn(4, 4), np.eye(4)])
    def test_multivariate_normal(x: AnyNDArray, mu: AnyNDArray, cov_sqrt: AnyNDArray) -> None:
        cov = np.dot(cov_sqrt, cov_sqrt.T)
        L = np.linalg.cholesky(cov)
    
>       gp_result = logdensities.multivariate_normal(x, mu, L)

/local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/logdensities.py:49: in multivariate_normal
    from .temp import multivariate_normal
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    import numpy as np
    import tensorflow as tf
    from check_shapes import check_shapes
    from .base import TensorType
    from .utilities import to_default_float
    import tensorflow as tf
    from tensorflow_probability import distributions as tfd
    from typing import Union
>   from some_module import check_shapes
E   ModuleNotFoundError: No module named 'some_module'

/local/data0/moved_data/publishablew/GPflow/GPflow/gpflow/temp.py:9: ModuleNotFoundError
=============================== warnings summary ===============================
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:57
  /local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:57: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if (distutils.version.LooseVersion(tf.__version__) <

../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:58
  /local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:58: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    distutils.version.LooseVersion(required_tensorflow_version)):

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x0]
FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x1]
FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x0]
FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x1]
FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x0]
FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x1]
FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x0]
FAILED ../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x1]
======================== 8 failed, 2 warnings in 0.44s =========================


Final Test Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/GPflow/GPflow/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/GPflow/GPflow
collecting ... collected 8 items

../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x0] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x1] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x0] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x1] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x0] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x1] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x0] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x1] PASSED

=============================== warnings summary ===============================
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:57
  /local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:57: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if (distutils.version.LooseVersion(tf.__version__) <

../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:58
  /local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:58: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    distutils.version.LooseVersion(required_tensorflow_version)):

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 8 passed, 2 warnings in 0.72s =========================


Initial Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/GPflow/GPflow/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/GPflow/GPflow
collecting ... collected 8 items

../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x0] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu0-x1] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x0] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt0-mu1-x1] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x0] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu0-x1] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x0] PASSED
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/tests/gpflow/test_logdensities.py::test_multivariate_normal[cov_sqrt1-mu1-x1] PASSED

=============================== warnings summary ===============================
../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:57
  /local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:57: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if (distutils.version.LooseVersion(tf.__version__) <

../../../../../../local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:58
  /local/data0/moved_data/publishablew/GPflow/GPflow/venv/lib/python3.11/site-packages/tensorflow_probability/python/__init__.py:58: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    distutils.version.LooseVersion(required_tensorflow_version)):

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 8 passed, 2 warnings in 1.89s =========================
