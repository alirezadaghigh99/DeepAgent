output file:
processed_pyrotrain148.json
function:
train
Error Cases:

Warmup:   0%|          | 0/20 [00:00, ?it/s]
Sample:  80%|████████  | 16/20 [00:00, 158.75it/s, step size=1.39e+00, acc. prob=0.839]
Sample: 100%|██████████| 20/20 [00:00, 158.56it/s, step size=1.39e+00, acc. prob=0.869]

I 	 Posterior mean - kernel.lengthscale
I 	 tensor(1.9517)
I 	 Posterior mean - kernel.variance
I 	 tensor(1.0484)

Warmup:   0%|          | 0/20 [00:00, ?it/s]
Warmup:  45%|████▌     | 9/20 [00:00, 65.40it/s, step size=6.06e-01, acc. prob=0.660]
Sample:  80%|████████  | 16/20 [00:00, 66.57it/s, step size=6.06e-01, acc. prob=0.990]
Sample: 100%|██████████| 20/20 [00:00, 66.60it/s, step size=6.06e-01, acc. prob=0.918]

I 	 Posterior mean - kernel.lengthscale
I 	 tensor(2.3486)
I 	 Posterior mean - kernel.variance
I 	 tensor(1.3902)

Warmup:   0%|          | 0/20 [00:00, ?it/s]
Warmup:  50%|█████     | 10/20 [00:00, 95.76it/s, step size=1.39e+00, acc. prob=0.627]
Sample: 100%|██████████| 20/20 [00:00, 98.97it/s, step size=1.39e+00, acc. prob=0.869]

I 	 Posterior mean - kernel.lengthscale
I 	 tensor(1.9517)
I 	 Posterior mean - kernel.variance
I 	 tensor(1.0484)

Warmup:   0%|          | 0/20 [00:00, ?it/s]
Warmup:  25%|██▌       | 5/20 [00:00, 43.77it/s, step size=9.65e-01, acc. prob=0.597]
Warmup:  50%|█████     | 10/20 [00:00, 39.33it/s, step size=6.06e-01, acc. prob=0.679]
Sample:  75%|███████▌  | 15/20 [00:00, 40.08it/s, step size=6.06e-01, acc. prob=0.988]
Sample: 100%|██████████| 20/20 [00:00, 40.44it/s, step size=6.06e-01, acc. prob=0.918]
Sample: 100%|██████████| 20/20 [00:00, 40.45it/s, step size=6.06e-01, acc. prob=0.918]

I 	 Posterior mean - kernel.lengthscale
I 	 tensor(2.3486)
I 	 Posterior mean - kernel.variance
I 	 tensor(1.3902)

Warmup:   0%|          | 0/20 [00:00, ?it/s]
Warmup:  45%|████▌     | 9/20 [00:00, 48.53it/s, step size=5.48e-01, acc. prob=0.644]
Sample:  75%|███████▌  | 15/20 [00:00, 49.25it/s, step size=5.48e-01, acc. prob=0.960]
Sample: 100%|██████████| 20/20 [00:00, 49.35it/s, step size=5.48e-01, acc. prob=0.980]

I 	 Posterior mean - f
I 	 tensor([0.1353, 0.0072])
I 	 Posterior mean - kernel.lengthscale
I 	 tensor(2.0249)
I 	 Posterior mean - kernel.variance
I 	 tensor(0.9555)

Warmup:   0%|          | 0/20 [00:00, ?it/s]
Warmup:  20%|██        | 4/20 [00:00, 29.91it/s, step size=1.66e-01, acc. prob=0.502]
Warmup:  35%|███▌      | 7/20 [00:00, 24.73it/s, step size=6.23e-01, acc. prob=0.704]
Sample:  70%|███████   | 14/20 [00:00, 39.56it/s, step size=6.29e-01, acc. prob=0.865]
Sample: 100%|██████████| 20/20 [00:00, 46.21it/s, step size=6.29e-01, acc. prob=0.925]
Sample: 100%|██████████| 20/20 [00:00, 40.66it/s, step size=6.29e-01, acc. prob=0.925]

I 	 Posterior mean - f
I 	 tensor([[ 1.5424, -2.0054],
        [ 0.1517, -0.8095],
        [ 0.7838, -0.7838],
        [-0.7142,  0.3514]])
I 	 Posterior mean - kernel.lengthscale
I 	 tensor(1.8719)
I 	 Posterior mean - kernel.variance
I 	 tensor(1.1450)

Warmup:   0%|          | 0/20 [00:00, ?it/s]
Warmup:  25%|██▌       | 5/20 [00:00, 40.64it/s, step size=8.93e-01, acc. prob=0.591]
Warmup:  55%|█████▌    | 11/20 [00:00, 46.42it/s, step size=6.21e-01, acc. prob=0.976]
Sample:  80%|████████  | 16/20 [00:00, 42.95it/s, step size=6.21e-01, acc. prob=0.961]
Sample: 100%|██████████| 20/20 [00:00, 42.37it/s, step size=6.21e-01, acc. prob=0.975]

I 	 Posterior mean - kernel.lengthscale
I 	 tensor(2.0040)
I 	 Posterior mean - kernel.variance
I 	 tensor(1.0329)
I 	 Posterior mean - u
I 	 tensor([ 0.6233, -0.6901])

Warmup:   0%|          | 0/20 [00:00, ?it/s]
Warmup:  25%|██▌       | 5/20 [00:00, 42.10it/s, step size=1.23e+00, acc. prob=0.706]
Warmup:  50%|█████     | 10/20 [00:00, 25.91it/s, step size=5.70e-01, acc. prob=0.760]
Sample:  70%|███████   | 14/20 [00:00, 28.81it/s, step size=5.70e-01, acc. prob=0.921]
Sample:  90%|█████████ | 18/20 [00:00, 30.68it/s, step size=5.70e-01, acc. prob=0.954]
Sample: 100%|██████████| 20/20 [00:00, 30.62it/s, step size=5.70e-01, acc. prob=0.922]

I 	 Posterior mean - kernel.lengthscale
I 	 tensor(2.0581)
I 	 Posterior mean - kernel.variance
I 	 tensor(0.8248)
I 	 Posterior mean - u
I 	 tensor([[-0.4430, -0.4640],
        [-0.3513,  1.1699],
        [-0.4707, -0.3133],
        [-0.5145, -1.2041]])

Pass or Failed: 0

Related Failed Test Cases:
{'../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VSGP FAILED', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalSparseGP_y1D] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalGP_y2D]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalGP_y2D]', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[GPRegression_y1D] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_whiten_vsgp', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VSGP_whiten FAILED', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_sgpr FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[GPRegression_y1D]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalSparseGP_y1D]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalSparseGP_y1D]', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalSparseGP_y2D] FAILED', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[SparseGPRegression_y2D] FAILED', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_deepGP FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalSparseGP_y2D]', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalSparseGP_y2D] FAILED', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[SparseGPRegression_y2D] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalSparseGP_y2D]', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalGP_y2D] FAILED', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalSparseGP_y2D] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[GPRegression_y2D]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_sgpr', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[GPRegression_y2D]', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalSparseGP_y1D] FAILED', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalGP_y2D] FAILED', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalGP_y2D] FAILED', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalGP_y1D] FAILED', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalSparseGP_y1D] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[SparseGPRegression_y2D]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR_DTC', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_GPR', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalGP_y1D] FAILED', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[GPRegression_y1D]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR_FITC', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalGP_y1D]', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR_FITC FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[SparseGPRegression_y2D]', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VGP_whiten FAILED', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[SparseGPRegression_y1D] FAILED', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VGP FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalSparseGP_y1D]', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_vsgp FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalGP_y1D]', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[GPRegression_y2D] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[SparseGPRegression_y1D]', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[SparseGPRegression_y1D] FAILED', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[GPRegression_y2D] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_deepGP', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_whiten_vsgp FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VGP_whiten', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR_DTC FAILED', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalGP_y1D] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VSGP_whiten', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[GPRegression_y1D] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VGP', '../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_GPR FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalGP_y2D]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalGP_y1D]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalSparseGP_y2D]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VSGP', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_vsgp', 'FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[SparseGPRegression_y1D]'}

All Test Cases On Generated code:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/pyro/pyro/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/pyro/pyro
configfile: setup.cfg
plugins: typeguard-4.4.1, jaxtyping-0.2.19
collecting ... collected 76 items

../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[GPRegression_y1D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[GPRegression_y2D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[SparseGPRegression_y1D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[SparseGPRegression_y2D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_sgpr FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_vsgp FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_whiten_vsgp FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalGP_y1D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalGP_y2D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalSparseGP_y1D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalSparseGP_y2D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalGP_y1D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalGP_y2D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalSparseGP_y1D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalSparseGP_y2D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_deepGP FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[GPRegression_y1D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[GPRegression_y2D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[SparseGPRegression_y1D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[SparseGPRegression_y2D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalGP_y1D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalGP_y2D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalSparseGP_y1D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalSparseGP_y2D] FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_GPR FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR_DTC FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR_FITC FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VGP FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VGP_whiten FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VSGP FAILED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VSGP_whiten FAILED

=================================== FAILURES ===================================
_______________________ test_inference[GPRegression_y1D] _______________________

model_class = <class 'pyro.contrib.gp.models.gpr.GPRegression'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]]), y = tensor([2., 1.])
kernel = RBF(), likelihood = tensor(1.0000e-07)

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    @pytest.mark.init(rng_seed=0)
    def test_inference(model_class, X, y, kernel, likelihood):
        # skip variational GP models because variance/lengthscale highly
        # depend on variational parameters
        if model_class is VariationalGP or model_class is VariationalSparseGP:
            return
        elif model_class is GPRegression:
            gp = model_class(X, y, RBF(input_dim=3), likelihood)
        else:  # model_class is SparseGPRegression
            gp = model_class(X, y, RBF(input_dim=3), X, likelihood)
            # fix inducing points because variance/lengthscale highly depend on it
            gp.Xu.requires_grad_(False)
    
        generator = dist.MultivariateNormal(torch.zeros(X.shape[0]), kernel(X))
        target_y = generator(sample_shape=torch.Size([1000])).detach()
        gp.set_data(X, target_y)
    
>       train(gp)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:177: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = GPRegression(
  (kernel): RBF()
), optimizer = None, loss_fn = None
retain_graph = None, num_steps = 1000

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
_______________________ test_inference[GPRegression_y2D] _______________________

model_class = <class 'pyro.contrib.gp.models.gpr.GPRegression'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]])
y = tensor([[ 1.,  2.],
        [ 3.,  3.],
        [ 1.,  4.],
        [-1.,  1.]])
kernel = RBF(), likelihood = tensor(1.0000e-07)

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    @pytest.mark.init(rng_seed=0)
    def test_inference(model_class, X, y, kernel, likelihood):
        # skip variational GP models because variance/lengthscale highly
        # depend on variational parameters
        if model_class is VariationalGP or model_class is VariationalSparseGP:
            return
        elif model_class is GPRegression:
            gp = model_class(X, y, RBF(input_dim=3), likelihood)
        else:  # model_class is SparseGPRegression
            gp = model_class(X, y, RBF(input_dim=3), X, likelihood)
            # fix inducing points because variance/lengthscale highly depend on it
            gp.Xu.requires_grad_(False)
    
        generator = dist.MultivariateNormal(torch.zeros(X.shape[0]), kernel(X))
        target_y = generator(sample_shape=torch.Size([1000])).detach()
        gp.set_data(X, target_y)
    
>       train(gp)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:177: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = GPRegression(
  (kernel): RBF()
), optimizer = None, loss_fn = None
retain_graph = None, num_steps = 1000

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
____________________ test_inference[SparseGPRegression_y1D] ____________________

model_class = <class 'pyro.contrib.gp.models.sgpr.SparseGPRegression'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]]), y = tensor([2., 1.])
kernel = RBF(), likelihood = tensor(1.0000e-07)

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    @pytest.mark.init(rng_seed=0)
    def test_inference(model_class, X, y, kernel, likelihood):
        # skip variational GP models because variance/lengthscale highly
        # depend on variational parameters
        if model_class is VariationalGP or model_class is VariationalSparseGP:
            return
        elif model_class is GPRegression:
            gp = model_class(X, y, RBF(input_dim=3), likelihood)
        else:  # model_class is SparseGPRegression
            gp = model_class(X, y, RBF(input_dim=3), X, likelihood)
            # fix inducing points because variance/lengthscale highly depend on it
            gp.Xu.requires_grad_(False)
    
        generator = dist.MultivariateNormal(torch.zeros(X.shape[0]), kernel(X))
        target_y = generator(sample_shape=torch.Size([1000])).detach()
        gp.set_data(X, target_y)
    
>       train(gp)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:177: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = SparseGPRegression(
  (kernel): RBF()
), optimizer = None
loss_fn = None, retain_graph = None, num_steps = 1000

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
____________________ test_inference[SparseGPRegression_y2D] ____________________

model_class = <class 'pyro.contrib.gp.models.sgpr.SparseGPRegression'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]])
y = tensor([[ 1.,  2.],
        [ 3.,  3.],
        [ 1.,  4.],
        [-1.,  1.]])
kernel = RBF(), likelihood = tensor(1.0000e-07)

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    @pytest.mark.init(rng_seed=0)
    def test_inference(model_class, X, y, kernel, likelihood):
        # skip variational GP models because variance/lengthscale highly
        # depend on variational parameters
        if model_class is VariationalGP or model_class is VariationalSparseGP:
            return
        elif model_class is GPRegression:
            gp = model_class(X, y, RBF(input_dim=3), likelihood)
        else:  # model_class is SparseGPRegression
            gp = model_class(X, y, RBF(input_dim=3), X, likelihood)
            # fix inducing points because variance/lengthscale highly depend on it
            gp.Xu.requires_grad_(False)
    
        generator = dist.MultivariateNormal(torch.zeros(X.shape[0]), kernel(X))
        target_y = generator(sample_shape=torch.Size([1000])).detach()
        gp.set_data(X, target_y)
    
>       train(gp)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:177: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = SparseGPRegression(
  (kernel): RBF()
), optimizer = None
loss_fn = None, retain_graph = None, num_steps = 1000

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
_____________________________ test_inference_sgpr ______________________________

    @pytest.mark.init(rng_seed=0)
    def test_inference_sgpr():
        N = 1000
        X = dist.Uniform(torch.zeros(N), torch.ones(N) * 5).sample()
        y = (
            0.5 * torch.sin(3 * X)
            + dist.Normal(torch.zeros(N), torch.ones(N) * 0.5).sample()
        )
        kernel = RBF(input_dim=1)
        Xu = torch.arange(0.0, 5.5, 0.5)
    
        sgpr = SparseGPRegression(X, y, kernel, Xu)
>       train(sgpr)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:196: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = SparseGPRegression(
  (kernel): RBF()
), optimizer = None
loss_fn = None, retain_graph = None, num_steps = 1000

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
_____________________________ test_inference_vsgp ______________________________

    @pytest.mark.init(rng_seed=0)
    def test_inference_vsgp():
        N = 1000
        X = dist.Uniform(torch.zeros(N), torch.ones(N) * 5).sample()
        y = (
            0.5 * torch.sin(3 * X)
            + dist.Normal(torch.zeros(N), torch.ones(N) * 0.5).sample()
        )
        kernel = RBF(input_dim=1)
        Xu = torch.arange(0.0, 5.5, 0.5)
    
        vsgp = VariationalSparseGP(X, y, kernel, Xu, Gaussian())
        optimizer = torch.optim.Adam(vsgp.parameters(), lr=0.03)
>       train(vsgp, optimizer)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:218: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = VariationalSparseGP(
  (kernel): RBF()
  (likelihood): Gaussian()
)
optimizer = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.03
    maximize: False
    weight_decay: 0
)
loss_fn = None, retain_graph = None, num_steps = 1000

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
__________________________ test_inference_whiten_vsgp __________________________

    @pytest.mark.init(rng_seed=0)
    def test_inference_whiten_vsgp():
        N = 1000
        X = dist.Uniform(torch.zeros(N), torch.ones(N) * 5).sample()
        y = (
            0.5 * torch.sin(3 * X)
            + dist.Normal(torch.zeros(N), torch.ones(N) * 0.5).sample()
        )
        kernel = RBF(input_dim=1)
        Xu = torch.arange(0.0, 5.5, 0.5)
    
        vsgp = VariationalSparseGP(X, y, kernel, Xu, Gaussian(), whiten=True)
>       train(vsgp)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:239: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = VariationalSparseGP(
  (kernel): RBF()
  (likelihood): Gaussian()
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1000

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
__________ test_inference_with_empty_latent_shape[VariationalGP_y1D] ___________

model_class = <class 'pyro.contrib.gp.models.vgp.VariationalGP'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]]), y = tensor([2., 1.])
kernel = RBF(), likelihood = Gaussian()

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    def test_inference_with_empty_latent_shape(model_class, X, y, kernel, likelihood):
        # regression models don't use latent_shape (default=torch.Size([]))
        if model_class is GPRegression or model_class is SparseGPRegression:
            return
        elif model_class is VariationalGP:
            gp = model_class(X, y, kernel, likelihood, latent_shape=torch.Size([]))
        else:  # model_class is VariationalSparseGP
            gp = model_class(
                X, y, kernel, X.clone(), likelihood, latent_shape=torch.Size([])
            )
    
>       train(gp, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:262: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = VariationalGP(
  (kernel): RBF()
  (likelihood): Gaussian()
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
__________ test_inference_with_empty_latent_shape[VariationalGP_y2D] ___________

model_class = <class 'pyro.contrib.gp.models.vgp.VariationalGP'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]])
y = tensor([[ 1.,  2.],
        [ 3.,  3.],
        [ 1.,  4.],
        [-1.,  1.]])
kernel = RBF(), likelihood = Gaussian()

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    def test_inference_with_empty_latent_shape(model_class, X, y, kernel, likelihood):
        # regression models don't use latent_shape (default=torch.Size([]))
        if model_class is GPRegression or model_class is SparseGPRegression:
            return
        elif model_class is VariationalGP:
            gp = model_class(X, y, kernel, likelihood, latent_shape=torch.Size([]))
        else:  # model_class is VariationalSparseGP
            gp = model_class(
                X, y, kernel, X.clone(), likelihood, latent_shape=torch.Size([])
            )
    
>       train(gp, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:262: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = VariationalGP(
  (kernel): RBF()
  (likelihood): Gaussian()
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
_______ test_inference_with_empty_latent_shape[VariationalSparseGP_y1D] ________

model_class = <class 'pyro.contrib.gp.models.vsgp.VariationalSparseGP'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]]), y = tensor([2., 1.])
kernel = RBF(), likelihood = Gaussian()

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    def test_inference_with_empty_latent_shape(model_class, X, y, kernel, likelihood):
        # regression models don't use latent_shape (default=torch.Size([]))
        if model_class is GPRegression or model_class is SparseGPRegression:
            return
        elif model_class is VariationalGP:
            gp = model_class(X, y, kernel, likelihood, latent_shape=torch.Size([]))
        else:  # model_class is VariationalSparseGP
            gp = model_class(
                X, y, kernel, X.clone(), likelihood, latent_shape=torch.Size([])
            )
    
>       train(gp, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:262: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = VariationalSparseGP(
  (kernel): RBF()
  (likelihood): Gaussian()
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
_______ test_inference_with_empty_latent_shape[VariationalSparseGP_y2D] ________

model_class = <class 'pyro.contrib.gp.models.vsgp.VariationalSparseGP'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]])
y = tensor([[ 1.,  2.],
        [ 3.,  3.],
        [ 1.,  4.],
        [-1.,  1.]])
kernel = RBF(), likelihood = Gaussian()

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    def test_inference_with_empty_latent_shape(model_class, X, y, kernel, likelihood):
        # regression models don't use latent_shape (default=torch.Size([]))
        if model_class is GPRegression or model_class is SparseGPRegression:
            return
        elif model_class is VariationalGP:
            gp = model_class(X, y, kernel, likelihood, latent_shape=torch.Size([]))
        else:  # model_class is VariationalSparseGP
            gp = model_class(
                X, y, kernel, X.clone(), likelihood, latent_shape=torch.Size([])
            )
    
>       train(gp, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:262: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = VariationalSparseGP(
  (kernel): RBF()
  (likelihood): Gaussian()
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
________________ test_inference_with_whiten[VariationalGP_y1D] _________________

model_class = <class 'pyro.contrib.gp.models.vgp.VariationalGP'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]]), y = tensor([2., 1.])
kernel = RBF(), likelihood = Gaussian()

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    def test_inference_with_whiten(model_class, X, y, kernel, likelihood):
        # regression models don't use whiten
        if model_class is GPRegression or model_class is SparseGPRegression:
            return
        elif model_class is VariationalGP:
            gp = model_class(X, y, kernel, likelihood, whiten=True)
        else:  # model_class is VariationalSparseGP
            gp = model_class(X, y, kernel, X.clone(), likelihood, whiten=True)
    
>       train(gp, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = VariationalGP(
  (kernel): RBF()
  (likelihood): Gaussian()
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
________________ test_inference_with_whiten[VariationalGP_y2D] _________________

model_class = <class 'pyro.contrib.gp.models.vgp.VariationalGP'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]])
y = tensor([[ 1.,  2.],
        [ 3.,  3.],
        [ 1.,  4.],
        [-1.,  1.]])
kernel = RBF(), likelihood = Gaussian()

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    def test_inference_with_whiten(model_class, X, y, kernel, likelihood):
        # regression models don't use whiten
        if model_class is GPRegression or model_class is SparseGPRegression:
            return
        elif model_class is VariationalGP:
            gp = model_class(X, y, kernel, likelihood, whiten=True)
        else:  # model_class is VariationalSparseGP
            gp = model_class(X, y, kernel, X.clone(), likelihood, whiten=True)
    
>       train(gp, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = VariationalGP(
  (kernel): RBF()
  (likelihood): Gaussian()
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
_____________ test_inference_with_whiten[VariationalSparseGP_y1D] ______________

model_class = <class 'pyro.contrib.gp.models.vsgp.VariationalSparseGP'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]]), y = tensor([2., 1.])
kernel = RBF(), likelihood = Gaussian()

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    def test_inference_with_whiten(model_class, X, y, kernel, likelihood):
        # regression models don't use whiten
        if model_class is GPRegression or model_class is SparseGPRegression:
            return
        elif model_class is VariationalGP:
            gp = model_class(X, y, kernel, likelihood, whiten=True)
        else:  # model_class is VariationalSparseGP
            gp = model_class(X, y, kernel, X.clone(), likelihood, whiten=True)
    
>       train(gp, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = VariationalSparseGP(
  (kernel): RBF()
  (likelihood): Gaussian()
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
_____________ test_inference_with_whiten[VariationalSparseGP_y2D] ______________

model_class = <class 'pyro.contrib.gp.models.vsgp.VariationalSparseGP'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]])
y = tensor([[ 1.,  2.],
        [ 3.,  3.],
        [ 1.,  4.],
        [-1.,  1.]])
kernel = RBF(), likelihood = Gaussian()

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    def test_inference_with_whiten(model_class, X, y, kernel, likelihood):
        # regression models don't use whiten
        if model_class is GPRegression or model_class is SparseGPRegression:
            return
        elif model_class is VariationalGP:
            gp = model_class(X, y, kernel, likelihood, whiten=True)
        else:  # model_class is VariationalSparseGP
            gp = model_class(X, y, kernel, X.clone(), likelihood, whiten=True)
    
>       train(gp, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = VariationalSparseGP(
  (kernel): RBF()
  (likelihood): Gaussian()
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
____________________________ test_inference_deepGP _____________________________

    def test_inference_deepGP():
        gp1 = GPRegression(
            X,
            None,
            RBF(input_dim=3, variance=torch.tensor(3.0), lengthscale=torch.tensor(2.0)),
        )
        Z, _ = gp1.model()
        gp2 = VariationalSparseGP(
            Z, y2D, Matern32(input_dim=3), Z.clone(), Gaussian(torch.tensor(1e-6))
        )
    
        class DeepGP(torch.nn.Module):
            def __init__(self, gp1, gp2):
                super().__init__()
                self.gp1 = gp1
                self.gp2 = gp2
    
            def model(self):
                Z, _ = self.gp1.model()
                self.gp2.set_data(Z, y2D)
                self.gp2.model()
    
            def guide(self):
                self.gp1.guide()
                self.gp2.guide()
    
        deepgp = DeepGP(gp1, gp2)
>       train(deepgp, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:329: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = DeepGP(
  (gp1): GPRegression(
    (kernel): RBF()
  )
  (gp2): VariationalSparseGP(
    (kernel): Matern32()
    (likelihood): Gaussian()
  )
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
_________________________ test_gplvm[GPRegression_y1D] _________________________

model_class = <class 'pyro.contrib.gp.models.gpr.GPRegression'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]]), y = tensor([2., 1.])
kernel = RBF(), likelihood = tensor(1.0000e-07)

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    def test_gplvm(model_class, X, y, kernel, likelihood):
        if model_class is SparseGPRegression or model_class is VariationalSparseGP:
            gp = model_class(X, y, kernel, X.clone(), likelihood)
        else:
            gp = model_class(X, y, kernel, likelihood)
    
        gplvm = GPLVM(gp)
        # test inference
>       train(gplvm, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = GPLVM(
  (base_model): GPRegression(
    (kernel): RBF()
  )
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
_________________________ test_gplvm[GPRegression_y2D] _________________________

model_class = <class 'pyro.contrib.gp.models.gpr.GPRegression'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]])
y = tensor([[ 1.,  2.],
        [ 3.,  3.],
        [ 1.,  4.],
        [-1.,  1.]])
kernel = RBF(), likelihood = tensor(1.0000e-07)

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    def test_gplvm(model_class, X, y, kernel, likelihood):
        if model_class is SparseGPRegression or model_class is VariationalSparseGP:
            gp = model_class(X, y, kernel, X.clone(), likelihood)
        else:
            gp = model_class(X, y, kernel, likelihood)
    
        gplvm = GPLVM(gp)
        # test inference
>       train(gplvm, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = GPLVM(
  (base_model): GPRegression(
    (kernel): RBF()
  )
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
______________________ test_gplvm[SparseGPRegression_y1D] ______________________

model_class = <class 'pyro.contrib.gp.models.sgpr.SparseGPRegression'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]]), y = tensor([2., 1.])
kernel = RBF(), likelihood = tensor(1.0000e-07)

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    def test_gplvm(model_class, X, y, kernel, likelihood):
        if model_class is SparseGPRegression or model_class is VariationalSparseGP:
            gp = model_class(X, y, kernel, X.clone(), likelihood)
        else:
            gp = model_class(X, y, kernel, likelihood)
    
        gplvm = GPLVM(gp)
        # test inference
>       train(gplvm, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = GPLVM(
  (base_model): SparseGPRegression(
    (kernel): RBF()
  )
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
______________________ test_gplvm[SparseGPRegression_y2D] ______________________

model_class = <class 'pyro.contrib.gp.models.sgpr.SparseGPRegression'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]])
y = tensor([[ 1.,  2.],
        [ 3.,  3.],
        [ 1.,  4.],
        [-1.,  1.]])
kernel = RBF(), likelihood = tensor(1.0000e-07)

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    def test_gplvm(model_class, X, y, kernel, likelihood):
        if model_class is SparseGPRegression or model_class is VariationalSparseGP:
            gp = model_class(X, y, kernel, X.clone(), likelihood)
        else:
            gp = model_class(X, y, kernel, likelihood)
    
        gplvm = GPLVM(gp)
        # test inference
>       train(gplvm, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = GPLVM(
  (base_model): SparseGPRegression(
    (kernel): RBF()
  )
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
________________________ test_gplvm[VariationalGP_y1D] _________________________

model_class = <class 'pyro.contrib.gp.models.vgp.VariationalGP'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]]), y = tensor([2., 1.])
kernel = RBF(), likelihood = Gaussian()

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    def test_gplvm(model_class, X, y, kernel, likelihood):
        if model_class is SparseGPRegression or model_class is VariationalSparseGP:
            gp = model_class(X, y, kernel, X.clone(), likelihood)
        else:
            gp = model_class(X, y, kernel, likelihood)
    
        gplvm = GPLVM(gp)
        # test inference
>       train(gplvm, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = GPLVM(
  (base_model): VariationalGP(
    (kernel): RBF()
    (likelihood): Gaussian()
  )
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
________________________ test_gplvm[VariationalGP_y2D] _________________________

model_class = <class 'pyro.contrib.gp.models.vgp.VariationalGP'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]])
y = tensor([[ 1.,  2.],
        [ 3.,  3.],
        [ 1.,  4.],
        [-1.,  1.]])
kernel = RBF(), likelihood = Gaussian()

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    def test_gplvm(model_class, X, y, kernel, likelihood):
        if model_class is SparseGPRegression or model_class is VariationalSparseGP:
            gp = model_class(X, y, kernel, X.clone(), likelihood)
        else:
            gp = model_class(X, y, kernel, likelihood)
    
        gplvm = GPLVM(gp)
        # test inference
>       train(gplvm, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = GPLVM(
  (base_model): VariationalGP(
    (kernel): RBF()
    (likelihood): Gaussian()
  )
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
_____________________ test_gplvm[VariationalSparseGP_y1D] ______________________

model_class = <class 'pyro.contrib.gp.models.vsgp.VariationalSparseGP'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]]), y = tensor([2., 1.])
kernel = RBF(), likelihood = Gaussian()

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    def test_gplvm(model_class, X, y, kernel, likelihood):
        if model_class is SparseGPRegression or model_class is VariationalSparseGP:
            gp = model_class(X, y, kernel, X.clone(), likelihood)
        else:
            gp = model_class(X, y, kernel, likelihood)
    
        gplvm = GPLVM(gp)
        # test inference
>       train(gplvm, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = GPLVM(
  (base_model): VariationalSparseGP(
    (kernel): RBF()
    (likelihood): Gaussian()
  )
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
_____________________ test_gplvm[VariationalSparseGP_y2D] ______________________

model_class = <class 'pyro.contrib.gp.models.vsgp.VariationalSparseGP'>
X = tensor([[1., 5., 3.],
        [4., 3., 7.]])
y = tensor([[ 1.,  2.],
        [ 3.,  3.],
        [ 1.,  4.],
        [-1.,  1.]])
kernel = RBF(), likelihood = Gaussian()

    @pytest.mark.parametrize(
        "model_class, X, y, kernel, likelihood", _TEST_CASES(), ids=TEST_IDS
    )
    def test_gplvm(model_class, X, y, kernel, likelihood):
        if model_class is SparseGPRegression or model_class is VariationalSparseGP:
            gp = model_class(X, y, kernel, X.clone(), likelihood)
        else:
            gp = model_class(X, y, kernel, likelihood)
    
        gplvm = GPLVM(gp)
        # test inference
>       train(gplvm, num_steps=1)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = GPLVM(
  (base_model): VariationalSparseGP(
    (kernel): RBF()
    (likelihood): Gaussian()
  )
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
____________________________ test_mean_function_GPR ____________________________

    def test_mean_function_GPR():
        X, y, Xnew, ynew, kernel, mean_fn = _pre_test_mean_function()
        gpmodule = GPRegression(X, y, kernel, mean_function=mean_fn)
>       train(gpmodule)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:387: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = GPRegression(
  (kernel): Cosine()
  (mean_function): Trend()
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1000

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
___________________________ test_mean_function_SGPR ____________________________

    def test_mean_function_SGPR():
        X, y, Xnew, ynew, kernel, mean_fn = _pre_test_mean_function()
        Xu = X[::20].clone()
        gpmodule = SparseGPRegression(X, y, kernel, Xu, mean_function=mean_fn)
>       train(gpmodule)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = SparseGPRegression(
  (kernel): Cosine()
  (mean_function): Trend()
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1000

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
_________________________ test_mean_function_SGPR_DTC __________________________

    def test_mean_function_SGPR_DTC():
        X, y, Xnew, ynew, kernel, mean_fn = _pre_test_mean_function()
        Xu = X[::20].clone()
        gpmodule = SparseGPRegression(X, y, kernel, Xu, mean_function=mean_fn, approx="DTC")
>       train(gpmodule)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:403: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = SparseGPRegression(
  (kernel): Cosine()
  (mean_function): Trend()
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1000

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
_________________________ test_mean_function_SGPR_FITC _________________________

    def test_mean_function_SGPR_FITC():
        X, y, Xnew, ynew, kernel, mean_fn = _pre_test_mean_function()
        Xu = X[::20].clone()
        gpmodule = SparseGPRegression(
            X, y, kernel, Xu, mean_function=mean_fn, approx="FITC"
        )
>       train(gpmodule)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:413: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = SparseGPRegression(
  (kernel): Cosine()
  (mean_function): Trend()
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1000

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
____________________________ test_mean_function_VGP ____________________________

    def test_mean_function_VGP():
        X, y, Xnew, ynew, kernel, mean_fn = _pre_test_mean_function()
        likelihood = Gaussian()
        gpmodule = VariationalGP(X, y, kernel, likelihood, mean_function=mean_fn)
>       train(gpmodule)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:421: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = VariationalGP(
  (kernel): Cosine()
  (mean_function): Trend()
  (likelihood): Gaussian()
)
optimizer = None, loss_fn = None, retain_graph = None, num_steps = 1000

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
________________________ test_mean_function_VGP_whiten _________________________

    def test_mean_function_VGP_whiten():
        X, y, Xnew, ynew, kernel, mean_fn = _pre_test_mean_function()
        likelihood = Gaussian()
        gpmodule = VariationalGP(
            X, y, kernel, likelihood, mean_function=mean_fn, whiten=True
        )
        optimizer = torch.optim.Adam(gpmodule.parameters(), lr=0.1)
>       train(gpmodule, optimizer)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:432: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = VariationalGP(
  (kernel): Cosine()
  (mean_function): Trend()
  (likelihood): Gaussian()
)
optimizer = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.1
    maximize: False
    weight_decay: 0
)
loss_fn = None, retain_graph = None, num_steps = 1000

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
___________________________ test_mean_function_VSGP ____________________________

    def test_mean_function_VSGP():
        X, y, Xnew, ynew, kernel, mean_fn = _pre_test_mean_function()
        Xu = X[::20].clone()
        likelihood = Gaussian()
        gpmodule = VariationalSparseGP(X, y, kernel, Xu, likelihood, mean_function=mean_fn)
        optimizer = torch.optim.Adam(gpmodule.parameters(), lr=0.02)
>       train(gpmodule, optimizer)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:442: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = VariationalSparseGP(
  (kernel): Cosine()
  (mean_function): Trend()
  (likelihood): Gaussian()
)
optimizer = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.02
    maximize: False
    weight_decay: 0
)
loss_fn = None, retain_graph = None, num_steps = 1000

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
________________________ test_mean_function_VSGP_whiten ________________________

    def test_mean_function_VSGP_whiten():
        X, y, Xnew, ynew, kernel, mean_fn = _pre_test_mean_function()
        Xu = X[::20].clone()
        likelihood = Gaussian()
        gpmodule = VariationalSparseGP(
            X, y, kernel, Xu, likelihood, mean_function=mean_fn, whiten=True
        )
        optimizer = torch.optim.Adam(gpmodule.parameters(), lr=0.1)
>       train(gpmodule, optimizer)

/local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py:454: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

gpmodule = VariationalSparseGP(
  (kernel): Cosine()
  (mean_function): Trend()
  (likelihood): Gaussian()
)
optimizer = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.1
    maximize: False
    weight_decay: 0
)
loss_fn = None, retain_graph = None, num_steps = 1000

    def train(gpmodule, optimizer=None, loss_fn=None, retain_graph=None, num_steps=1000):
>       from .temp import train
E       ImportError: cannot import name 'train' from 'pyro.contrib.gp.temp' (/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/temp.py)

/local/data0/moved_data/publishablew/pyro/pyro/pyro/contrib/gp/util.py:112: ImportError
=========================== short test summary info ============================
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[GPRegression_y1D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[GPRegression_y2D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[SparseGPRegression_y1D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[SparseGPRegression_y2D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_sgpr
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_vsgp
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_whiten_vsgp
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalGP_y1D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalGP_y2D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalSparseGP_y1D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalSparseGP_y2D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalGP_y1D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalGP_y2D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalSparseGP_y1D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalSparseGP_y2D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_deepGP
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[GPRegression_y1D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[GPRegression_y2D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[SparseGPRegression_y1D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[SparseGPRegression_y2D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalGP_y1D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalGP_y2D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalSparseGP_y1D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalSparseGP_y2D]
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_GPR
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR_DTC
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR_FITC
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VGP
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VGP_whiten
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VSGP
FAILED ../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VSGP_whiten
======================== 32 failed, 44 passed in 4.69s =========================


Final Test Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/pyro/pyro/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/pyro/pyro
configfile: setup.cfg
plugins: typeguard-4.4.1, jaxtyping-0.2.19
collecting ... collected 76 items

../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_sgpr PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_vsgp PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_whiten_vsgp PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_deepGP PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_GPR PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR_DTC PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR_FITC PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VGP PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VGP_whiten PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VSGP PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VSGP_whiten PASSED

============================= 76 passed in 50.85s ==============================


Initial Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/pyro/pyro/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/pyro/pyro
configfile: setup.cfg
plugins: typeguard-4.4.1, jaxtyping-0.2.19
collecting ... collected 76 items

../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_model[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_forward_with_empty_latent_shape[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_sgpr PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_vsgp PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_whiten_vsgp PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_empty_latent_shape[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_with_whiten[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_hmc[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_inference_deepGP PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[GPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[GPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[SparseGPRegression_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[SparseGPRegression_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalSparseGP_y1D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_gplvm[VariationalSparseGP_y2D] PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_GPR PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR_DTC PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_SGPR_FITC PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VGP PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VGP_whiten PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VSGP PASSED
../../../../../../local/data0/moved_data/publishablew/pyro/pyro/tests/contrib/gp/test_models.py::test_mean_function_VSGP_whiten PASSED

============================= 76 passed in 55.83s ==============================
