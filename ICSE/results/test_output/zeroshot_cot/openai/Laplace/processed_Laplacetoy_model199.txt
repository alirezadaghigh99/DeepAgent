output file:
processed_Laplacetoy_model199.json
function:
toy_model
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace8-True-CurvlinopsGGN] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace8-True-CurvlinopsGGN]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace5-False-CurvlinopsGGN]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace1-False]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace2-True]', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace9-False-BackPackGGN] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace4-False-AsdlGGN]', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace11-False-CurvlinopsGGN] FAILED', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression_multivariate[FullLLLaplace-FunctionalLLLaplace] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace3-False-BackPackGGN]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression_multivariate[FullLaplace-FunctionalLaplace]', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace5-False-CurvlinopsGGN] FAILED', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace0-True] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace0-True-BackPackGGN]', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression_multivariate[FullLaplace-FunctionalLaplace] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace6-True-BackPackGGN]', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace1-False] FAILED', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace1-True-AsdlGGN] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace10-False-AsdlGGN]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression_multivariate[FullLLLaplace-FunctionalLLLaplace]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace9-False-BackPackGGN]', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace3-False] FAILED', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace2-True] FAILED', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace4-False-AsdlGGN] FAILED', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace3-False-BackPackGGN] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace1-True-AsdlGGN]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace2-True-CurvlinopsGGN]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace11-False-CurvlinopsGGN]', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace2-True-CurvlinopsGGN] FAILED', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace7-True-AsdlGGN] FAILED', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace10-False-AsdlGGN] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace7-True-AsdlGGN]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace3-False]', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace0-True-BackPackGGN] FAILED', '../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace6-True-BackPackGGN] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace0-True]'}

All Test Cases On Generated code:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/Laplace/Laplace/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/Laplace/Laplace
configfile: pyproject.toml
plugins: mock-3.14.0, cov-6.0.0
collecting ... collected 18 items

../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace0-True] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace1-False] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace2-True] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace3-False] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression_multivariate[FullLaplace-FunctionalLaplace] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression_multivariate[FullLLLaplace-FunctionalLLLaplace] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace0-True-BackPackGGN] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace1-True-AsdlGGN] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace2-True-CurvlinopsGGN] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace3-False-BackPackGGN] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace4-False-AsdlGGN] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace5-False-CurvlinopsGGN] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace6-True-BackPackGGN] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace7-True-AsdlGGN] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace8-True-CurvlinopsGGN] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace9-False-BackPackGGN] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace10-False-AsdlGGN] FAILED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace11-False-CurvlinopsGGN] FAILED

=================================== FAILURES ===================================
________________ test_gp_equivalence_regression[laplace0-True] _________________

laplace = (<class 'laplace.baselaplace.FullLaplace'>, <class 'laplace.baselaplace.FunctionalLaplace'>)
independent_outputs = True

    @pytest.mark.parametrize(
        "laplace,independent_outputs",
        product(
            [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
            [True, False],
        ),
    )
    def test_gp_equivalence_regression(laplace, independent_outputs):
        X_train, y_train, train_loader, X_test = toy_regression_dataset_1d(
            sigma=true_sigma_noise, batch_size=60
        )
        M = len(X_train)
>       model = toy_model(train_loader)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d0d25810>
n_epochs = 500, fit = True, in_dim = 1, out_dim = 1, regression = True

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
________________ test_gp_equivalence_regression[laplace1-False] ________________

laplace = (<class 'laplace.baselaplace.FullLaplace'>, <class 'laplace.baselaplace.FunctionalLaplace'>)
independent_outputs = False

    @pytest.mark.parametrize(
        "laplace,independent_outputs",
        product(
            [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
            [True, False],
        ),
    )
    def test_gp_equivalence_regression(laplace, independent_outputs):
        X_train, y_train, train_loader, X_test = toy_regression_dataset_1d(
            sigma=true_sigma_noise, batch_size=60
        )
        M = len(X_train)
>       model = toy_model(train_loader)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d0d4e550>
n_epochs = 500, fit = True, in_dim = 1, out_dim = 1, regression = True

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
________________ test_gp_equivalence_regression[laplace2-True] _________________

laplace = (<class 'laplace.lllaplace.FullLLLaplace'>, <class 'laplace.lllaplace.FunctionalLLLaplace'>)
independent_outputs = True

    @pytest.mark.parametrize(
        "laplace,independent_outputs",
        product(
            [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
            [True, False],
        ),
    )
    def test_gp_equivalence_regression(laplace, independent_outputs):
        X_train, y_train, train_loader, X_test = toy_regression_dataset_1d(
            sigma=true_sigma_noise, batch_size=60
        )
        M = len(X_train)
>       model = toy_model(train_loader)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d531c110>
n_epochs = 500, fit = True, in_dim = 1, out_dim = 1, regression = True

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
________________ test_gp_equivalence_regression[laplace3-False] ________________

laplace = (<class 'laplace.lllaplace.FullLLLaplace'>, <class 'laplace.lllaplace.FunctionalLLLaplace'>)
independent_outputs = False

    @pytest.mark.parametrize(
        "laplace,independent_outputs",
        product(
            [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
            [True, False],
        ),
    )
    def test_gp_equivalence_regression(laplace, independent_outputs):
        X_train, y_train, train_loader, X_test = toy_regression_dataset_1d(
            sigma=true_sigma_noise, batch_size=60
        )
        M = len(X_train)
>       model = toy_model(train_loader)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d03531d0>
n_epochs = 500, fit = True, in_dim = 1, out_dim = 1, regression = True

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
__ test_gp_equivalence_regression_multivariate[FullLaplace-FunctionalLaplace] __

parametric_laplace = <class 'laplace.baselaplace.FullLaplace'>
functional_laplace = <class 'laplace.baselaplace.FunctionalLaplace'>, c = 3

    @pytest.mark.parametrize(
        "parametric_laplace,functional_laplace",
        [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
    )
    def test_gp_equivalence_regression_multivariate(
        parametric_laplace, functional_laplace, c=3
    ):
        X_train, y_train, train_loader, X_test = toy_multivariate_regression_dataset(
            sigma=true_sigma_noise, d_input=c, batch_size=60
        )
>       model = toy_model(train_loader, in_dim=c, out_dim=c)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:75: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78cae4077650>
n_epochs = 500, fit = True, in_dim = 3, out_dim = 3, regression = True

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
_ test_gp_equivalence_regression_multivariate[FullLLLaplace-FunctionalLLLaplace] _

parametric_laplace = <class 'laplace.lllaplace.FullLLLaplace'>
functional_laplace = <class 'laplace.lllaplace.FunctionalLLLaplace'>, c = 3

    @pytest.mark.parametrize(
        "parametric_laplace,functional_laplace",
        [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
    )
    def test_gp_equivalence_regression_multivariate(
        parametric_laplace, functional_laplace, c=3
    ):
        X_train, y_train, train_loader, X_test = toy_multivariate_regression_dataset(
            sigma=true_sigma_noise, d_input=c, batch_size=60
        )
>       model = toy_model(train_loader, in_dim=c, out_dim=c)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:75: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d03f2210>
n_epochs = 500, fit = True, in_dim = 3, out_dim = 3, regression = True

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
________ test_gp_equivalence_classification[laplace0-True-BackPackGGN] _________

laplace = (<class 'laplace.baselaplace.FullLaplace'>, <class 'laplace.baselaplace.FunctionalLaplace'>)
independent_outputs = True
gp_backend = <class 'laplace.curvature.backpack.BackPackGGN'>, c = 2

    @pytest.mark.parametrize(
        "laplace,independent_outputs,gp_backend",
        product(
            [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
            [True, False],
            [BackPackGGN, AsdlGGN, CurvlinopsGGN],
        ),
    )
    def test_gp_equivalence_classification(laplace, independent_outputs, gp_backend, c=2):
        X_train, y_train, train_loader, X_test = toy_classification_dataset(
            batch_size=60, in_dim=4, out_dim=c
        )
>       model = toy_model(train_loader, in_dim=4, out_dim=c, regression=False)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d0352bd0>
n_epochs = 500, fit = True, in_dim = 4, out_dim = 2, regression = False

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
__________ test_gp_equivalence_classification[laplace1-True-AsdlGGN] ___________

laplace = (<class 'laplace.baselaplace.FullLaplace'>, <class 'laplace.baselaplace.FunctionalLaplace'>)
independent_outputs = True
gp_backend = <class 'laplace.curvature.asdl.AsdlGGN'>, c = 2

    @pytest.mark.parametrize(
        "laplace,independent_outputs,gp_backend",
        product(
            [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
            [True, False],
            [BackPackGGN, AsdlGGN, CurvlinopsGGN],
        ),
    )
    def test_gp_equivalence_classification(laplace, independent_outputs, gp_backend, c=2):
        X_train, y_train, train_loader, X_test = toy_classification_dataset(
            batch_size=60, in_dim=4, out_dim=c
        )
>       model = toy_model(train_loader, in_dim=4, out_dim=c, regression=False)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d03f1510>
n_epochs = 500, fit = True, in_dim = 4, out_dim = 2, regression = False

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
_______ test_gp_equivalence_classification[laplace2-True-CurvlinopsGGN] ________

laplace = (<class 'laplace.baselaplace.FullLaplace'>, <class 'laplace.baselaplace.FunctionalLaplace'>)
independent_outputs = True
gp_backend = <class 'laplace.curvature.curvlinops.CurvlinopsGGN'>, c = 2

    @pytest.mark.parametrize(
        "laplace,independent_outputs,gp_backend",
        product(
            [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
            [True, False],
            [BackPackGGN, AsdlGGN, CurvlinopsGGN],
        ),
    )
    def test_gp_equivalence_classification(laplace, independent_outputs, gp_backend, c=2):
        X_train, y_train, train_loader, X_test = toy_classification_dataset(
            batch_size=60, in_dim=4, out_dim=c
        )
>       model = toy_model(train_loader, in_dim=4, out_dim=c, regression=False)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d03f4ad0>
n_epochs = 500, fit = True, in_dim = 4, out_dim = 2, regression = False

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
________ test_gp_equivalence_classification[laplace3-False-BackPackGGN] ________

laplace = (<class 'laplace.baselaplace.FullLaplace'>, <class 'laplace.baselaplace.FunctionalLaplace'>)
independent_outputs = False
gp_backend = <class 'laplace.curvature.backpack.BackPackGGN'>, c = 2

    @pytest.mark.parametrize(
        "laplace,independent_outputs,gp_backend",
        product(
            [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
            [True, False],
            [BackPackGGN, AsdlGGN, CurvlinopsGGN],
        ),
    )
    def test_gp_equivalence_classification(laplace, independent_outputs, gp_backend, c=2):
        X_train, y_train, train_loader, X_test = toy_classification_dataset(
            batch_size=60, in_dim=4, out_dim=c
        )
>       model = toy_model(train_loader, in_dim=4, out_dim=c, regression=False)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d0374e10>
n_epochs = 500, fit = True, in_dim = 4, out_dim = 2, regression = False

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
__________ test_gp_equivalence_classification[laplace4-False-AsdlGGN] __________

laplace = (<class 'laplace.baselaplace.FullLaplace'>, <class 'laplace.baselaplace.FunctionalLaplace'>)
independent_outputs = False
gp_backend = <class 'laplace.curvature.asdl.AsdlGGN'>, c = 2

    @pytest.mark.parametrize(
        "laplace,independent_outputs,gp_backend",
        product(
            [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
            [True, False],
            [BackPackGGN, AsdlGGN, CurvlinopsGGN],
        ),
    )
    def test_gp_equivalence_classification(laplace, independent_outputs, gp_backend, c=2):
        X_train, y_train, train_loader, X_test = toy_classification_dataset(
            batch_size=60, in_dim=4, out_dim=c
        )
>       model = toy_model(train_loader, in_dim=4, out_dim=c, regression=False)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d036e210>
n_epochs = 500, fit = True, in_dim = 4, out_dim = 2, regression = False

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
_______ test_gp_equivalence_classification[laplace5-False-CurvlinopsGGN] _______

laplace = (<class 'laplace.baselaplace.FullLaplace'>, <class 'laplace.baselaplace.FunctionalLaplace'>)
independent_outputs = False
gp_backend = <class 'laplace.curvature.curvlinops.CurvlinopsGGN'>, c = 2

    @pytest.mark.parametrize(
        "laplace,independent_outputs,gp_backend",
        product(
            [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
            [True, False],
            [BackPackGGN, AsdlGGN, CurvlinopsGGN],
        ),
    )
    def test_gp_equivalence_classification(laplace, independent_outputs, gp_backend, c=2):
        X_train, y_train, train_loader, X_test = toy_classification_dataset(
            batch_size=60, in_dim=4, out_dim=c
        )
>       model = toy_model(train_loader, in_dim=4, out_dim=c, regression=False)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d0351b90>
n_epochs = 500, fit = True, in_dim = 4, out_dim = 2, regression = False

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
________ test_gp_equivalence_classification[laplace6-True-BackPackGGN] _________

laplace = (<class 'laplace.lllaplace.FullLLLaplace'>, <class 'laplace.lllaplace.FunctionalLLLaplace'>)
independent_outputs = True
gp_backend = <class 'laplace.curvature.backpack.BackPackGGN'>, c = 2

    @pytest.mark.parametrize(
        "laplace,independent_outputs,gp_backend",
        product(
            [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
            [True, False],
            [BackPackGGN, AsdlGGN, CurvlinopsGGN],
        ),
    )
    def test_gp_equivalence_classification(laplace, independent_outputs, gp_backend, c=2):
        X_train, y_train, train_loader, X_test = toy_classification_dataset(
            batch_size=60, in_dim=4, out_dim=c
        )
>       model = toy_model(train_loader, in_dim=4, out_dim=c, regression=False)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d03f3210>
n_epochs = 500, fit = True, in_dim = 4, out_dim = 2, regression = False

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
__________ test_gp_equivalence_classification[laplace7-True-AsdlGGN] ___________

laplace = (<class 'laplace.lllaplace.FullLLLaplace'>, <class 'laplace.lllaplace.FunctionalLLLaplace'>)
independent_outputs = True
gp_backend = <class 'laplace.curvature.asdl.AsdlGGN'>, c = 2

    @pytest.mark.parametrize(
        "laplace,independent_outputs,gp_backend",
        product(
            [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
            [True, False],
            [BackPackGGN, AsdlGGN, CurvlinopsGGN],
        ),
    )
    def test_gp_equivalence_classification(laplace, independent_outputs, gp_backend, c=2):
        X_train, y_train, train_loader, X_test = toy_classification_dataset(
            batch_size=60, in_dim=4, out_dim=c
        )
>       model = toy_model(train_loader, in_dim=4, out_dim=c, regression=False)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d03f5690>
n_epochs = 500, fit = True, in_dim = 4, out_dim = 2, regression = False

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
_______ test_gp_equivalence_classification[laplace8-True-CurvlinopsGGN] ________

laplace = (<class 'laplace.lllaplace.FullLLLaplace'>, <class 'laplace.lllaplace.FunctionalLLLaplace'>)
independent_outputs = True
gp_backend = <class 'laplace.curvature.curvlinops.CurvlinopsGGN'>, c = 2

    @pytest.mark.parametrize(
        "laplace,independent_outputs,gp_backend",
        product(
            [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
            [True, False],
            [BackPackGGN, AsdlGGN, CurvlinopsGGN],
        ),
    )
    def test_gp_equivalence_classification(laplace, independent_outputs, gp_backend, c=2):
        X_train, y_train, train_loader, X_test = toy_classification_dataset(
            batch_size=60, in_dim=4, out_dim=c
        )
>       model = toy_model(train_loader, in_dim=4, out_dim=c, regression=False)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d0375550>
n_epochs = 500, fit = True, in_dim = 4, out_dim = 2, regression = False

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
________ test_gp_equivalence_classification[laplace9-False-BackPackGGN] ________

laplace = (<class 'laplace.lllaplace.FullLLLaplace'>, <class 'laplace.lllaplace.FunctionalLLLaplace'>)
independent_outputs = False
gp_backend = <class 'laplace.curvature.backpack.BackPackGGN'>, c = 2

    @pytest.mark.parametrize(
        "laplace,independent_outputs,gp_backend",
        product(
            [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
            [True, False],
            [BackPackGGN, AsdlGGN, CurvlinopsGGN],
        ),
    )
    def test_gp_equivalence_classification(laplace, independent_outputs, gp_backend, c=2):
        X_train, y_train, train_loader, X_test = toy_classification_dataset(
            batch_size=60, in_dim=4, out_dim=c
        )
>       model = toy_model(train_loader, in_dim=4, out_dim=c, regression=False)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d036cc90>
n_epochs = 500, fit = True, in_dim = 4, out_dim = 2, regression = False

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
_________ test_gp_equivalence_classification[laplace10-False-AsdlGGN] __________

laplace = (<class 'laplace.lllaplace.FullLLLaplace'>, <class 'laplace.lllaplace.FunctionalLLLaplace'>)
independent_outputs = False
gp_backend = <class 'laplace.curvature.asdl.AsdlGGN'>, c = 2

    @pytest.mark.parametrize(
        "laplace,independent_outputs,gp_backend",
        product(
            [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
            [True, False],
            [BackPackGGN, AsdlGGN, CurvlinopsGGN],
        ),
    )
    def test_gp_equivalence_classification(laplace, independent_outputs, gp_backend, c=2):
        X_train, y_train, train_loader, X_test = toy_classification_dataset(
            batch_size=60, in_dim=4, out_dim=c
        )
>       model = toy_model(train_loader, in_dim=4, out_dim=c, regression=False)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d0353690>
n_epochs = 500, fit = True, in_dim = 4, out_dim = 2, regression = False

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
______ test_gp_equivalence_classification[laplace11-False-CurvlinopsGGN] _______

laplace = (<class 'laplace.lllaplace.FullLLLaplace'>, <class 'laplace.lllaplace.FunctionalLLLaplace'>)
independent_outputs = False
gp_backend = <class 'laplace.curvature.curvlinops.CurvlinopsGGN'>, c = 2

    @pytest.mark.parametrize(
        "laplace,independent_outputs,gp_backend",
        product(
            [(FullLaplace, FunctionalLaplace), (FullLLLaplace, FunctionalLLLaplace)],
            [True, False],
            [BackPackGGN, AsdlGGN, CurvlinopsGGN],
        ),
    )
    def test_gp_equivalence_classification(laplace, independent_outputs, gp_backend, c=2):
        X_train, y_train, train_loader, X_test = toy_classification_dataset(
            batch_size=60, in_dim=4, out_dim=c
        )
>       model = toy_model(train_loader, in_dim=4, out_dim=c, regression=False)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

train_loader = <torch.utils.data.dataloader.DataLoader object at 0x78c9d03dcdd0>
n_epochs = 500, fit = True, in_dim = 4, out_dim = 2, regression = False

    def toy_model(train_loader: DataLoader, n_epochs=500, fit=True, in_dim=1, out_dim=1, regression=True):
>       from .temp import toy_model
E       ImportError: cannot import name 'toy_model' from 'tests.temp' (/local/data0/moved_data/publishablew/Laplace/Laplace/tests/temp.py)

/local/data0/moved_data/publishablew/Laplace/Laplace/tests/utils.py:32: ImportError
=============================== warnings summary ===============================
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/venv/lib/python3.11/site-packages/unfoldNd/utils.py:18
  /local/data0/moved_data/publishablew/Laplace/Laplace/venv/lib/python3.11/site-packages/unfoldNd/utils.py:18: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    TORCH_VERSION = LooseVersion(version("torch"))

../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/venv/lib/python3.11/site-packages/unfoldNd/utils.py:19
  /local/data0/moved_data/publishablew/Laplace/Laplace/venv/lib/python3.11/site-packages/unfoldNd/utils.py:19: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    TORCH_VERSION_AT_LEAST_1_12_0 = TORCH_VERSION >= LooseVersion("1.12.0")

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace0-True]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace1-False]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace2-True]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace3-False]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression_multivariate[FullLaplace-FunctionalLaplace]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression_multivariate[FullLLLaplace-FunctionalLLLaplace]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace0-True-BackPackGGN]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace1-True-AsdlGGN]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace2-True-CurvlinopsGGN]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace3-False-BackPackGGN]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace4-False-AsdlGGN]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace5-False-CurvlinopsGGN]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace6-True-BackPackGGN]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace7-True-AsdlGGN]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace8-True-CurvlinopsGGN]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace9-False-BackPackGGN]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace10-False-AsdlGGN]
FAILED ../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace11-False-CurvlinopsGGN]
======================== 18 failed, 2 warnings in 1.52s ========================


Final Test Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/Laplace/Laplace/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/Laplace/Laplace
configfile: pyproject.toml
plugins: mock-3.14.0, cov-6.0.0
collecting ... collected 18 items

../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace0-True] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace1-False] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace2-True] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace3-False] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression_multivariate[FullLaplace-FunctionalLaplace] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression_multivariate[FullLLLaplace-FunctionalLLLaplace] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace0-True-BackPackGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace1-True-AsdlGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace2-True-CurvlinopsGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace3-False-BackPackGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace4-False-AsdlGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace5-False-CurvlinopsGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace6-True-BackPackGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace7-True-AsdlGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace8-True-CurvlinopsGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace9-False-BackPackGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace10-False-AsdlGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace11-False-CurvlinopsGGN] PASSED

=============================== warnings summary ===============================
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/venv/lib/python3.11/site-packages/unfoldNd/utils.py:18
  /local/data0/moved_data/publishablew/Laplace/Laplace/venv/lib/python3.11/site-packages/unfoldNd/utils.py:18: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    TORCH_VERSION = LooseVersion(version("torch"))

../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/venv/lib/python3.11/site-packages/unfoldNd/utils.py:19
  /local/data0/moved_data/publishablew/Laplace/Laplace/venv/lib/python3.11/site-packages/unfoldNd/utils.py:19: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    TORCH_VERSION_AT_LEAST_1_12_0 = TORCH_VERSION >= LooseVersion("1.12.0")

tests/test_functional_laplace.py: 18 warnings
  /local/data0/moved_data/publishablew/Laplace/Laplace/venv/lib/python3.11/site-packages/curvlinops/_base.py:299: UserWarning: Input matrix is float64, while linear operator is float32. Converting to float32.
    warn(

tests/test_functional_laplace.py: 18 warnings
  /local/data0/moved_data/publishablew/Laplace/Laplace/laplace/baselaplace.py:2563: UserWarning: The prior precision has been changed since fit. Re-compututing its value...
    warnings.warn(

tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace1-True-AsdlGGN]
tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace4-False-AsdlGGN]
  /local/data0/moved_data/publishablew/Laplace/Laplace/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:1827: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
    self._maybe_warn_non_full_backward_hook(args, result, grad_fn)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================= 18 passed, 40 warnings in 23.27s =======================


Initial Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/Laplace/Laplace/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/Laplace/Laplace
configfile: pyproject.toml
plugins: mock-3.14.0, cov-6.0.0
collecting ... collected 18 items

../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace0-True] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace1-False] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace2-True] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression[laplace3-False] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression_multivariate[FullLaplace-FunctionalLaplace] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_regression_multivariate[FullLLLaplace-FunctionalLLLaplace] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace0-True-BackPackGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace1-True-AsdlGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace2-True-CurvlinopsGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace3-False-BackPackGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace4-False-AsdlGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace5-False-CurvlinopsGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace6-True-BackPackGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace7-True-AsdlGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace8-True-CurvlinopsGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace9-False-BackPackGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace10-False-AsdlGGN] PASSED
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace11-False-CurvlinopsGGN] PASSED

=============================== warnings summary ===============================
../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/venv/lib/python3.11/site-packages/unfoldNd/utils.py:18
  /local/data0/moved_data/publishablew/Laplace/Laplace/venv/lib/python3.11/site-packages/unfoldNd/utils.py:18: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    TORCH_VERSION = LooseVersion(version("torch"))

../../../../../../local/data0/moved_data/publishablew/Laplace/Laplace/venv/lib/python3.11/site-packages/unfoldNd/utils.py:19
  /local/data0/moved_data/publishablew/Laplace/Laplace/venv/lib/python3.11/site-packages/unfoldNd/utils.py:19: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    TORCH_VERSION_AT_LEAST_1_12_0 = TORCH_VERSION >= LooseVersion("1.12.0")

tests/test_functional_laplace.py: 18 warnings
  /local/data0/moved_data/publishablew/Laplace/Laplace/venv/lib/python3.11/site-packages/curvlinops/_base.py:299: UserWarning: Input matrix is float64, while linear operator is float32. Converting to float32.
    warn(

tests/test_functional_laplace.py: 18 warnings
  /local/data0/moved_data/publishablew/Laplace/Laplace/laplace/baselaplace.py:2563: UserWarning: The prior precision has been changed since fit. Re-compututing its value...
    warnings.warn(

tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace1-True-AsdlGGN]
tests/test_functional_laplace.py::test_gp_equivalence_classification[laplace4-False-AsdlGGN]
  /local/data0/moved_data/publishablew/Laplace/Laplace/venv/lib/python3.11/site-packages/torch/nn/modules/module.py:1827: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
    self._maybe_warn_non_full_backward_hook(args, result, grad_fn)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================= 18 passed, 40 warnings in 26.23s =======================
