output file:
processed_korniashift_rgb52.json
function:
shift_rgb
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32] FAILED'}

All Test Cases On Generated code:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'inductor', 'cudagraphs', 'jit', 'tvm', 'openxla', 'onnxrt', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 6 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32] FAILED

=================================== FAILURES ===================================
______________ TestRGBShift.test_rgb_shift_no_shift[cpu-float32] _______________

self = <test_shift_rgb.TestRGBShift object at 0x776007740cd0>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift_no_shift(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([0]), torch.Tensor([0]), torch.Tensor([0])
        image = torch.rand(2, 3, 5, 5, device=device, dtype=dtype)
        expected = image
>       shifted = kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

/local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[0.6243, 0.7181, 0.8356, 0.3130, 0.3282],
          [0.2943, 0.5338, 0.5536, 0.7296, 0.5605],
          [0.1...09, 0.4633],
          [0.0615, 0.7116, 0.7601, 0.4114, 0.9512],
          [0.1808, 0.9875, 0.7775, 0.5510, 0.6388]]]])
r_shift = tensor([0.]), g_shift = tensor([0.]), b_shift = tensor([0.])

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor')
        if image.ndim != 4:
            raise ValueError('Image must have 4 dimensions (N, C, H, W)')
        if image.size(1) != 3:
            raise ValueError('Image must have 3 channels (RGB)')
        if not (isinstance(r_shift, torch.Tensor) and isinstance(g_shift, torch.Tensor) and isinstance(b_shift, torch.Tensor)):
            raise TypeError('Shift values must be torch.Tensors')
        if r_shift.ndim != 1 or g_shift.ndim != 1 or b_shift.ndim != 1:
            raise ValueError('Shift tensors must be 1-dimensional')
        if r_shift.size(0) != image.size(0) or g_shift.size(0) != image.size(0) or b_shift.size(0) != image.size(0):
>           raise ValueError('Shift tensors must have the same length as the batch size')
E           ValueError: Shift tensors must have the same length as the batch size

/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/temp.py:17: ValueError
______________ TestRGBShift.test_rgb_shift_all_zeros[cpu-float32] ______________

self = <test_shift_rgb.TestRGBShift object at 0x7760077410c0>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift_all_zeros(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([-0.1]), torch.Tensor([-0.1]), torch.Tensor([-0.1])
        image = torch.zeros(2, 3, 5, 5, device=device, dtype=dtype)
        expected = image
>       shifted = kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

/local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:22: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0.,...0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.]]]])
r_shift = tensor([-0.1000]), g_shift = tensor([-0.1000])
b_shift = tensor([-0.1000])

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor')
        if image.ndim != 4:
            raise ValueError('Image must have 4 dimensions (N, C, H, W)')
        if image.size(1) != 3:
            raise ValueError('Image must have 3 channels (RGB)')
        if not (isinstance(r_shift, torch.Tensor) and isinstance(g_shift, torch.Tensor) and isinstance(b_shift, torch.Tensor)):
            raise TypeError('Shift values must be torch.Tensors')
        if r_shift.ndim != 1 or g_shift.ndim != 1 or b_shift.ndim != 1:
            raise ValueError('Shift tensors must be 1-dimensional')
        if r_shift.size(0) != image.size(0) or g_shift.size(0) != image.size(0) or b_shift.size(0) != image.size(0):
>           raise ValueError('Shift tensors must have the same length as the batch size')
E           ValueError: Shift tensors must have the same length as the batch size

/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/temp.py:17: ValueError
______________ TestRGBShift.test_rgb_shift_all_ones[cpu-float32] _______________

self = <test_shift_rgb.TestRGBShift object at 0x7760077413f0>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift_all_ones(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([1]), torch.Tensor([1]), torch.Tensor([1])
        image = torch.rand(2, 3, 5, 5, device=device, dtype=dtype)
        expected = torch.ones(2, 3, 5, 5, device=device, dtype=dtype)
>       shifted = kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

/local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[0.5096, 0.8778, 0.1969, 0.2017, 0.6335],
          [0.8260, 0.7946, 0.2823, 0.6427, 0.9597],
          [0.7...85, 0.7284],
          [0.5133, 0.8693, 0.3456, 0.9778, 0.7868],
          [0.3906, 0.5568, 0.1737, 0.1392, 0.4594]]]])
r_shift = tensor([1.]), g_shift = tensor([1.]), b_shift = tensor([1.])

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor')
        if image.ndim != 4:
            raise ValueError('Image must have 4 dimensions (N, C, H, W)')
        if image.size(1) != 3:
            raise ValueError('Image must have 3 channels (RGB)')
        if not (isinstance(r_shift, torch.Tensor) and isinstance(g_shift, torch.Tensor) and isinstance(b_shift, torch.Tensor)):
            raise TypeError('Shift values must be torch.Tensors')
        if r_shift.ndim != 1 or g_shift.ndim != 1 or b_shift.ndim != 1:
            raise ValueError('Shift tensors must be 1-dimensional')
        if r_shift.size(0) != image.size(0) or g_shift.size(0) != image.size(0) or b_shift.size(0) != image.size(0):
>           raise ValueError('Shift tensors must have the same length as the batch size')
E           ValueError: Shift tensors must have the same length as the batch size

/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/temp.py:17: ValueError
_______ TestRGBShift.test_rgb_shift_invalid_parameter_shape[cpu-float32] _______

self = <test_shift_rgb.TestRGBShift object at 0x776007741720>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift_invalid_parameter_shape(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([0.5]), torch.Tensor([0.5]), torch.Tensor([0.5])
        image = torch.randn(3, 3, device=device, dtype=dtype)
        with pytest.raises(TypeError):
>           kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

/local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[-0.4325,  0.0804,  0.3029],
        [ 1.3067, -0.1225, -0.3603],
        [ 1.4716,  0.0875, -0.5056]])
r_shift = tensor([0.5000]), g_shift = tensor([0.5000])
b_shift = tensor([0.5000])

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor')
        if image.ndim != 4:
>           raise ValueError('Image must have 4 dimensions (N, C, H, W)')
E           ValueError: Image must have 4 dimensions (N, C, H, W)

/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/temp.py:9: ValueError
__________________ TestRGBShift.test_rgb_shift_gradcheck[cpu] __________________

self = <test_shift_rgb.TestRGBShift object at 0x776007741a20>
device = device(type='cpu')

    def test_rgb_shift_gradcheck(self, device):
        r_shift, g_shift, b_shift = torch.Tensor([0.4]), torch.Tensor([0.5]), torch.Tensor([0.2])
        image = torch.randn(2, 3, 5, 5, device=device, dtype=torch.float64)
>       self.gradcheck(kornia.enhance.shift_rgb, (image, r_shift, g_shift, b_shift))

/local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:43: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/testing/base.py:143: in gradcheck
    return gradcheck(func, inputs, raise_exception=raise_exception, fast_mode=fast_mode, **kwargs)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2052: in gradcheck
    return _gradcheck_helper(**args)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2074: in _gradcheck_helper
    func_out = func(*tupled_inputs)
/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[ 0.4960,  1.1935, -0.1523,  0.4690, -1.6036],
          [-0.8646, -0.6452, -0.8136,  0.7340,  1.0167],
    ...,  2.0397],
          [ 1.1262, -1.9143, -1.3380,  3.0517, -0.7666]]]],
       dtype=torch.float64, requires_grad=True)
r_shift = tensor([0.4000], dtype=torch.float64, requires_grad=True)
g_shift = tensor([0.5000], dtype=torch.float64, requires_grad=True)
b_shift = tensor([0.2000], dtype=torch.float64, requires_grad=True)

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor')
        if image.ndim != 4:
            raise ValueError('Image must have 4 dimensions (N, C, H, W)')
        if image.size(1) != 3:
            raise ValueError('Image must have 3 channels (RGB)')
        if not (isinstance(r_shift, torch.Tensor) and isinstance(g_shift, torch.Tensor) and isinstance(b_shift, torch.Tensor)):
            raise TypeError('Shift values must be torch.Tensors')
        if r_shift.ndim != 1 or g_shift.ndim != 1 or b_shift.ndim != 1:
            raise ValueError('Shift tensors must be 1-dimensional')
        if r_shift.size(0) != image.size(0) or g_shift.size(0) != image.size(0) or b_shift.size(0) != image.size(0):
>           raise ValueError('Shift tensors must have the same length as the batch size')
E           ValueError: Shift tensors must have the same length as the batch size

/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/temp.py:17: ValueError
___________________ TestRGBShift.test_rgb_shift[cpu-float32] ___________________

self = <test_shift_rgb.TestRGBShift object at 0x776007741d20>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([0.1]), torch.Tensor([0.3]), torch.Tensor([-0.3])
        image = torch.tensor(
            [[[[0.2, 0.0]], [[0.3, 0.5]], [[0.4, 0.7]]], [[[0.2, 0.7]], [[0.0, 0.8]], [[0.2, 0.3]]]],
            device=device,
            dtype=dtype,
        )
>       shifted = kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

/local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[0.2000, 0.0000]],

         [[0.3000, 0.5000]],

         [[0.4000, 0.7000]]],


        [[[0.2000, 0.7000]],

         [[0.0000, 0.8000]],

         [[0.2000, 0.3000]]]])
r_shift = tensor([0.1000]), g_shift = tensor([0.3000])
b_shift = tensor([-0.3000])

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor')
        if image.ndim != 4:
            raise ValueError('Image must have 4 dimensions (N, C, H, W)')
        if image.size(1) != 3:
            raise ValueError('Image must have 3 channels (RGB)')
        if not (isinstance(r_shift, torch.Tensor) and isinstance(g_shift, torch.Tensor) and isinstance(b_shift, torch.Tensor)):
            raise TypeError('Shift values must be torch.Tensors')
        if r_shift.ndim != 1 or g_shift.ndim != 1 or b_shift.ndim != 1:
            raise ValueError('Shift tensors must be 1-dimensional')
        if r_shift.size(0) != image.size(0) or g_shift.size(0) != image.size(0) or b_shift.size(0) != image.size(0):
>           raise ValueError('Shift tensors must have the same length as the batch size')
E           ValueError: Shift tensors must have the same length as the batch size

/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/temp.py:17: ValueError
=========================== short test summary info ============================
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32]
============================== 6 failed in 0.39s ===============================


Final Test Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'cudagraphs', 'openxla', 'inductor', 'jit', 'onnxrt', 'tvm', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 6 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32] PASSED

============================== 6 passed in 0.17s ===============================


Initial Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'jit', 'cudagraphs', 'openxla', 'inductor', 'tvm', 'onnxrt', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 6 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32] PASSED

============================== 6 passed in 0.24s ===============================
