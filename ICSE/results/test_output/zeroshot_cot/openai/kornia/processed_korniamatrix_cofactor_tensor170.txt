output file:
processed_korniamatrix_cofactor_tensor170.json
function:
matrix_cofactor_tensor
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape1]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape3] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_gradcheck[cpu] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape0] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape2] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape2]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_smoke[cpu-float32] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape3]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape0]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_correct_decompose FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape1] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape4] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_smoke[cpu-float32]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape4]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_correct_decompose', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_gradcheck[cpu]'}

All Test Cases On Generated code:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'inductor', 'jit', 'openxla', 'tvm', 'onnxrt', 'cudagraphs', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 9 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_smoke[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape0] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape1] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape2] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape3] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape4] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_gradcheck[cpu] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_correct_decompose FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_consistency[cpu-float32] XFAIL

=================================== FAILURES ===================================
__________ TestDecomposeEssentialMatrixNoSVD.test_smoke[cpu-float32] ___________

self = <test_essential.TestDecomposeEssentialMatrixNoSVD object at 0x7ef4a4d2ace0>
device = device(type='cpu'), dtype = torch.float32

    def test_smoke(self, device, dtype):
        E_mat = torch.rand(1, 3, 3, device=device, dtype=dtype)
>       R1, R2, t = epi.decompose_essential_matrix_no_svd(E_mat)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/essential.py:382: in decompose_essential_matrix_no_svd
    R1 = (matrix_cofactor_tensor(E_mat) - B1 @ E_mat) / (b1 * b1).sum().unsqueeze(-1)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

matrix = tensor([[[0.3412, 0.5332, 0.8693],
         [0.1371, 0.2707, 0.8345],
         [0.3145, 0.7487, 0.4022]]])

    def matrix_cofactor_tensor(matrix: torch.Tensor) -> torch.Tensor:
>       from .temp import matrix_cofactor_tensor
E       ImportError: cannot import name 'matrix_cofactor_tensor' from 'kornia.geometry.epipolar.temp' (/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/temp.py)

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/numeric.py:25: ImportError
____ TestDecomposeEssentialMatrixNoSVD.test_shape[cpu-float32-batch_shape0] ____

self = <test_essential.TestDecomposeEssentialMatrixNoSVD object at 0x7ef4a4d2b190>
batch_shape = (3, 3), device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.parametrize("batch_shape", [(3, 3), (1, 3, 3), (2, 3, 3), (2, 1, 3, 3), (3, 2, 1, 3, 3)])
    def test_shape(self, batch_shape, device, dtype):
        E_mat = torch.rand(batch_shape, device=device, dtype=dtype)
>       R1, R2, t = epi.decompose_essential_matrix_no_svd(E_mat)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py:285: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/essential.py:382: in decompose_essential_matrix_no_svd
    R1 = (matrix_cofactor_tensor(E_mat) - B1 @ E_mat) / (b1 * b1).sum().unsqueeze(-1)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

matrix = tensor([[[0.3187, 0.3915, 0.8693],
         [0.7873, 0.0520, 0.7232],
         [0.9748, 0.7888, 0.2146]]])

    def matrix_cofactor_tensor(matrix: torch.Tensor) -> torch.Tensor:
>       from .temp import matrix_cofactor_tensor
E       ImportError: cannot import name 'matrix_cofactor_tensor' from 'kornia.geometry.epipolar.temp' (/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/temp.py)

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/numeric.py:25: ImportError
____ TestDecomposeEssentialMatrixNoSVD.test_shape[cpu-float32-batch_shape1] ____

self = <test_essential.TestDecomposeEssentialMatrixNoSVD object at 0x7ef4a4d2b0d0>
batch_shape = (1, 3, 3), device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.parametrize("batch_shape", [(3, 3), (1, 3, 3), (2, 3, 3), (2, 1, 3, 3), (3, 2, 1, 3, 3)])
    def test_shape(self, batch_shape, device, dtype):
        E_mat = torch.rand(batch_shape, device=device, dtype=dtype)
>       R1, R2, t = epi.decompose_essential_matrix_no_svd(E_mat)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py:285: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/essential.py:382: in decompose_essential_matrix_no_svd
    R1 = (matrix_cofactor_tensor(E_mat) - B1 @ E_mat) / (b1 * b1).sum().unsqueeze(-1)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

matrix = tensor([[[0.0147, 0.0012, 0.7501],
         [0.7109, 0.1185, 0.2724],
         [0.8352, 0.5425, 0.3658]]])

    def matrix_cofactor_tensor(matrix: torch.Tensor) -> torch.Tensor:
>       from .temp import matrix_cofactor_tensor
E       ImportError: cannot import name 'matrix_cofactor_tensor' from 'kornia.geometry.epipolar.temp' (/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/temp.py)

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/numeric.py:25: ImportError
____ TestDecomposeEssentialMatrixNoSVD.test_shape[cpu-float32-batch_shape2] ____

self = <test_essential.TestDecomposeEssentialMatrixNoSVD object at 0x7ef4a4d2b490>
batch_shape = (2, 3, 3), device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.parametrize("batch_shape", [(3, 3), (1, 3, 3), (2, 3, 3), (2, 1, 3, 3), (3, 2, 1, 3, 3)])
    def test_shape(self, batch_shape, device, dtype):
        E_mat = torch.rand(batch_shape, device=device, dtype=dtype)
>       R1, R2, t = epi.decompose_essential_matrix_no_svd(E_mat)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py:285: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/essential.py:382: in decompose_essential_matrix_no_svd
    R1 = (matrix_cofactor_tensor(E_mat) - B1 @ E_mat) / (b1 * b1).sum().unsqueeze(-1)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

matrix = tensor([[[0.0983, 0.5905, 0.1856],
         [0.1024, 0.1006, 0.8677],
         [0.5007, 0.5489, 0.9374]],

        [[0.6138, 0.2573, 0.3164],
         [0.7076, 0.3138, 0.1066],
         [0.6837, 0.3932, 0.2903]]])

    def matrix_cofactor_tensor(matrix: torch.Tensor) -> torch.Tensor:
>       from .temp import matrix_cofactor_tensor
E       ImportError: cannot import name 'matrix_cofactor_tensor' from 'kornia.geometry.epipolar.temp' (/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/temp.py)

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/numeric.py:25: ImportError
____ TestDecomposeEssentialMatrixNoSVD.test_shape[cpu-float32-batch_shape3] ____

self = <test_essential.TestDecomposeEssentialMatrixNoSVD object at 0x7ef4a4d2b550>
batch_shape = (2, 1, 3, 3), device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.parametrize("batch_shape", [(3, 3), (1, 3, 3), (2, 3, 3), (2, 1, 3, 3), (3, 2, 1, 3, 3)])
    def test_shape(self, batch_shape, device, dtype):
        E_mat = torch.rand(batch_shape, device=device, dtype=dtype)
>       R1, R2, t = epi.decompose_essential_matrix_no_svd(E_mat)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py:285: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/essential.py:382: in decompose_essential_matrix_no_svd
    R1 = (matrix_cofactor_tensor(E_mat) - B1 @ E_mat) / (b1 * b1).sum().unsqueeze(-1)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

matrix = tensor([[[0.8262, 0.3036, 0.7511],
         [0.4214, 0.4476, 0.7709],
         [0.9545, 0.7344, 0.1623]],

        [[0.2707, 0.0692, 0.9781],
         [0.1065, 0.5059, 0.7731],
         [0.3044, 0.5408, 0.1633]]])

    def matrix_cofactor_tensor(matrix: torch.Tensor) -> torch.Tensor:
>       from .temp import matrix_cofactor_tensor
E       ImportError: cannot import name 'matrix_cofactor_tensor' from 'kornia.geometry.epipolar.temp' (/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/temp.py)

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/numeric.py:25: ImportError
____ TestDecomposeEssentialMatrixNoSVD.test_shape[cpu-float32-batch_shape4] ____

self = <test_essential.TestDecomposeEssentialMatrixNoSVD object at 0x7ef4a4d2b610>
batch_shape = (3, 2, 1, 3, 3), device = device(type='cpu')
dtype = torch.float32

    @pytest.mark.parametrize("batch_shape", [(3, 3), (1, 3, 3), (2, 3, 3), (2, 1, 3, 3), (3, 2, 1, 3, 3)])
    def test_shape(self, batch_shape, device, dtype):
        E_mat = torch.rand(batch_shape, device=device, dtype=dtype)
>       R1, R2, t = epi.decompose_essential_matrix_no_svd(E_mat)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py:285: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/essential.py:382: in decompose_essential_matrix_no_svd
    R1 = (matrix_cofactor_tensor(E_mat) - B1 @ E_mat) / (b1 * b1).sum().unsqueeze(-1)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

matrix = tensor([[[0.6801, 0.6626, 0.6410],
         [0.6951, 0.5009, 0.1890],
         [0.8496, 0.7263, 0.5748]],

        [[0..., 0.8567]],

        [[0.7440, 0.9712, 0.2629],
         [0.2280, 0.7722, 0.3794],
         [0.9096, 0.6800, 0.4141]]])

    def matrix_cofactor_tensor(matrix: torch.Tensor) -> torch.Tensor:
>       from .temp import matrix_cofactor_tensor
E       ImportError: cannot import name 'matrix_cofactor_tensor' from 'kornia.geometry.epipolar.temp' (/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/temp.py)

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/numeric.py:25: ImportError
____________ TestDecomposeEssentialMatrixNoSVD.test_gradcheck[cpu] _____________

self = <test_essential.TestDecomposeEssentialMatrixNoSVD object at 0x7ef4a4d2b880>
device = device(type='cpu')

    def test_gradcheck(self, device):
        E_mat = torch.rand(1, 3, 3, device=device, dtype=torch.float64, requires_grad=True)
    
        def eval_rot1(input):
            return epi.decompose_essential_matrix_no_svd(input)[0]
    
        def eval_rot2(input):
            return epi.decompose_essential_matrix_no_svd(input)[1]
    
        def eval_vec(input):
            return epi.decompose_essential_matrix_no_svd(input)[2]
    
>       self.gradcheck(eval_rot1, (E_mat,))

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py:304: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/testing/base.py:143: in gradcheck
    return gradcheck(func, inputs, raise_exception=raise_exception, fast_mode=fast_mode, **kwargs)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2052: in gradcheck
    return _gradcheck_helper(**args)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2074: in _gradcheck_helper
    func_out = func(*tupled_inputs)
/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py:296: in eval_rot1
    return epi.decompose_essential_matrix_no_svd(input)[0]
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/essential.py:382: in decompose_essential_matrix_no_svd
    R1 = (matrix_cofactor_tensor(E_mat) - B1 @ E_mat) / (b1 * b1).sum().unsqueeze(-1)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

matrix = tensor([[[0.6059, 0.6299, 0.4240],
         [0.0790, 0.9976, 0.6445],
         [0.6847, 0.8860, 0.5273]]], dtype=torch.float64, requires_grad=True)

    def matrix_cofactor_tensor(matrix: torch.Tensor) -> torch.Tensor:
>       from .temp import matrix_cofactor_tensor
E       ImportError: cannot import name 'matrix_cofactor_tensor' from 'kornia.geometry.epipolar.temp' (/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/temp.py)

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/numeric.py:25: ImportError
___________ TestDecomposeEssentialMatrixNoSVD.test_correct_decompose ___________

self = <test_essential.TestDecomposeEssentialMatrixNoSVD object at 0x7ef4a4d2ba60>

    def test_correct_decompose(self):
        E_mat = torch.tensor([[[0.2057, -3.8266, 3.1615], [4.5417, -1.0707, -2.2023], [-1.0975, 1.6386, -0.6590]]])
        R1, R2, t = epi.decompose_essential_matrix(E_mat)
>       R1_1, R2_1, t_1 = epi.decompose_essential_matrix_no_svd(E_mat)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py:311: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/essential.py:382: in decompose_essential_matrix_no_svd
    R1 = (matrix_cofactor_tensor(E_mat) - B1 @ E_mat) / (b1 * b1).sum().unsqueeze(-1)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

matrix = tensor([[[ 0.2057, -3.8266,  3.1615],
         [ 4.5417, -1.0707, -2.2023],
         [-1.0975,  1.6386, -0.6590]]])

    def matrix_cofactor_tensor(matrix: torch.Tensor) -> torch.Tensor:
>       from .temp import matrix_cofactor_tensor
E       ImportError: cannot import name 'matrix_cofactor_tensor' from 'kornia.geometry.epipolar.temp' (/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/temp.py)

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/numeric.py:25: ImportError
=============================== warnings summary ===============================
tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_smoke[cpu-float32]
  /local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/essential.py:351: UserWarning: Using torch.cross without specifying the dim arg is deprecated.
  Please either pass the dim explicitly or simply use torch.linalg.cross.
  The default value of dim will change to agree with that of linalg.cross in a future release. (Triggered internally at ../aten/src/ATen/native/Cross.cpp:62.)
    cross_products = torch.stack([torch.cross(e1, e2), torch.cross(e2, e3), torch.cross(e3, e1)], dim=1)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_smoke[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape0]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape1]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape2]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape3]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape4]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_gradcheck[cpu]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_correct_decompose
=================== 8 failed, 1 xfailed, 1 warning in 0.46s ====================


Final Test Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'cudagraphs', 'inductor', 'onnxrt', 'jit', 'openxla', 'tvm', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 9 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_smoke[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape0] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape1] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape2] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape3] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape4] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_gradcheck[cpu] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_correct_decompose PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_consistency[cpu-float32] XFAIL

=============================== warnings summary ===============================
tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_smoke[cpu-float32]
  /local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/essential.py:351: UserWarning: Using torch.cross without specifying the dim arg is deprecated.
  Please either pass the dim explicitly or simply use torch.linalg.cross.
  The default value of dim will change to agree with that of linalg.cross in a future release. (Triggered internally at ../aten/src/ATen/native/Cross.cpp:62.)
    cross_products = torch.stack([torch.cross(e1, e2), torch.cross(e2, e3), torch.cross(e3, e1)], dim=1)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=================== 8 passed, 1 xfailed, 1 warning in 0.34s ====================


Initial Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'tvm', 'cudagraphs', 'jit', 'openxla', 'onnxrt', 'inductor', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 9 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_smoke[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape0] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape1] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape2] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape3] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_shape[cpu-float32-batch_shape4] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_gradcheck[cpu] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_correct_decompose PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_consistency[cpu-float32] XFAIL

=============================== warnings summary ===============================
tests/geometry/epipolar/test_essential.py::TestDecomposeEssentialMatrixNoSVD::test_smoke[cpu-float32]
  /local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/epipolar/essential.py:351: UserWarning: Using torch.cross without specifying the dim arg is deprecated.
  Please either pass the dim explicitly or simply use torch.linalg.cross.
  The default value of dim will change to agree with that of linalg.cross in a future release. (Triggered internally at ../aten/src/ATen/native/Cross.cpp:62.)
    cross_products = torch.stack([torch.cross(e1, e2), torch.cross(e2, e3), torch.cross(e3, e1)], dim=1)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=================== 8 passed, 1 xfailed, 1 warning in 0.36s ====================
