output file:
processed_korniaraw_to_rgb353.json
function:
raw_to_rgb
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_functional[cpu-float32]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_module[cpu-float32] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cardinality[cpu-float32-2-2-4] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_gradcheck[cpu-float32] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_smoke[cpu-float32] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cfa_on_rolled[cpu-float32] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cardinality[cpu-float32-3-4-2] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_forth_and_back[cpu-float32] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cfa_on_rolled[cpu-float32]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cfas_not_the_same[cpu-float32] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_gradcheck[cpu-float32]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cardinality[cpu-float32-3-4-2]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_functional[cpu-float32] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cfas_not_the_same[cpu-float32]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_smoke[cpu-float32]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cardinality[cpu-float32-2-2-4]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_module[cpu-float32]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_forth_and_back[cpu-float32]'}

All Test Cases On Generated code:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'cudagraphs', 'openxla', 'onnxrt', 'tvm', 'inductor', 'jit', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 12 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_smoke[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cardinality[cpu-float32-1-6-4] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cardinality[cpu-float32-2-2-4] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cardinality[cpu-float32-3-4-2] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_exception[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_forth_and_back[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cfas_not_the_same[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_functional[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cfa_on_rolled[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_gradcheck[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_jit[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_module[cpu-float32] FAILED

=================================== FAILURES ===================================
_____________________ TestRawToRgb.test_smoke[cpu-float32] _____________________

self = <test_raw.TestRawToRgb object at 0x71ded6b2d9c0>
device = device(type='cpu'), dtype = torch.float32

    def test_smoke(self, device, dtype):
        C, H, W = 1, 4, 6
        img = torch.rand(C, H, W, device=device, dtype=dtype)
>       assert isinstance(kornia.color.raw_to_rgb(img, kornia.color.CFA.BG), torch.Tensor)

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/raw.py:32: in raw_to_rgb
    return raw_to_rgb(image, cfa)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[0.0794, 0.3434, 0.6618, 0.9254, 0.3277, 0.3696],
         [0.4479, 0.1906, 0.4289, 0.3567, 0.8503, 0.1721],
         [0.9654, 0.6955, 0.6419, 0.8558, 0.8717, 0.5574],
         [0.7150, 0.7766, 0.9858, 0.5999, 0.7773, 0.3498]]])
cfa = <CFA.BG: 0>

    def raw_to_rgb(image, cfa):
        if not isinstance(image, torch.Tensor):
            raise TypeError(f'Input type is not a torch.Tensor. Got {type(image)}.')
        if image.dim() < 4 or image.size(-3) != 1:
>           raise ValueError(f'Input size must have a shape of (*, 1, H, W). Got {image.shape}.')
E           ValueError: Input size must have a shape of (*, 1, H, W). Got torch.Size([1, 4, 6]).

/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/temp.py:15: ValueError
_______________ TestRawToRgb.test_cardinality[cpu-float32-1-6-4] _______________

self = <test_raw.TestRawToRgb object at 0x71ded6b2de70>
device = device(type='cpu'), dtype = torch.float32, batch_size = 1, height = 6
width = 4

    @pytest.mark.parametrize("batch_size, height, width", [(1, 6, 4), (2, 2, 4), (3, 4, 2)])
    def test_cardinality(self, device, dtype, batch_size, height, width):
        img = torch.ones(batch_size, 1, height, width, device=device, dtype=dtype)
>       assert kornia.color.raw_to_rgb(img, kornia.color.CFA.BG).shape == (batch_size, 3, height, width)
E       AttributeError: 'NoneType' object has no attribute 'shape'

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py:25: AttributeError
_______________ TestRawToRgb.test_cardinality[cpu-float32-2-2-4] _______________

self = <test_raw.TestRawToRgb object at 0x71ded6b2ddb0>
device = device(type='cpu'), dtype = torch.float32, batch_size = 2, height = 2
width = 4

    @pytest.mark.parametrize("batch_size, height, width", [(1, 6, 4), (2, 2, 4), (3, 4, 2)])
    def test_cardinality(self, device, dtype, batch_size, height, width):
        img = torch.ones(batch_size, 1, height, width, device=device, dtype=dtype)
>       assert kornia.color.raw_to_rgb(img, kornia.color.CFA.BG).shape == (batch_size, 3, height, width)
E       AttributeError: 'NoneType' object has no attribute 'shape'

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py:25: AttributeError
_______________ TestRawToRgb.test_cardinality[cpu-float32-3-4-2] _______________

self = <test_raw.TestRawToRgb object at 0x71ded6b2e170>
device = device(type='cpu'), dtype = torch.float32, batch_size = 3, height = 4
width = 2

    @pytest.mark.parametrize("batch_size, height, width", [(1, 6, 4), (2, 2, 4), (3, 4, 2)])
    def test_cardinality(self, device, dtype, batch_size, height, width):
        img = torch.ones(batch_size, 1, height, width, device=device, dtype=dtype)
>       assert kornia.color.raw_to_rgb(img, kornia.color.CFA.BG).shape == (batch_size, 3, height, width)
E       AttributeError: 'NoneType' object has no attribute 'shape'

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py:25: AttributeError
________________ TestRawToRgb.test_forth_and_back[cpu-float32] _________________

self = <test_raw.TestRawToRgb object at 0x71ded6b2e770>
device = device(type='cpu'), dtype = torch.float32

    def test_forth_and_back(self, device, dtype):  # skipcq: PYL-R0201
        data = torch.rand(1, 80, 80, device=device, dtype=dtype)
        raw = kornia.color.rgb_to_raw
        rgb = kornia.color.raw_to_rgb
    
        for x in kornia.color.CFA:
>           data_out = raw(rgb(data, cfa=x), cfa=x)

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/raw.py:32: in raw_to_rgb
    return raw_to_rgb(image, cfa)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[0.6615, 0.0101, 0.4122,  ..., 0.2220, 0.7542, 0.0530],
         [0.2892, 0.1765, 0.8917,  ..., 0.5970, 0.439...1229, 0.5616, 0.1205,  ..., 0.5427, 0.5529, 0.7356],
         [0.7306, 0.9034, 0.5277,  ..., 0.3706, 0.5666, 0.7605]]])
cfa = <CFA.BG: 0>

    def raw_to_rgb(image, cfa):
        if not isinstance(image, torch.Tensor):
            raise TypeError(f'Input type is not a torch.Tensor. Got {type(image)}.')
        if image.dim() < 4 or image.size(-3) != 1:
>           raise ValueError(f'Input size must have a shape of (*, 1, H, W). Got {image.shape}.')
E           ValueError: Input size must have a shape of (*, 1, H, W). Got torch.Size([1, 80, 80]).

/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/temp.py:15: ValueError
_______________ TestRawToRgb.test_cfas_not_the_same[cpu-float32] _______________

self = <test_raw.TestRawToRgb object at 0x71ded6b2dba0>
device = device(type='cpu'), dtype = torch.float32

    def test_cfas_not_the_same(self, device, dtype):  # skipcq: PYL-R0201
        data = torch.rand(1, 16, 16, device=device, dtype=dtype)
>       assert (
            torch.max(
                kornia.color.raw_to_rgb(data, kornia.color.CFA.BG) - kornia.color.raw_to_rgb(data, kornia.color.CFA.RG)
            )
            > 0.0
        )

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/raw.py:32: in raw_to_rgb
    return raw_to_rgb(image, cfa)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[0.6787, 0.6000, 0.5135, 0.7378, 0.2399, 0.4585, 0.5269, 0.5551,
          0.6984, 0.9621, 0.8875, 0.7252, 0....2, 0.9048, 0.0555, 0.9047, 0.1981, 0.2456,
          0.0036, 0.9963, 0.7920, 0.2334, 0.4922, 0.7541, 0.4289, 0.7372]]])
cfa = <CFA.BG: 0>

    def raw_to_rgb(image, cfa):
        if not isinstance(image, torch.Tensor):
            raise TypeError(f'Input type is not a torch.Tensor. Got {type(image)}.')
        if image.dim() < 4 or image.size(-3) != 1:
>           raise ValueError(f'Input size must have a shape of (*, 1, H, W). Got {image.shape}.')
E           ValueError: Input size must have a shape of (*, 1, H, W). Got torch.Size([1, 16, 16]).

/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/temp.py:15: ValueError
__________________ TestRawToRgb.test_functional[cpu-float32] ___________________

self = <test_raw.TestRawToRgb object at 0x71ded6b2eb90>
device = device(type='cpu'), dtype = torch.float32

    def test_functional(self, device, dtype):  # skipcq: PYL-R0201
        data = torch.tensor(
            [[[1, 0.5, 0.2, 0.4], [0.75, 0.25, 0.8, 0.3], [0.65, 0.15, 0.7, 0.2], [0.55, 0.5, 0.6, 0.1]]],
            device=device,
            dtype=dtype,
        )
        # checked by hand as correct interpolation. Note the ugly replication that happens for Red on the last column
        # and row. We shall accept to live with that
        expected = torch.tensor(
            [
                [
                    [1.0000, 0.6000, 0.2000, 0.2000],
                    [0.8250, 0.6375, 0.4500, 0.4500],
                    [0.6500, 0.6750, 0.7000, 0.7000],
                    [0.6500, 0.6750, 0.7000, 0.7000],
                ],
                [
                    [0.6250, 0.5000, 0.6250, 0.4000],
                    [0.7500, 0.5500, 0.8000, 0.5500],
                    [0.4000, 0.1500, 0.4375, 0.2000],
                    [0.5500, 0.3625, 0.6000, 0.4000],
                ],
                [
                    [0.2500, 0.2500, 0.2750, 0.3000],
                    [0.2500, 0.2500, 0.2750, 0.3000],
                    [0.3750, 0.3750, 0.2875, 0.2000],
                    [0.5000, 0.5000, 0.3000, 0.1000],
                ],
            ],
            device=device,
            dtype=dtype,
        )
    
>       img_rgb = kornia.color.raw_to_rgb(data, kornia.color.raw.CFA.BG)

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py:109: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/raw.py:32: in raw_to_rgb
    return raw_to_rgb(image, cfa)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[1.0000, 0.5000, 0.2000, 0.4000],
         [0.7500, 0.2500, 0.8000, 0.3000],
         [0.6500, 0.1500, 0.7000, 0.2000],
         [0.5500, 0.5000, 0.6000, 0.1000]]])
cfa = <CFA.BG: 0>

    def raw_to_rgb(image, cfa):
        if not isinstance(image, torch.Tensor):
            raise TypeError(f'Input type is not a torch.Tensor. Got {type(image)}.')
        if image.dim() < 4 or image.size(-3) != 1:
>           raise ValueError(f'Input size must have a shape of (*, 1, H, W). Got {image.shape}.')
E           ValueError: Input size must have a shape of (*, 1, H, W). Got torch.Size([1, 4, 4]).

/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/temp.py:15: ValueError
_________________ TestRawToRgb.test_cfa_on_rolled[cpu-float32] _________________

self = <test_raw.TestRawToRgb object at 0x71ded6b2eec0>
device = device(type='cpu'), dtype = torch.float32

    def test_cfa_on_rolled(self, device, dtype):  # skipcq: PYL-R0201
        data = torch.rand(1, 1, 8, 8, device=device, dtype=dtype)
        bgres = kornia.color.raw_to_rgb(data, kornia.color.raw.CFA.BG)
        gbres = kornia.color.raw_to_rgb(data.roll((0, 1), (-2, -1)), kornia.color.raw.CFA.GB)
        grres = kornia.color.raw_to_rgb(data.roll((1, 0), (-2, -1)), kornia.color.raw.CFA.GR)
        rgres = kornia.color.raw_to_rgb(data.roll((1, 1), (-2, -1)), kornia.color.raw.CFA.RG)
    
>       assert_close(bgres[:, :, 1:5, 1:5], gbres[:, :, 1:5, 2:6])
E       TypeError: 'NoneType' object is not subscriptable

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py:120: TypeError
___________________ TestRawToRgb.test_gradcheck[cpu-float32] ___________________

self = <test_raw.TestRawToRgb object at 0x71ded6b2f1f0>
device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.grad()
    def test_gradcheck(self, device, dtype):
        B, C, H, W = 2, 1, 4, 4
        img = torch.ones(B, C, H, W, device=device, dtype=torch.float64, requires_grad=True)
>       assert gradcheck(kornia.color.raw_to_rgb, (img, kornia.color.raw.CFA.BG), raise_exception=True, fast_mode=True)

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py:128: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2052: in gradcheck
    return _gradcheck_helper(**args)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2075: in _gradcheck_helper
    outputs = _differentiable_outputs(func_out)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:1369: in _differentiable_outputs
    return tuple(o for o in _as_tuple(x) if o.requires_grad)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <tuple_iterator object at 0x71ded6bacdc0>

>   return tuple(o for o in _as_tuple(x) if o.requires_grad)
E   AttributeError: 'NoneType' object has no attribute 'requires_grad'

/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:1369: AttributeError
______________________ TestRawToRgb.test_jit[cpu-float32] ______________________

self = <test_raw.TestRawToRgb object at 0x71ded6b2f520>
device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.jit()
    def test_jit(self, device, dtype):
        if version.parse(torch.__version__) < version.parse("1.7.0"):
            warnings.warn(
                "This test is not compatible with pytorch < 1.7.0. This message will be removed as soon as we do not "
                "support pytorch 1.6.0. `rgb_to_hls()` method for pytorch < 1.7.0 version cannot be compiled with JIT.",
                DeprecationWarning,
                stacklevel=2,
            )
            return
        B, C, H, W = 2, 1, 4, 4
        img = torch.ones(B, C, H, W, device=device, dtype=dtype)
        op = kornia.color.raw_to_rgb
>       op_jit = torch.jit.script(op)

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py:143: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/_script.py:1429: in script
    ret = _script_impl(
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/_script.py:1202: in _script_impl
    ast = get_jit_def(obj, obj.__name__)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/frontend.py:383: in get_jit_def
    return build_def(
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/frontend.py:444: in build_def
    return Def(Ident(r, def_name), decl, build_stmts(ctx, body))
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/frontend.py:197: in build_stmts
    stmts = [build_stmt(ctx, s) for s in stmts]
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/frontend.py:197: in <listcomp>
    stmts = [build_stmt(ctx, s) for s in stmts]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <torch.jit.frontend.StmtBuilder object at 0x71dfb0785bd0>
ctx = <torch._sources.SourceContext object at 0x71ded6502660>
node = <ast.ImportFrom object at 0x71ded6bb0d30>

    def __call__(self, ctx, node):
        method = getattr(self, "build_" + node.__class__.__name__, None)
        if method is None:
>           raise UnsupportedNodeError(ctx, node)
E           torch.jit.frontend.UnsupportedNodeError: import statements aren't supported:
E             File "/local/data0/moved_data/publishablew/kornia/kornia/kornia/color/raw.py", line 31
E           def raw_to_rgb(image: torch.Tensor, cfa: CFA) -> torch.Tensor:
E               from .temp import raw_to_rgb
E               ~~~~ <--- HERE
E               return raw_to_rgb(image, cfa)

/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/jit/frontend.py:416: UnsupportedNodeError
____________________ TestRawToRgb.test_module[cpu-float32] _____________________

self = <test_raw.TestRawToRgb object at 0x71ded6b2f850>
device = device(type='cpu'), dtype = torch.float32

    def test_module(self, device, dtype):
        B, C, H, W = 2, 1, 4, 4
        img = torch.ones(B, C, H, W, device=device, dtype=dtype)
        raw_ops = kornia.color.RawToRgb(kornia.color.raw.CFA.BG).to(device, dtype)
        raw_fcn = kornia.color.raw_to_rgb
>       assert_close(raw_ops(img), raw_fcn(img, kornia.color.raw.CFA.BG))

/local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py:151: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/core/module.py:276: in __call__
    self._output_image = self._detach_tensor_to_cpu(_output_image)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = RawToRgb(), output_image = None

    def _detach_tensor_to_cpu(
        self, output_image: Union[Tensor, list[Tensor], tuple[Tensor]]
    ) -> Union[Tensor, list[Tensor], tuple[Tensor]]:
        if isinstance(output_image, (Tensor,)):
            return output_image.detach().cpu()
        if isinstance(
            output_image,
            (
                list,
                tuple,
            ),
        ):
            return type(output_image)([self._detach_tensor_to_cpu(out) for out in output_image])  # type: ignore
>       raise RuntimeError(f"Unexpected object {output_image} with a type of `{type(output_image)}`")
E       RuntimeError: Unexpected object None with a type of `<class 'NoneType'>`

/local/data0/moved_data/publishablew/kornia/kornia/kornia/core/module.py:182: RuntimeError
=========================== short test summary info ============================
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_smoke[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cardinality[cpu-float32-1-6-4]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cardinality[cpu-float32-2-2-4]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cardinality[cpu-float32-3-4-2]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_forth_and_back[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cfas_not_the_same[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_functional[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cfa_on_rolled[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_gradcheck[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_jit[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_module[cpu-float32]
========================= 11 failed, 1 passed in 0.45s =========================


Final Test Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'openxla', 'onnxrt', 'inductor', 'jit', 'cudagraphs', 'tvm', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 12 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_smoke[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cardinality[cpu-float32-1-6-4] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cardinality[cpu-float32-2-2-4] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cardinality[cpu-float32-3-4-2] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_exception[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_forth_and_back[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cfas_not_the_same[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_functional[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cfa_on_rolled[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_gradcheck[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_jit[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_module[cpu-float32] PASSED

============================== 12 passed in 0.29s ==============================


Initial Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'tvm', 'cudagraphs', 'onnxrt', 'inductor', 'jit', 'openxla', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 12 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_smoke[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cardinality[cpu-float32-1-6-4] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cardinality[cpu-float32-2-2-4] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cardinality[cpu-float32-3-4-2] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_exception[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_forth_and_back[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cfas_not_the_same[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_functional[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_cfa_on_rolled[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_gradcheck[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_jit[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/color/test_raw.py::TestRawToRgb::test_module[cpu-float32] PASSED

============================== 12 passed in 0.29s ==============================
