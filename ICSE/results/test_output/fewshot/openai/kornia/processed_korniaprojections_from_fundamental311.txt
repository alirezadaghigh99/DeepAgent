output file:
processed_korniaprojections_from_fundamental311.json
function:
projections_from_fundamental
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_gradcheck[cpu]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_gradcheck[cpu] FAILED'}

All Test Cases On Generated code:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'inductor', 'cudagraphs', 'onnxrt', 'openxla', 'jit', None, 'tvm'}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 5 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_smoke[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_shape[cpu-float32-1] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_shape[cpu-float32-2] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_shape[cpu-float32-4] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_gradcheck[cpu] FAILED

=================================== FAILURES ===================================
______________ TestProjectionsFromFundamental.test_gradcheck[cpu] ______________

self = <test_projection.TestProjectionsFromFundamental object at 0x7ad1afd2e560>
device = device(type='cpu')

    def test_gradcheck(self, device):
        F_mat = torch.rand(1, 3, 3, device=device, dtype=torch.float64, requires_grad=True)
>       assert gradcheck(epi.projections_from_fundamental, (F_mat,), raise_exception=True, fast_mode=True)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py:137: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2052: in gradcheck
    return _gradcheck_helper(**args)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2081: in _gradcheck_helper
    _gradcheck_real_imag(
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:1491: in _gradcheck_real_imag
    gradcheck_fn(
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:1925: in _fast_gradcheck
    _check_analytical_numerical_equal(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

all_analytical = [[tensor(-0.3093, dtype=torch.float64)]]
all_numerical = [[tensor(-0.3151, dtype=torch.float64)]], complex_indices = None
tupled_inputs = (tensor([[[0.6396, 0.1377, 0.8834],
         [0.0722, 0.2799, 0.0879],
         [0.2398, 0.1959, 0.7768]]], dtype=torch.float64, requires_grad=True),)
outputs = (tensor([[[[ 1.0000,  0.0406],
          [ 0.0000,  0.1472],
          [ 0.0000,  0.0561],
          [ 0.0000, -0.8563....2416],
          [ 1.0000, -0.0875],
          [ 0.0000, -0.5163]]]], dtype=torch.float64, grad_fn=<StackBackward0>),)
func = <function projections_from_fundamental at 0x7ad2371f3880>
all_v = [tensor([0.1446, 0.0286, 0.1659, 0.0562, 0.0520, 0.1231, 0.1741, 0.2409, 0.2973,
        0.2852, 0.3342, 0.1893, 0.1475, 0.0432, 0.0936, 0.2556, 0.1541, 0.0348,
        0.2629, 0.3241, 0.2144, 0.0842, 0.2902, 0.3001], dtype=torch.float64)]
all_u = [tensor([0.1450, 0.4735, 0.1819, 0.2187, 0.4271, 0.2483, 0.0390, 0.5271, 0.3878],
       dtype=torch.float64)]
rtol = 0.001, atol = 1e-05, eps = 1e-06, test_imag = False

    def _check_analytical_numerical_equal(
        all_analytical,
        all_numerical,
        complex_indices,
        tupled_inputs,
        outputs,
        func,
        all_v,
        all_u,
        rtol,
        atol,
        eps,
        test_imag,
        *,
        is_forward_ad=False,
    ):
        for i, all_numerical_for_input_i in enumerate(all_numerical):
            for j, n in enumerate(all_numerical_for_input_i):
                # Forward AD generates the transpose of what this function expects
                if is_forward_ad:
                    a = all_analytical[i][j]
                else:
                    a = all_analytical[j][i]
                n = n.to(device=a.device)
                updated_atol = _adjusted_atol(atol, all_u[i], all_v[j] if all_v else None)
                if not _allclose_with_type_promotion(a, n.to(a.device), rtol, updated_atol):
                    jacobians_str = _run_slow_mode_and_get_error(
                        func, tupled_inputs, outputs, i, j, rtol, atol, eps, is_forward_ad
                    )
>                   raise GradcheckError(
                        _get_notallclose_msg(
                            a, n, j, i, complex_indices, test_imag, is_forward_ad
                        )
                        + jacobians_str
                    )
E                   torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
E                   numerical:tensor(-0.3151, dtype=torch.float64)
E                   analytical:tensor(-0.3093, dtype=torch.float64)
E                   
E                   The above quantities relating the numerical and analytical jacobians are computed 
E                   in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
E                   about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:
E                   
E                   Numerical:
E                    tensor([[ 0.0000e+00,  5.2886e-01,  0.0000e+00,  5.1361e-01,  0.0000e+00,
E                             1.6589e+00,  0.0000e+00,  2.5672e-01,  0.0000e+00, -8.1420e-01,
E                             0.0000e+00, -1.0117e-01,  0.0000e+00, -5.2589e-01,  0.0000e+00,
E                             2.0939e+00,  0.0000e+00, -1.3345e+00,  0.0000e+00, -2.1644e-01,
E                             0.0000e+00, -1.8272e+00,  0.0000e+00, -3.6956e-01],
E                           [ 0.0000e+00, -2.8063e-01,  0.0000e+00, -1.8499e-01,  0.0000e+00,
E                            -9.3816e-01,  0.0000e+00,  1.0077e-01,  0.0000e+00, -1.5220e-01,
E                             0.0000e+00, -5.6358e-01,  0.0000e+00, -2.5513e-01,  0.0000e+00,
E                            -1.2304e+00,  0.0000e+00,  7.9419e-01,  0.0000e+00,  1.8375e-01,
E                             0.0000e+00,  1.0958e+00,  0.0000e+00, -2.0019e-01],
E                           [ 0.0000e+00, -2.1685e-01,  0.0000e+00, -2.2147e-01,  0.0000e+00,
E                            -6.7303e-01,  0.0000e+00, -1.3468e-01,  0.0000e+00,  1.6068e-01,
E                             0.0000e+00,  5.4020e-02,  0.0000e+00, -2.3434e-01,  0.0000e+00,
E                            -8.4374e-01,  0.0000e+00,  5.2990e-01,  0.0000e+00,  7.8475e-02,
E                             0.0000e+00,  7.1967e-01,  0.0000e+00,  2.0072e-01],
E                           [ 0.0000e+00,  1.5405e-03,  0.0000e+00, -3.8917e-01,  0.0000e+00,
E                            -1.6878e+00,  0.0000e+00,  4.9859e-02,  0.0000e+00, -1.0244e-01,
E                             0.0000e+00, -2.9247e-02,  0.0000e+00, -1.6372e-01,  0.0000e+00,
E                            -2.1888e+00,  0.0000e+00,  5.4716e-01,  0.0000e+00,  3.1533e-01,
E                             0.0000e+00,  1.9380e+00,  0.0000e+00, -1.4148e-01],
E                           [ 0.0000e+00, -6.6339e-01,  0.0000e+00, -1.7924e-03,  0.0000e+00,
E                            -2.1643e+00,  0.0000e+00,  1.9579e-02,  0.0000e+00, -7.3533e-02,
E                             0.0000e+00, -1.8655e-02,  0.0000e+00, -1.1029e-01,  0.0000e+00,
E                            -2.7985e+00,  0.0000e+00,  1.7912e+00,  0.0000e+00, -4.6551e-01,
E                             0.0000e+00,  2.4739e+00,  0.0000e+00, -1.0763e-01],
E                           [ 0.0000e+00,  4.0879e-01,  0.0000e+00,  3.2384e-01,  0.0000e+00,
E                             1.8469e+00,  0.0000e+00,  3.7445e-04,  0.0000e+00,  2.9025e-02,
E                             0.0000e+00,  6.1947e-03,  0.0000e+00,  3.9925e-02,  0.0000e+00,
E                             1.7182e+00,  0.0000e+00, -1.0989e+00,  0.0000e+00, -2.3647e-01,
E                             0.0000e+00, -2.3741e+00,  0.0000e+00,  4.5523e-02],
E                           [ 0.0000e+00, -4.2656e-01,  0.0000e+00, -2.8863e-01,  0.0000e+00,
E                            -1.4734e+00,  0.0000e+00,  1.6272e-01,  0.0000e+00,  6.1146e-01,
E                             0.0000e+00, -7.6188e-02,  0.0000e+00, -4.1070e-01,  0.0000e+00,
E                            -1.9333e+00,  0.0000e+00,  1.2482e+00,  0.0000e+00,  3.1174e-01,
E                             0.0000e+00,  1.7222e+00,  0.0000e+00, -3.2182e-01],
E                           [ 0.0000e+00,  2.9125e-01,  0.0000e+00,  2.6808e-01,  0.0000e+00,
E                             9.3251e-01,  0.0000e+00,  6.3858e-02,  0.0000e+00, -6.2579e-02,
E                             0.0000e+00,  8.3363e-01,  0.0000e+00, -1.1489e-01,  0.0000e+00,
E                             1.1921e+00,  0.0000e+00, -7.5783e-01,  0.0000e+00, -1.4627e-01,
E                             0.0000e+00, -1.0475e+00,  0.0000e+00, -7.3901e-02],
E                           [ 0.0000e+00,  1.6413e-01,  0.0000e+00,  7.3021e-02,  0.0000e+00,
E                             5.8581e-01,  0.0000e+00, -1.5414e-01,  0.0000e+00,  2.1367e-01,
E                             0.0000e+00,  6.8236e-02,  0.0000e+00,  1.2201e+00,  0.0000e+00,
E                             7.6755e-01,  0.0000e+00, -5.0202e-01,  0.0000e+00, -1.4883e-01,
E                             0.0000e+00, -6.9160e-01,  0.0000e+00,  2.7628e-01]],
E                          dtype=torch.float64)
E                   Analytical:
E                   tensor([[ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00,  2.5672e-01,  0.0000e+00, -5.1627e-01,
E                             0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                             2.0939e+00,  0.0000e+00, -1.3865e-02,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00,  0.0000e+00, -3.6956e-01],
E                           [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00,  1.0077e-01,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00, -5.1627e-01,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                            -1.2304e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00, -1.3865e-02,
E                             0.0000e+00,  0.0000e+00,  0.0000e+00, -2.0019e-01],
E                           [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00, -1.3468e-01,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00,  0.0000e+00, -5.1627e-01,  0.0000e+00,
E                            -8.4374e-01,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00, -1.3865e-02,  0.0000e+00,  2.0072e-01],
E                           [ 0.0000e+00,  5.1627e-01,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00,  4.9859e-02,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                            -2.1888e+00,  0.0000e+00, -8.5631e-01,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00,  0.0000e+00, -1.4148e-01],
E                           [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  5.1627e-01,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00,  1.9579e-02,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                            -2.7985e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00, -8.5631e-01,
E                             0.0000e+00,  0.0000e+00,  0.0000e+00, -1.0763e-01],
E                           [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                             5.1627e-01,  0.0000e+00,  3.7445e-04,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                             1.7182e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00, -8.5631e-01,  0.0000e+00,  4.5523e-02],
E                           [ 0.0000e+00,  1.3865e-02,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00,  1.6272e-01,  0.0000e+00,  8.5631e-01,
E                             0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                            -1.9333e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00,  0.0000e+00, -3.2182e-01],
E                           [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  1.3865e-02,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00,  6.3858e-02,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00,  8.5631e-01,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                             1.1921e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00,  0.0000e+00, -7.3901e-02],
E                           [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                             1.3865e-02,  0.0000e+00, -1.5414e-01,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00,  0.0000e+00,  8.5631e-01,  0.0000e+00,
E                             7.6755e-01,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
E                             0.0000e+00,  0.0000e+00,  0.0000e+00,  2.7628e-01]],
E                          dtype=torch.float64)
E                   
E                   The max per-element difference (slow mode) is: 2.4739033209902894.

/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:1854: GradcheckError
=========================== short test summary info ============================
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_gradcheck[cpu]
========================= 1 failed, 4 passed in 0.36s ==========================


Final Test Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'tvm', 'openxla', 'jit', 'onnxrt', 'inductor', 'cudagraphs', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 5 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_smoke[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_shape[cpu-float32-1] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_shape[cpu-float32-2] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_shape[cpu-float32-4] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_gradcheck[cpu] PASSED

============================== 5 passed in 0.16s ===============================


Initial Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', None, 'cudagraphs', 'onnxrt', 'tvm', 'inductor', 'openxla', 'jit'}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 5 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_smoke[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_shape[cpu-float32-1] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_shape[cpu-float32-2] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_shape[cpu-float32-4] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionsFromFundamental::test_gradcheck[cpu] PASSED

============================== 5 passed in 0.16s ===============================
