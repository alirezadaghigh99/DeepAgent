output file:
processed_korniacenter_crop3d235.json
function:
center_crop3d
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size2] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size0]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size1]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size0] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size0] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size1] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_gradcheck[cpu] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size2]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size0]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size2] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_dynamo[cpu-float32-inductor]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size1]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_gradcheck[cpu]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size1] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_dynamo[cpu-float32-inductor] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size2]'}

All Test Cases On Generated code:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'inductor', 'openxla', 'jit', 'tvm', 'cudagraphs', 'onnxrt', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 8 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size0] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size1] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size2] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size0] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size1] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size2] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_gradcheck[cpu] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_dynamo[cpu-float32-inductor] FAILED

=================================== FAILURES ===================================
________ TestCenterCrop3D.test_center_crop_357[cpu-float32-crop_size0] _________

self = <test_crop3d.TestCenterCrop3D object at 0x795922d2e650>
crop_size = (3, 5, 7), device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.parametrize("crop_size", [(3, 5, 7), (5, 3, 7), (7, 3, 5)])
    def test_center_crop_357(self, crop_size, device, dtype):
        inp = torch.arange(0.0, 343.0, device=device, dtype=dtype).view(1, 1, 7, 7, 7)
        expected = inp[
            :,
            :,
            (inp.size(2) // 2 - crop_size[0] // 2) : (inp.size(2) // 2 + crop_size[0] // 2 + 1),
            (inp.size(3) // 2 - crop_size[1] // 2) : (inp.size(3) // 2 + crop_size[1] // 2 + 1),
            (inp.size(4) // 2 - crop_size[2] // 2) : (inp.size(4) // 2 + crop_size[2] // 2 + 1),
        ]
>       out_crop = kornia.geometry.transform.center_crop3d(inp, crop_size, align_corners=True)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py:101: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/transform/crop3d.py:77: in center_crop3d
    from .temp import center_crop3d
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    from typing import Tuple
    import torch
    from kornia.geometry.bbox import infer_bbox_shape3d, validate_bbox3d
    from .imgwarp import get_perspective_transform3d, warp_affine3d
    import torch
    import torch.nn.functional as F
    
>   def center_crop3d(volume: torch.Tensor, size: Tuple[int, int, int], interpolation: str='trilinear', align_corners: Optional[bool]=None) -> torch.Tensor:
E   NameError: name 'Optional' is not defined

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/transform/temp.py:8: NameError
________ TestCenterCrop3D.test_center_crop_357[cpu-float32-crop_size1] _________

self = <test_crop3d.TestCenterCrop3D object at 0x795922d2e5c0>
crop_size = (5, 3, 7), device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.parametrize("crop_size", [(3, 5, 7), (5, 3, 7), (7, 3, 5)])
    def test_center_crop_357(self, crop_size, device, dtype):
        inp = torch.arange(0.0, 343.0, device=device, dtype=dtype).view(1, 1, 7, 7, 7)
        expected = inp[
            :,
            :,
            (inp.size(2) // 2 - crop_size[0] // 2) : (inp.size(2) // 2 + crop_size[0] // 2 + 1),
            (inp.size(3) // 2 - crop_size[1] // 2) : (inp.size(3) // 2 + crop_size[1] // 2 + 1),
            (inp.size(4) // 2 - crop_size[2] // 2) : (inp.size(4) // 2 + crop_size[2] // 2 + 1),
        ]
>       out_crop = kornia.geometry.transform.center_crop3d(inp, crop_size, align_corners=True)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py:101: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/transform/crop3d.py:77: in center_crop3d
    from .temp import center_crop3d
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    from typing import Tuple
    import torch
    from kornia.geometry.bbox import infer_bbox_shape3d, validate_bbox3d
    from .imgwarp import get_perspective_transform3d, warp_affine3d
    import torch
    import torch.nn.functional as F
    
>   def center_crop3d(volume: torch.Tensor, size: Tuple[int, int, int], interpolation: str='trilinear', align_corners: Optional[bool]=None) -> torch.Tensor:
E   NameError: name 'Optional' is not defined

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/transform/temp.py:8: NameError
________ TestCenterCrop3D.test_center_crop_357[cpu-float32-crop_size2] _________

self = <test_crop3d.TestCenterCrop3D object at 0x795922d2e860>
crop_size = (7, 3, 5), device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.parametrize("crop_size", [(3, 5, 7), (5, 3, 7), (7, 3, 5)])
    def test_center_crop_357(self, crop_size, device, dtype):
        inp = torch.arange(0.0, 343.0, device=device, dtype=dtype).view(1, 1, 7, 7, 7)
        expected = inp[
            :,
            :,
            (inp.size(2) // 2 - crop_size[0] // 2) : (inp.size(2) // 2 + crop_size[0] // 2 + 1),
            (inp.size(3) // 2 - crop_size[1] // 2) : (inp.size(3) // 2 + crop_size[1] // 2 + 1),
            (inp.size(4) // 2 - crop_size[2] // 2) : (inp.size(4) // 2 + crop_size[2] // 2 + 1),
        ]
>       out_crop = kornia.geometry.transform.center_crop3d(inp, crop_size, align_corners=True)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py:101: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/transform/crop3d.py:77: in center_crop3d
    from .temp import center_crop3d
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    from typing import Tuple
    import torch
    from kornia.geometry.bbox import infer_bbox_shape3d, validate_bbox3d
    from .imgwarp import get_perspective_transform3d, warp_affine3d
    import torch
    import torch.nn.functional as F
    
>   def center_crop3d(volume: torch.Tensor, size: Tuple[int, int, int], interpolation: str='trilinear', align_corners: Optional[bool]=None) -> torch.Tensor:
E   NameError: name 'Optional' is not defined

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/transform/temp.py:8: NameError
_____ TestCenterCrop3D.test_center_crop_357_batch[cpu-float32-crop_size0] ______

self = <test_crop3d.TestCenterCrop3D object at 0x795922d2ebf0>
crop_size = (3, 5, 7), device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.parametrize("crop_size", [(3, 5, 7), (5, 3, 7), (7, 3, 5)])
    def test_center_crop_357_batch(self, crop_size, device, dtype):
        inp = torch.cat(
            [
                torch.arange(0.0, 343.0, device=device, dtype=dtype).view(1, 1, 7, 7, 7),
                torch.arange(343.0, 686.0, device=device, dtype=dtype).view(1, 1, 7, 7, 7),
            ]
        )
        expected = inp[
            :,
            :,
            (inp.size(2) // 2 - crop_size[0] // 2) : (inp.size(2) // 2 + crop_size[0] // 2 + 1),
            (inp.size(3) // 2 - crop_size[1] // 2) : (inp.size(3) // 2 + crop_size[1] // 2 + 1),
            (inp.size(4) // 2 - crop_size[2] // 2) : (inp.size(4) // 2 + crop_size[2] // 2 + 1),
        ]
>       out_crop = kornia.geometry.transform.center_crop3d(inp, crop_size, align_corners=True)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py:119: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/transform/crop3d.py:77: in center_crop3d
    from .temp import center_crop3d
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    from typing import Tuple
    import torch
    from kornia.geometry.bbox import infer_bbox_shape3d, validate_bbox3d
    from .imgwarp import get_perspective_transform3d, warp_affine3d
    import torch
    import torch.nn.functional as F
    
>   def center_crop3d(volume: torch.Tensor, size: Tuple[int, int, int], interpolation: str='trilinear', align_corners: Optional[bool]=None) -> torch.Tensor:
E   NameError: name 'Optional' is not defined

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/transform/temp.py:8: NameError
_____ TestCenterCrop3D.test_center_crop_357_batch[cpu-float32-crop_size1] ______

self = <test_crop3d.TestCenterCrop3D object at 0x795922d2eb30>
crop_size = (5, 3, 7), device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.parametrize("crop_size", [(3, 5, 7), (5, 3, 7), (7, 3, 5)])
    def test_center_crop_357_batch(self, crop_size, device, dtype):
        inp = torch.cat(
            [
                torch.arange(0.0, 343.0, device=device, dtype=dtype).view(1, 1, 7, 7, 7),
                torch.arange(343.0, 686.0, device=device, dtype=dtype).view(1, 1, 7, 7, 7),
            ]
        )
        expected = inp[
            :,
            :,
            (inp.size(2) // 2 - crop_size[0] // 2) : (inp.size(2) // 2 + crop_size[0] // 2 + 1),
            (inp.size(3) // 2 - crop_size[1] // 2) : (inp.size(3) // 2 + crop_size[1] // 2 + 1),
            (inp.size(4) // 2 - crop_size[2] // 2) : (inp.size(4) // 2 + crop_size[2] // 2 + 1),
        ]
>       out_crop = kornia.geometry.transform.center_crop3d(inp, crop_size, align_corners=True)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py:119: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/transform/crop3d.py:77: in center_crop3d
    from .temp import center_crop3d
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    from typing import Tuple
    import torch
    from kornia.geometry.bbox import infer_bbox_shape3d, validate_bbox3d
    from .imgwarp import get_perspective_transform3d, warp_affine3d
    import torch
    import torch.nn.functional as F
    
>   def center_crop3d(volume: torch.Tensor, size: Tuple[int, int, int], interpolation: str='trilinear', align_corners: Optional[bool]=None) -> torch.Tensor:
E   NameError: name 'Optional' is not defined

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/transform/temp.py:8: NameError
_____ TestCenterCrop3D.test_center_crop_357_batch[cpu-float32-crop_size2] ______

self = <test_crop3d.TestCenterCrop3D object at 0x795922d2e320>
crop_size = (7, 3, 5), device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.parametrize("crop_size", [(3, 5, 7), (5, 3, 7), (7, 3, 5)])
    def test_center_crop_357_batch(self, crop_size, device, dtype):
        inp = torch.cat(
            [
                torch.arange(0.0, 343.0, device=device, dtype=dtype).view(1, 1, 7, 7, 7),
                torch.arange(343.0, 686.0, device=device, dtype=dtype).view(1, 1, 7, 7, 7),
            ]
        )
        expected = inp[
            :,
            :,
            (inp.size(2) // 2 - crop_size[0] // 2) : (inp.size(2) // 2 + crop_size[0] // 2 + 1),
            (inp.size(3) // 2 - crop_size[1] // 2) : (inp.size(3) // 2 + crop_size[1] // 2 + 1),
            (inp.size(4) // 2 - crop_size[2] // 2) : (inp.size(4) // 2 + crop_size[2] // 2 + 1),
        ]
>       out_crop = kornia.geometry.transform.center_crop3d(inp, crop_size, align_corners=True)

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py:119: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/transform/crop3d.py:77: in center_crop3d
    from .temp import center_crop3d
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    from typing import Tuple
    import torch
    from kornia.geometry.bbox import infer_bbox_shape3d, validate_bbox3d
    from .imgwarp import get_perspective_transform3d, warp_affine3d
    import torch
    import torch.nn.functional as F
    
>   def center_crop3d(volume: torch.Tensor, size: Tuple[int, int, int], interpolation: str='trilinear', align_corners: Optional[bool]=None) -> torch.Tensor:
E   NameError: name 'Optional' is not defined

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/transform/temp.py:8: NameError
_____________________ TestCenterCrop3D.test_gradcheck[cpu] _____________________

self = <test_crop3d.TestCenterCrop3D object at 0x795922d2f010>
device = device(type='cpu')

    def test_gradcheck(self, device):
        img = torch.arange(0.0, 343.0, device=device, dtype=torch.float64).view(1, 1, 7, 7, 7)
    
>       self.gradcheck(kornia.geometry.transform.center_crop3d, (img, (3, 5, 7)))

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py:125: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/testing/base.py:143: in gradcheck
    return gradcheck(func, inputs, raise_exception=raise_exception, fast_mode=fast_mode, **kwargs)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2052: in gradcheck
    return _gradcheck_helper(**args)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2074: in _gradcheck_helper
    func_out = func(*tupled_inputs)
/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/transform/crop3d.py:77: in center_crop3d
    from .temp import center_crop3d
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    from typing import Tuple
    import torch
    from kornia.geometry.bbox import infer_bbox_shape3d, validate_bbox3d
    from .imgwarp import get_perspective_transform3d, warp_affine3d
    import torch
    import torch.nn.functional as F
    
>   def center_crop3d(volume: torch.Tensor, size: Tuple[int, int, int], interpolation: str='trilinear', align_corners: Optional[bool]=None) -> torch.Tensor:
E   NameError: name 'Optional' is not defined

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/transform/temp.py:8: NameError
______________ TestCenterCrop3D.test_dynamo[cpu-float32-inductor] ______________

self = <test_crop3d.TestCenterCrop3D object at 0x795922d2f3d0>
device = device(type='cpu'), dtype = torch.float32
torch_optimizer = functools.partial(<function compile at 0x7959fc6232e0>, backend='inductor')

    @pytest.mark.skipif(
        torch_version() == "2.1.0",
        reason=(
            "https://github.com/pytorch/pytorch/issues/110680"
            " -  unsupported operand type(s) for @: 'FakeTensor' and 'FakeTensor' on `normalize_homography3d`"
        ),
    )
    def test_dynamo(self, device, dtype, torch_optimizer):
        # Define script
        op = kornia.geometry.transform.center_crop3d
        op_script = torch_optimizer(op)
        img = torch.ones(4, 3, 5, 6, 7, device=device, dtype=dtype)
    
>       actual = op_script(img, (4, 3, 2))

/local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py:465: in _fn
    return fn(*args, **kwargs)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py:1269: in __call__
    return self._torchdynamo_orig_callable(
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py:1064: in __call__
    result = self._inner_convert(
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py:526: in __call__
    return _compile(
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py:952: in _compile
    raise InternalTorchDynamoError(
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py:924: in _compile
    guarded_code = compile_inner(code, one_graph, hooks, transform)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py:666: in compile_inner
    return _compile_inner(code, one_graph, hooks, transform)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/_utils_internal.py:87: in wrapper_function
    return function(*args, **kwargs)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py:699: in _compile_inner
    out_code = transform_code_object(code, transform)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/_dynamo/bytecode_transformation.py:1322: in transform_code_object
    transformations(instructions, code_options)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py:219: in _fn
    return fn(*args, **kwargs)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py:634: in transform
    tracer.run()
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py:2796: in run
    super().run()
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py:983: in run
    while self.step():
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py:895: in step
    self.dispatch_table[inst.opcode](self, inst)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py:1219: in IMPORT_NAME
    value = __import__(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    from typing import Tuple
    import torch
    from kornia.geometry.bbox import infer_bbox_shape3d, validate_bbox3d
    from .imgwarp import get_perspective_transform3d, warp_affine3d
    import torch
    import torch.nn.functional as F
    
>   def center_crop3d(volume: torch.Tensor, size: Tuple[int, int, int], interpolation: str='trilinear', align_corners: Optional[bool]=None) -> torch.Tensor:
E   torch._dynamo.exc.InternalTorchDynamoError: NameError: name 'Optional' is not defined
E   
E   from user code:
E      File "/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/transform/crop3d.py", line 77, in center_crop3d
E       from .temp import center_crop3d
E   
E   Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information
E   
E   
E   You can suppress this exception and fall back to eager by setting:
E       import torch._dynamo
E       torch._dynamo.config.suppress_errors = True

/local/data0/moved_data/publishablew/kornia/kornia/kornia/geometry/transform/temp.py:8: InternalTorchDynamoError
=========================== short test summary info ============================
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size0]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size1]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size2]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size0]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size1]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size2]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_gradcheck[cpu]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_dynamo[cpu-float32-inductor]
============================== 8 failed in 0.49s ===============================


Final Test Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'onnxrt', 'inductor', 'cudagraphs', 'tvm', 'jit', 'openxla', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 8 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size0] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size1] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size2] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size0] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size1] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size2] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_gradcheck[cpu] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_dynamo[cpu-float32-inductor] PASSED

============================== 8 passed in 3.66s ===============================


Initial Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'tvm', 'openxla', 'jit', 'onnxrt', 'inductor', None, 'cudagraphs'}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 8 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size0] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size1] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357[cpu-float32-crop_size2] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size0] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size1] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_center_crop_357_batch[cpu-float32-crop_size2] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_gradcheck[cpu] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/geometry/transform/test_crop3d.py::TestCenterCrop3D::test_dynamo[cpu-float32-inductor] PASSED

============================== 8 passed in 3.68s ===============================
