output file:
processed_korniashift_rgb52.json
function:
shift_rgb
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32]', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu] FAILED', 'FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu]', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32] FAILED', '../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32] FAILED'}

All Test Cases On Generated code:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'inductor', 'tvm', 'cudagraphs', 'jit', 'onnxrt', 'openxla', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 6 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu] FAILED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32] FAILED

=================================== FAILURES ===================================
______________ TestRGBShift.test_rgb_shift_no_shift[cpu-float32] _______________

self = <test_shift_rgb.TestRGBShift object at 0x79e75470cac0>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift_no_shift(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([0]), torch.Tensor([0]), torch.Tensor([0])
        image = torch.rand(2, 3, 5, 5, device=device, dtype=dtype)
        expected = image
>       shifted = kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

/local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[0.6489, 0.2093, 0.4081, 0.5471, 0.9570],
          [0.8567, 0.4379, 0.2427, 0.5063, 0.6220],
          [0.7...03, 0.3263],
          [0.9483, 0.6398, 0.0905, 0.6283, 0.6825],
          [0.9113, 0.5659, 0.6081, 0.2008, 0.4903]]]])
r_shift = tensor([0.]), g_shift = tensor([0.]), b_shift = tensor([0.])

    def shift_rgb(image: torch.Tensor, r_shift: torch.Tensor, g_shift: torch.Tensor, b_shift: torch.Tensor) -> torch.Tensor:
        """
        Shifts the RGB channels of an image tensor.
    
        Args:
            image (torch.Tensor): Input image tensor of shape (N, C, H, W) where C is 3.
            r_shift (torch.Tensor): Shift values for the red channel of shape (N).
            g_shift (torch.Tensor): Shift values for the green channel of shape (N).
            b_shift (torch.Tensor): Shift values for the blue channel of shape (N).
    
        Returns:
            torch.Tensor: Modified image tensor with the same shape as the input.
        """
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor.')
        if image.dim() != 4 or image.size(1) != 3:
            raise ValueError('Image must have shape (N, 3, H, W) for RGB images.')
        if not (isinstance(r_shift, torch.Tensor) and isinstance(g_shift, torch.Tensor) and isinstance(b_shift, torch.Tensor)):
            raise TypeError('Shift values must be torch.Tensors.')
        if r_shift.size(0) != image.size(0) or g_shift.size(0) != image.size(0) or b_shift.size(0) != image.size(0):
>           raise ValueError('Shift tensors must have the same batch size as the image.')
E           ValueError: Shift tensors must have the same batch size as the image.

/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/temp.py:25: ValueError
______________ TestRGBShift.test_rgb_shift_all_zeros[cpu-float32] ______________

self = <test_shift_rgb.TestRGBShift object at 0x79e75470ceb0>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift_all_zeros(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([-0.1]), torch.Tensor([-0.1]), torch.Tensor([-0.1])
        image = torch.zeros(2, 3, 5, 5, device=device, dtype=dtype)
        expected = image
>       shifted = kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

/local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:22: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0.,...0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.]]]])
r_shift = tensor([-0.1000]), g_shift = tensor([-0.1000])
b_shift = tensor([-0.1000])

    def shift_rgb(image: torch.Tensor, r_shift: torch.Tensor, g_shift: torch.Tensor, b_shift: torch.Tensor) -> torch.Tensor:
        """
        Shifts the RGB channels of an image tensor.
    
        Args:
            image (torch.Tensor): Input image tensor of shape (N, C, H, W) where C is 3.
            r_shift (torch.Tensor): Shift values for the red channel of shape (N).
            g_shift (torch.Tensor): Shift values for the green channel of shape (N).
            b_shift (torch.Tensor): Shift values for the blue channel of shape (N).
    
        Returns:
            torch.Tensor: Modified image tensor with the same shape as the input.
        """
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor.')
        if image.dim() != 4 or image.size(1) != 3:
            raise ValueError('Image must have shape (N, 3, H, W) for RGB images.')
        if not (isinstance(r_shift, torch.Tensor) and isinstance(g_shift, torch.Tensor) and isinstance(b_shift, torch.Tensor)):
            raise TypeError('Shift values must be torch.Tensors.')
        if r_shift.size(0) != image.size(0) or g_shift.size(0) != image.size(0) or b_shift.size(0) != image.size(0):
>           raise ValueError('Shift tensors must have the same batch size as the image.')
E           ValueError: Shift tensors must have the same batch size as the image.

/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/temp.py:25: ValueError
______________ TestRGBShift.test_rgb_shift_all_ones[cpu-float32] _______________

self = <test_shift_rgb.TestRGBShift object at 0x79e75470d1e0>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift_all_ones(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([1]), torch.Tensor([1]), torch.Tensor([1])
        image = torch.rand(2, 3, 5, 5, device=device, dtype=dtype)
        expected = torch.ones(2, 3, 5, 5, device=device, dtype=dtype)
>       shifted = kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

/local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[0.8672, 0.8756, 0.8838, 0.1019, 0.8409],
          [0.1206, 0.2058, 0.7013, 0.1130, 0.4325],
          [0.0...28, 0.0820],
          [0.4903, 0.2974, 0.5762, 0.9405, 0.4117],
          [0.8088, 0.0291, 0.9249, 0.2803, 0.1696]]]])
r_shift = tensor([1.]), g_shift = tensor([1.]), b_shift = tensor([1.])

    def shift_rgb(image: torch.Tensor, r_shift: torch.Tensor, g_shift: torch.Tensor, b_shift: torch.Tensor) -> torch.Tensor:
        """
        Shifts the RGB channels of an image tensor.
    
        Args:
            image (torch.Tensor): Input image tensor of shape (N, C, H, W) where C is 3.
            r_shift (torch.Tensor): Shift values for the red channel of shape (N).
            g_shift (torch.Tensor): Shift values for the green channel of shape (N).
            b_shift (torch.Tensor): Shift values for the blue channel of shape (N).
    
        Returns:
            torch.Tensor: Modified image tensor with the same shape as the input.
        """
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor.')
        if image.dim() != 4 or image.size(1) != 3:
            raise ValueError('Image must have shape (N, 3, H, W) for RGB images.')
        if not (isinstance(r_shift, torch.Tensor) and isinstance(g_shift, torch.Tensor) and isinstance(b_shift, torch.Tensor)):
            raise TypeError('Shift values must be torch.Tensors.')
        if r_shift.size(0) != image.size(0) or g_shift.size(0) != image.size(0) or b_shift.size(0) != image.size(0):
>           raise ValueError('Shift tensors must have the same batch size as the image.')
E           ValueError: Shift tensors must have the same batch size as the image.

/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/temp.py:25: ValueError
_______ TestRGBShift.test_rgb_shift_invalid_parameter_shape[cpu-float32] _______

self = <test_shift_rgb.TestRGBShift object at 0x79e75470d510>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift_invalid_parameter_shape(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([0.5]), torch.Tensor([0.5]), torch.Tensor([0.5])
        image = torch.randn(3, 3, device=device, dtype=dtype)
        with pytest.raises(TypeError):
>           kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

/local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[ 0.2572, -0.7178, -0.0117],
        [ 1.1020, -0.8442,  0.7014],
        [ 0.0684,  0.2311, -0.3953]])
r_shift = tensor([0.5000]), g_shift = tensor([0.5000])
b_shift = tensor([0.5000])

    def shift_rgb(image: torch.Tensor, r_shift: torch.Tensor, g_shift: torch.Tensor, b_shift: torch.Tensor) -> torch.Tensor:
        """
        Shifts the RGB channels of an image tensor.
    
        Args:
            image (torch.Tensor): Input image tensor of shape (N, C, H, W) where C is 3.
            r_shift (torch.Tensor): Shift values for the red channel of shape (N).
            g_shift (torch.Tensor): Shift values for the green channel of shape (N).
            b_shift (torch.Tensor): Shift values for the blue channel of shape (N).
    
        Returns:
            torch.Tensor: Modified image tensor with the same shape as the input.
        """
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor.')
        if image.dim() != 4 or image.size(1) != 3:
>           raise ValueError('Image must have shape (N, 3, H, W) for RGB images.')
E           ValueError: Image must have shape (N, 3, H, W) for RGB images.

/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/temp.py:21: ValueError
__________________ TestRGBShift.test_rgb_shift_gradcheck[cpu] __________________

self = <test_shift_rgb.TestRGBShift object at 0x79e75470d810>
device = device(type='cpu')

    def test_rgb_shift_gradcheck(self, device):
        r_shift, g_shift, b_shift = torch.Tensor([0.4]), torch.Tensor([0.5]), torch.Tensor([0.2])
        image = torch.randn(2, 3, 5, 5, device=device, dtype=torch.float64)
>       self.gradcheck(kornia.enhance.shift_rgb, (image, r_shift, g_shift, b_shift))

/local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:43: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/testing/base.py:143: in gradcheck
    return gradcheck(func, inputs, raise_exception=raise_exception, fast_mode=fast_mode, **kwargs)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2052: in gradcheck
    return _gradcheck_helper(**args)
/local/data0/moved_data/publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2074: in _gradcheck_helper
    func_out = func(*tupled_inputs)
/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[ 1.3564,  0.7673,  0.9499,  0.9744, -0.0606],
          [-0.4723, -0.9417, -0.2688,  0.7707,  0.6219],
    ...,  0.4055],
          [-1.0205,  0.9096, -0.6145, -1.0732, -0.3266]]]],
       dtype=torch.float64, requires_grad=True)
r_shift = tensor([0.4000], dtype=torch.float64, requires_grad=True)
g_shift = tensor([0.5000], dtype=torch.float64, requires_grad=True)
b_shift = tensor([0.2000], dtype=torch.float64, requires_grad=True)

    def shift_rgb(image: torch.Tensor, r_shift: torch.Tensor, g_shift: torch.Tensor, b_shift: torch.Tensor) -> torch.Tensor:
        """
        Shifts the RGB channels of an image tensor.
    
        Args:
            image (torch.Tensor): Input image tensor of shape (N, C, H, W) where C is 3.
            r_shift (torch.Tensor): Shift values for the red channel of shape (N).
            g_shift (torch.Tensor): Shift values for the green channel of shape (N).
            b_shift (torch.Tensor): Shift values for the blue channel of shape (N).
    
        Returns:
            torch.Tensor: Modified image tensor with the same shape as the input.
        """
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor.')
        if image.dim() != 4 or image.size(1) != 3:
            raise ValueError('Image must have shape (N, 3, H, W) for RGB images.')
        if not (isinstance(r_shift, torch.Tensor) and isinstance(g_shift, torch.Tensor) and isinstance(b_shift, torch.Tensor)):
            raise TypeError('Shift values must be torch.Tensors.')
        if r_shift.size(0) != image.size(0) or g_shift.size(0) != image.size(0) or b_shift.size(0) != image.size(0):
>           raise ValueError('Shift tensors must have the same batch size as the image.')
E           ValueError: Shift tensors must have the same batch size as the image.

/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/temp.py:25: ValueError
___________________ TestRGBShift.test_rgb_shift[cpu-float32] ___________________

self = <test_shift_rgb.TestRGBShift object at 0x79e75470db10>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([0.1]), torch.Tensor([0.3]), torch.Tensor([-0.3])
        image = torch.tensor(
            [[[[0.2, 0.0]], [[0.3, 0.5]], [[0.4, 0.7]]], [[[0.2, 0.7]], [[0.0, 0.8]], [[0.2, 0.3]]]],
            device=device,
            dtype=dtype,
        )
>       shifted = kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

/local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[0.2000, 0.0000]],

         [[0.3000, 0.5000]],

         [[0.4000, 0.7000]]],


        [[[0.2000, 0.7000]],

         [[0.0000, 0.8000]],

         [[0.2000, 0.3000]]]])
r_shift = tensor([0.1000]), g_shift = tensor([0.3000])
b_shift = tensor([-0.3000])

    def shift_rgb(image: torch.Tensor, r_shift: torch.Tensor, g_shift: torch.Tensor, b_shift: torch.Tensor) -> torch.Tensor:
        """
        Shifts the RGB channels of an image tensor.
    
        Args:
            image (torch.Tensor): Input image tensor of shape (N, C, H, W) where C is 3.
            r_shift (torch.Tensor): Shift values for the red channel of shape (N).
            g_shift (torch.Tensor): Shift values for the green channel of shape (N).
            b_shift (torch.Tensor): Shift values for the blue channel of shape (N).
    
        Returns:
            torch.Tensor: Modified image tensor with the same shape as the input.
        """
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor.')
        if image.dim() != 4 or image.size(1) != 3:
            raise ValueError('Image must have shape (N, 3, H, W) for RGB images.')
        if not (isinstance(r_shift, torch.Tensor) and isinstance(g_shift, torch.Tensor) and isinstance(b_shift, torch.Tensor)):
            raise TypeError('Shift values must be torch.Tensors.')
        if r_shift.size(0) != image.size(0) or g_shift.size(0) != image.size(0) or b_shift.size(0) != image.size(0):
>           raise ValueError('Shift tensors must have the same batch size as the image.')
E           ValueError: Shift tensors must have the same batch size as the image.

/local/data0/moved_data/publishablew/kornia/kornia/kornia/enhance/temp.py:25: ValueError
=========================== short test summary info ============================
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu]
FAILED ../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32]
============================== 6 failed in 0.37s ===============================


Final Test Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'openxla', 'jit', 'tvm', 'cudagraphs', 'inductor', 'onnxrt', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 6 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32] PASSED

============================== 6 passed in 0.16s ===============================


Initial Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'tvm', 'openxla', 'cudagraphs', 'inductor', 'jit', 'onnxrt', None}
model weights cached: []

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1, jaxtyping-0.2.38
collecting ... collected 6 items

../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu] PASSED
../../../../../../local/data0/moved_data/publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32] PASSED

============================== 6 passed in 0.19s ===============================
