stage: Model Construction
task: 
data: 

prompt:
complete the build_layer function for A simple fully connected feed-forward network, otherwise known as a multilayer perceptron (MLP).
it should return layer_list
    Examples
    --------
    >>> model = MultilayerPerceptron(d_input=10, d_hidden=(2,3), d_output=2, dropout=0.0, activation_fn='relu')
    >>> x = torch.ones(2, 10)
    >>> out = model(x)
    >>> print(out.shape)
    torch.Size([2, 2])
    """

    def __init__(self,
                 d_input: int,
                 d_output: int,
                 d_hidden: Optional[tuple] = None,
                 dropout: float = 0.0,
                 batch_norm: bool = False,
                 batch_norm_momentum: float = 0.1,
                 activation_fn: Union[Callable, str] = 'relu',
                 skip_connection: bool = False,
                 weighted_skip: bool = True):
        
        """Initialize the model.

       pass
def build_layers(self):
        """
        Build the layers of the model, iterating through the hidden dimensions to produce a list of layers.

 ground Truth:deepchem/models/torch_models/layers.py

 repo:deepchem

 function:build_layers
 
 test_cases:deepchem/models/tests/test_layers.py::test_multilayer_perceptron
 
 class:MultilayerPerceptron
