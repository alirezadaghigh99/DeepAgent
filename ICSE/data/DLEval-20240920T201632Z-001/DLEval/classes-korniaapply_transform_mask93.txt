stage: Image
task: 
data: Training

prompt:
Generate a Python function `apply_transform_mask` for the class `RandomErasing` that erases a random rectangle in a tensor image according to specified parameters. The function should
```python
class RandomErasing(IntensityAugmentationBase2D):
    def __init__(
        self,
        scale: Union[Tensor, Tuple[float, float]] = (0.02, 0.33),
        ratio: Union[Tensor, Tuple[float, float]] = (0.3, 3.3),
        value: float = 0.0,
        same_on_batch: bool = False,
        p: float = 0.5,
        keepdim: bool = False,
    ) -> None:
        super().__init__(p=p, same_on_batch=same_on_batch, keepdim=keepdim)
        self.scale = scale
        self.ratio = ratio
        self.value = value
        self._param_generator = rg.RectangleEraseGenerator(scale, ratio, value)

    def apply_transform_mask(
        self, input: Tensor, params: Dict[str, Tensor], flags: Dict[str, Any], transform: Optional[Tensor] = None
    ) -> Tensor:
    # params["xs"], params["ys"], params["widths"], params["heights"]
```

 ground Truth:kornia/augmentation/_2d/intensity/erasing.py

 repo:kornia

 function:apply_transform_mask
 
 test_cases:tests/augmentation/test_augmentation.py::TestRectangleRandomErasing
 
 class:RandomErasing
