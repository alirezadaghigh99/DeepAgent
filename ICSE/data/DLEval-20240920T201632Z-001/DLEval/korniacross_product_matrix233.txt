stage: Model Construction
task: 
data: Image

prompt:
Create a Python function `cross_product_matrix` that:

- Constructs the cross-product matrix (a skew-symmetric matrix) for a given vector.
- Accepts a single parameter:
  - `x`: A tensor of shape `(*, 3)` representing the input vector(s).
- Returns a tensor containing the constructed cross-product matrix with shape `(*, 3, 3)`.

Errors:
- Raises an `AssertionError` if the last dimension of the input tensor is not equal to 3.
def cross_product_matrix(x: torch.Tensor) -> torch.Tensor:
      if not x.shape[-1] == 3:
        raise AssertionError(x.shape)
## complete

 ground Truth:kornia/geometry/epipolar/numeric.py#L8

 repo:kornia

 function:cross_product_matrix
 
 test_cases:tests/geometry/epipolar/test_numeric.py::TestSkewSymmetric
