stage: Pre-Post processing
task: 
data: image

prompt:
Create a function `convert_points_to_homogeneous` that converts Euclidean points to homogeneous coordinates. The function takes a tensor `points` with shape `(*, N, D)` and returns a tensor of shape `(*, N, D+1)` representing the points in homogeneous space. It raises a `TypeError` if the input is not a tensor and a `ValueError` if the input tensor has fewer than two dimensions. Additionally, implement `_convert_affinematrix_to_homography_impl` to transform an affine matrix into a homography matrix, ensuring the correct padding and dimensionality.

 ground Truth:kornia/geometry/conversions.py#L185

 repo:kornia

 function:convert_points_to_homogeneous
 
 test_cases:tests/geometry/test_conversions.py::TestConvertPointsToHomogeneous
