stage: 
task: 
data: pre-post process

prompt:
Generate a Python function called `transform` that scales input data based on group-specific normalization parameters. The input is a pandas Series `y`, a pandas DataFrame `X` with group columns, a boolean `return_norm` indicating whether to return the normalization parameters, and an optional `target_scale` tensor. The output is the scaled data and optionally the normalization parameters if `return_norm` is `True`.

```python
class GroupNormalizer(TorchNormalizer):
    def transform(
        self, y: pd.Series, X: pd.DataFrame = None, return_norm: bool = False, target_scale: torch.Tensor = None
    ) -> Union[np.ndarray, Tuple[np.ndarray, np.ndarray]]:
```

 ground Truth:pytorch_forecasting/data/encoders.py

 repo:pytorch-forecasting

 function:transform
 
 test_cases:tests/test_data/test_encoders.py
 
 class:GroupNormalizer
