stage: Image
task: Segmentation
data: pre-post process

prompt:
Generate a Python function called `apply_transform` that applies a transformation matrix to crop 3D volumes. The input is a tensor, a dictionary of parameters, a dictionary of flags, and an optional transformation tensor. The output is the transformed and cropped tensor.

```python
class RandomCrop3D(GeometricAugmentationBase3D):
    def apply_transform(
        self, input: Tensor, params: Dict[str, Tensor], flags: Dict[str, Any], transform: Optional[Tensor] = None
    ) -> Tensor:
```

 ground Truth:kornia/augmentation/_3d/geometric/crop.py

 repo:kornia

 function:apply_transfrom
 
 test_cases:tests/augmentation/test_augmentation_3d.py::TestRandomCrop3D
 
 class:RandomCrop3D
