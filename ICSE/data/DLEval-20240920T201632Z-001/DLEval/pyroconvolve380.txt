stage: Model Construction
task: prediction
data: 

prompt:
Write a python function that Computes the 1-d convolution of signal by kernel using FFTs.
    The two arguments should have the same rightmost dim, but may otherwise be
    arbitrarily broadcastable. :
def convolve(signal, kernel, mode="full"):
    
    """

    :param torch.Tensor signal: A signal to convolve.
    :param torch.Tensor kernel: A convolution kernel.
    :param str mode: One of: 'full', 'valid', 'same'.
    :return: A tensor with broadcasted shape. Letting ``m = signal.size(-1)``
        and ``n = kernel.size(-1)``, the rightmost size of the result will be:
        ``m + n - 1`` if mode is 'full';
        ``max(m, n) - min(m, n) + 1`` if mode is 'valid'; or
        ``max(m, n)`` if mode is 'same'.
    :rtype torch.Tensor:
    """
 

 ground Truth:pyro/ops/tensor_utils.py

 repo:pyro

 function:convolve
 
 test_cases:tests/ops/test_tensor_utils.py::test_convolve

