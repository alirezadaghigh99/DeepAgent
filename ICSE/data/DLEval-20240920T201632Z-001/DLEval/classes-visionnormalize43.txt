stage: Image
task: 
data: pre-post process

prompt:
Generate a Python method `normalize` for the `GeneralizedRCNNTransform` class. This method normalizes an input image by subtracting the mean and dividing by the standard deviation. The mean and standard deviation values should be provided as lists during the class initialization. The method should return the normalized image.if not image.is_floating_point():
            raise TypeError(
                f"Expected input images to be of floating type (in range [0, 1]), "
                f"but found type {image.dtype} instead"
            )

Class structure:

```python
class GeneralizedRCNNTransform(nn.Module):
    def __init__(self, min_size: int, max_size: int, image_mean: List[float], image_std: List[float], size_divisible: int = 32, fixed_size: Optional[Tuple[int, int]] = None, **kwargs: Any):
        self.min_size = min_size  # Minimum size for image resizing
        self.max_size = max_size  # Maximum size for image resizing
        self.image_mean = image_mean  # Mean for image normalization
        self.image_std = image_std  # Standard deviation for image normalization
        self.size_divisible = size_divisible  # Size divisibility for batching
        self.fixed_size = fixed_size  # Fixed size for images (optional)
        self._skip_resize = kwargs.pop("_skip_resize", False)  # Skip resizing if set to True

    def normalize(self, image: Tensor) -> Tensor:
        # Normalize the input image using the stored mean and standard deviation

    def resize(self, image: Tensor, target: Optional[Dict[str, Tensor]] = None) -> Tuple[Tensor, Optional[Dict[str, Tensor]]]:
        # Resize the input image and target (if provided) based on the specified size constraints

    def batch_images(self, images: List[Tensor], size_divisible: int = 32) -> Tensor:
        # Batch the list of images into a single tensor, ensuring that all images have the same dimensions

 ground Truth:torchvision/models/detection/transform.py

 repo:vision

 function:normalize
 
 class:GeneralizedRCNNTransform
 
 test_cases:test/test_models_detection_utils.py::TestModelsDetectionUtils
