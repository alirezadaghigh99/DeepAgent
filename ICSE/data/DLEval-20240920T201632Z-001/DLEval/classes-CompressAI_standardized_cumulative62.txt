stage: 
task: 
data: Evaluation/metrics

prompt:
Generate a Python method `_standardized_cumulative` for the `GaussianConditional` class that computes the standardized cumulative distribution function (CDF) for the input tensor `inputs`. The method should calculate this using the complementary error function (`torch.erfc`) to maximize numerical precision. The result should be scaled by 0.5.

Class structure:

```python
class GaussianConditional(EntropyModel):
    def __init__(
        self,
        scale_table: Optional[Union[List, Tuple]],
        *args: Any,
        scale_bound: float = 0.11,
        tail_mass: float = 1e-9,
        **kwargs: Any,
    ):
        self.tail_mass = float(tail_mass)
        self.lower_bound_scale = LowerBound(scale_bound)

    def _standardized_cumulative(self, inputs: Tensor) -> Tensor:
        # Implement the function as described in the prompt

 ground Truth:compressai/entropy_models/entropy_models.py

 repo:CompressAI

 function:_standardized_cumulative
 
 class:GaussianConditional
