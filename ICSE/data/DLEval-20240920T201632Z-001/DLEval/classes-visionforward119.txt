stage: Image
task: 
data: Training

prompt:
Generate a Python function called `forward` that performs a random perspective transformation on an input image with a given probability. The input is a PIL Image or Tensor expected to have shape [..., H, W], and the output is a randomly transformed image of the same type and shape.

```python
class RandomPerspectiveTransform:
    def __init__(self, distortion_scale=0.5, p=0.5, interpolation=InterpolationMode.BILINEAR, fill=0):
        super().__init__()
        self.p = p

        if isinstance(interpolation, int):
            interpolation = _interpolation_modes_from_int(interpolation)

        self.interpolation = interpolation
        self.distortion_scale = distortion_scale

        if fill is None:
            fill = 0
        elif not isinstance(fill, (Sequence, numbers.Number)):
            raise TypeError("Fill should be either a sequence or a number.")

        self.fill = fill

    def forward(self, img):
```

 ground Truth:torchvision/transforms/transforms.py

 repo:vision

 function:forward
 
 class:RandomPerspectiveTransform
 
 test_cases:test/test_transforms.py::test_randomperspective_fill
